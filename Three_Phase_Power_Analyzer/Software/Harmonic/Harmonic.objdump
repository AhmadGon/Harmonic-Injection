
Harmonic.elf:     file format elf32-littlenios2
Harmonic.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00220244

Program Header:
    LOAD off    0x00001000 vaddr 0x00220000 paddr 0x00220000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00220020 paddr 0x00220020 align 2**12
         filesz 0x00010ff8 memsz 0x00010ff8 flags r-x
    LOAD off    0x00012018 vaddr 0x00231018 paddr 0x00232c10 align 2**12
         filesz 0x00001bf8 memsz 0x00001bf8 flags rw-
    LOAD off    0x00014808 vaddr 0x00234808 paddr 0x00234808 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00220000  00220000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00220020  00220020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010920  00220244  00220244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000004b4  00230b64  00230b64  00011b64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bf8  00231018  00232c10  00012018  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00234808  00234808  00014808  2**2
                  ALLOC, SMALL_DATA
  6 .OnChip_Memory 00000000  00234968  00234968  00013c10  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013c10  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001028  00000000  00000000  00013c38  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00029047  00000000  00000000  00014c60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a30c  00000000  00000000  0003dca7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c9fe  00000000  00000000  00047fb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002464  00000000  00000000  000549b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003db5  00000000  00000000  00056e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00018550  00000000  00000000  0005abcd  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00073120  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000019b8  00000000  00000000  00073150  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000780de  2**0
                  CONTENTS, READONLY
 18 .cpu          00000006  00000000  00000000  000780e1  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000780e7  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000780e8  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000780e9  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000780ed  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000780f1  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000004  00000000  00000000  000780f5  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000004  00000000  00000000  000780f9  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000004  00000000  00000000  000780fd  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000019  00000000  00000000  00078101  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000030  00000000  00000000  0007811a  2**0
                  CONTENTS, READONLY
 29 .jdi          000062b9  00000000  00000000  0007814a  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000a1a9d  00000000  00000000  0007e403  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00220000 l    d  .entry	00000000 .entry
00220020 l    d  .exceptions	00000000 .exceptions
00220244 l    d  .text	00000000 .text
00230b64 l    d  .rodata	00000000 .rodata
00231018 l    d  .rwdata	00000000 .rwdata
00234808 l    d  .bss	00000000 .bss
00234968 l    d  .OnChip_Memory	00000000 .OnChip_Memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Harmonic_bsp//obj/HAL/src/crt0.o
0022028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00220290 l     F .text	00000034 alt_dev_reg
00231018 l     O .rwdata	00001060 JTAG
00232078 l     O .rwdata	00000028 altera_hostfs
002320a0 l     O .rwdata	00000048 Character_Buffer
002320e8 l     O .rwdata	00000054 Pixel_Buffer
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00220cfc l     F .text	00000008 __fp_unlock
00220d10 l     F .text	0000019c __sinit.part.1
00220eac l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0023213c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 itoa.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
0022291c l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 utoa.c
00000000 l    df *ABS*	00000000 vfprintf.c
00230d62 l     O .rodata	00000010 zeroes.4404
002250a4 l     F .text	000000bc __sbprintf
00230d72 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
00225368 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00232988 l     O .rwdata	00000020 lc_ctype_charset
00232968 l     O .rwdata	00000020 lc_message_charset
002329a8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00230da0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00228d80 l     F .text	000000fc __sprint_r.part.0
00230ed4 l     O .rodata	00000010 blanks.4348
00230ec4 l     O .rodata	00000010 zeroes.4349
0022a30c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0022dca0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0022ddac l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0022ddd8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0022df38 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0022e024 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0022e104 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0022e1f0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0022e3c4 l     F .text	0000003c alt_get_errno
0022e400 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
0022e618 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00232bb8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0022e864 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0022ebe0 l     F .text	0000020c altera_avalon_jtag_uart_irq
0022edec l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0022f424 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_hostfs.c
00232bbc l     O .rwdata	00000009 hcinfo.2538
00232bc8 l     O .rwdata	0000000a hcinfo.2551
00232bd4 l     O .rwdata	00000009 hcinfo.2560
00232be0 l     O .rwdata	0000000a hcinfo.2573
00232bec l     O .rwdata	0000000a hcinfo.2586
00232bf8 l     O .rwdata	0000000a hcinfo.2612
00000000 l    df *ABS*	00000000 altera_up_avalon_video_character_buffer_with_dma.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
002303c0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0023483c g     O .bss	00000004 alt_instruction_exception_handler
002284f4 g     F .text	00000074 _mprec_log10
002285e0 g     F .text	0000008c __any_on
00227158 g     F .text	00000054 _isatty_r
00230dac g     O .rodata	00000028 __mprec_tinytens
0022e300 g     F .text	0000007c alt_main
00222848 g     F .text	000000c0 _puts_r
00234868 g     O .bss	00000100 alt_irq
00227288 g     F .text	00000060 _lseek_r
00232c10 g       *ABS*	00000000 __flash_rwdata_start
00226bf0 g     F .text	000000ac __sflags
0022c7cc g     F .text	00000088 .hidden __eqdf2
00234968 g       *ABS*	00000000 __alt_heap_start
0022a7ec g     F .text	0000009c _wcrtomb_r
00222c38 g     F .text	0000005c __sseek
0022104c g     F .text	00000010 __sinit
0022fb24 g     F .text	000000fc alt_up_char_buffer_string
0022a694 g     F .text	00000140 __swbuf_r
002271ac g     F .text	0000007c _setlocale_r
00220eb4 g     F .text	00000068 __sfmoreglue
0022e3a0 g     F .text	00000024 __malloc_unlock
0022f518 g     F .text	0000011c alt_hostfs_open
0022fa58 g     F .text	000000cc alt_up_char_buffer_draw
00227514 g     F .text	0000015c memmove
00221034 g     F .text	00000018 _cleanup
00227670 g     F .text	000000a8 _Balloc
0022c854 g     F .text	000000dc .hidden __gtdf2
0022e998 g     F .text	00000024 altera_nios2_gen2_irq_init
00220000 g     F .entry	0000001c __reset
00220020 g       *ABS*	00000000 __flash_exceptions_start
00221aa8 g     F .text	0000005c _fstat_r
00234808 g     O .bss	00000004 errno
00222bb4 g     F .text	00000008 __seofread
00234828 g     O .bss	00000004 alt_argv
0023ab88 g       *ABS*	00000000 _gp
00220000 g       *ABS*	00000000 __alt_mem_OnChip_Memory
00232a08 g     O .rwdata	00000180 alt_fd_list
0022f750 g     F .text	00000068 alt_hostfs_seek
0022feb0 g     F .text	00000090 alt_find_dev
002273cc g     F .text	00000148 memcpy
0022fc20 g     F .text	0000005c alt_up_char_buffer_clear
00220d04 g     F .text	0000000c _cleanup_r
0022dab8 g     F .text	000000dc .hidden __floatsidf
0022deb8 g     F .text	00000080 alt_fs_reg
00230484 g     F .text	0000007c alt_io_redirect
0022c930 g     F .text	000000f4 .hidden __ltdf2
00230b64 g       *ABS*	00000000 __DTOR_END__
00222908 g     F .text	00000014 puts
00230734 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00228c30 g     F .text	00000074 __fpclassifyd
00228450 g     F .text	000000a4 __ratio
0022a2f0 g     F .text	0000001c __vfiprintf_internal
0022efe4 g     F .text	0000021c altera_avalon_jtag_uart_read
0022b57c g     F .text	00000064 .hidden __udivsi3
0022e060 g     F .text	000000a4 isatty
00230dfc g     O .rodata	000000c8 __mprec_tens
00227228 g     F .text	0000000c __locale_charset
002306a4 g     F .text	00000090 alt_icache_flush
00234814 g     O .bss	00000004 __malloc_top_pad
00232b98 g     O .rwdata	00000004 __mb_cur_max
00221cf4 g     F .text	00000004 itoa
00227258 g     F .text	0000000c _localeconv_r
00227a7c g     F .text	0000003c __i2b
00226c9c g     F .text	000004bc __sfvwrite_r
00222b0c g     F .text	00000054 _sbrk_r
0022f678 g     F .text	0000006c alt_hostfs_read
0022866c g     F .text	00000060 _read_r
00232bb0 g     O .rwdata	00000004 alt_max_fd
00220950 g     F .text	000000f0 _fclose_r
00220ccc g     F .text	00000030 fflush
00234810 g     O .bss	00000004 __malloc_max_sbrked_mem
0022b638 g     F .text	000008ac .hidden __adddf3
002281f8 g     F .text	0000010c __b2d
0022af4c g     F .text	00000538 .hidden __umoddi3
0022e22c g     F .text	000000d4 lseek
00232b88 g     O .rwdata	00000004 _global_impure_ptr
002286cc g     F .text	00000564 _realloc_r
00234968 g       *ABS*	00000000 __bss_end
002302d0 g     F .text	000000f0 alt_iic_isr_register
0023059c g     F .text	00000108 alt_tick
0022a9d4 g     F .text	00000578 .hidden __udivdi3
0022a5f0 g     F .text	00000024 _fputwc_r
00230dd4 g     O .rodata	00000028 __mprec_bigtens
00227860 g     F .text	00000104 __s2b
0022db94 g     F .text	000000a8 .hidden __floatunsidf
00227f38 g     F .text	00000060 __mcmp
0022106c g     F .text	00000018 __fp_lock_all
00230284 g     F .text	0000004c alt_ic_irq_enabled
00230500 g     F .text	0000009c alt_alarm_stop
00234830 g     O .bss	00000004 alt_irq_active
00221648 g     F .text	00000444 _fseeko_r
0022f634 g     F .text	00000044 alt_hostfs_close
002200fc g     F .exceptions	000000d4 alt_irq_handler
002329e0 g     O .rwdata	00000028 alt_dev_null
0022fda8 g     F .text	00000048 alt_dcache_flush_all
00227964 g     F .text	00000068 __hi0bits
00222e8c g     F .text	00000004 utoa
0022da38 g     F .text	00000080 .hidden __fixdfsi
00232c10 g       *ABS*	00000000 __ram_rwdata_end
00232ba8 g     O .rwdata	00000008 alt_dev_list
0022e8a0 g     F .text	000000f8 write
00231018 g       *ABS*	00000000 __ram_rodata_end
0022df74 g     F .text	000000b0 fstat
002211d0 g     F .text	00000024 fprintf
0022c930 g     F .text	000000f4 .hidden __ledf2
00227cb0 g     F .text	00000140 __pow5mult
00228e94 g     F .text	0000145c ___vfiprintf_internal_r
00234820 g     O .bss	00000004 __nlocale_changed
0022b5e0 g     F .text	00000058 .hidden __umodsi3
00234968 g       *ABS*	00000000 end
00221a8c g     F .text	0000001c fseeko
0022f99c g     F .text	00000080 alt_up_char_buffer_init
00221c8c g     F .text	00000068 __itoa
0022162c g     F .text	0000001c fseek
0022eb20 g     F .text	000000c0 altera_avalon_jtag_uart_init
002201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00230b64 g       *ABS*	00000000 __CTOR_LIST__
002386a0 g       *ABS*	00000000 __alt_stack_pointer
0022f49c g     F .text	0000007c alt_avalon_timer_sc_init
0022dc3c g     F .text	00000064 .hidden __clzsi2
0022f200 g     F .text	00000224 altera_avalon_jtag_uart_write
0022105c g     F .text	00000004 __sfp_lock_acquire
002272e8 g     F .text	000000e4 memchr
00222e90 g     F .text	000021f8 ___vfprintf_internal_r
00221318 g     F .text	00000310 _free_r
00227234 g     F .text	00000010 __locale_mb_cur_max
002309b0 g     F .text	00000180 __call_exitprocs
0023481c g     O .bss	00000004 __mlocale_changed
00232b90 g     O .rwdata	00000004 __malloc_sbrk_base
00220244 g     F .text	0000004c _start
00234834 g     O .bss	00000004 _alt_tick_rate
00227df0 g     F .text	00000148 __lshift
00234838 g     O .bss	00000004 _alt_nticks
0022e654 g     F .text	000000fc read
002202fc g     F .text	00000304 alt_sys_init
002227e8 g     F .text	00000060 _open_r
00230898 g     F .text	00000118 __register_exitproc
00227ab8 g     F .text	000001f8 __multiply
0022ee8c g     F .text	00000068 altera_avalon_jtag_uart_close
00231018 g       *ABS*	00000000 __ram_rwdata_start
00230b64 g       *ABS*	00000000 __ram_rodata_start
00234840 g     O .bss	00000028 __malloc_current_mallinfo
00228304 g     F .text	0000014c __d2b
0022e9bc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00230048 g     F .text	000000a4 alt_get_fd
00225314 g     F .text	00000054 _close_r
0023081c g     F .text	0000007c memcmp
0022ea7c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00234968 g       *ABS*	00000000 __alt_stack_base
0022eacc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
002251c0 g     F .text	00000154 __swsetup_r
0022bee4 g     F .text	000008e8 .hidden __divdf3
00220f1c g     F .text	00000118 __sfp
00228568 g     F .text	00000078 __copybits
00232560 g     O .rwdata	00000408 __malloc_av_
00221068 g     F .text	00000004 __sinit_lock_release
0022ca24 g     F .text	00000718 .hidden __muldf3
00222b60 g     F .text	00000054 __sread
0022ff40 g     F .text	00000108 alt_find_file
0022de14 g     F .text	000000a4 alt_dev_llist_insert
0022e37c g     F .text	00000024 __malloc_lock
002211a8 g     F .text	00000028 _fprintf_r
0022e7b4 g     F .text	000000b0 sbrk
00220c70 g     F .text	0000005c _fflush_r
0022a3c8 g     F .text	000000c4 _calloc_r
00222d34 g     F .text	00000158 __utoa
00221190 g     F .text	00000018 fopen
00234808 g       *ABS*	00000000 __bss_start
002226c0 g     F .text	00000128 memset
00220600 g     F .text	00000350 main
0023482c g     O .bss	00000004 alt_envp
0023480c g     O .bss	00000004 __malloc_max_total_mem
0022fa1c g     F .text	0000003c alt_up_char_buffer_open_dev
0022ea1c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0022a7d4 g     F .text	00000018 __swbuf
00222c94 g     F .text	00000008 __sclose
002386a0 g       *ABS*	00000000 __alt_heap_limit
00220a40 g     F .text	00000014 fclose
00225568 g     F .text	00001688 _dtoa_r
00221eb4 g     F .text	0000080c _malloc_r
0022a948 g     F .text	00000030 __ascii_wctomb
00232bb4 g     O .rwdata	00000004 alt_errno
00221b04 g     F .text	000000c4 _fwalk
0022b484 g     F .text	00000084 .hidden __divsi3
002211f4 g     F .text	00000124 _malloc_trim_r
00230b64 g       *ABS*	00000000 __CTOR_END__
00228ca4 g     F .text	000000dc strcmp
00230b64 g       *ABS*	00000000 __flash_rodata_start
00230b64 g       *ABS*	00000000 __DTOR_LIST__
0022c7cc g     F .text	00000088 .hidden __nedf2
002202c4 g     F .text	00000038 alt_irq_init
0022e750 g     F .text	00000064 alt_release_fd
00230ee4 g     O .rodata	00000100 .hidden __clz_tab
00234818 g     O .bss	00000004 _PathLocale
002307d0 g     F .text	00000014 atexit
00225160 g     F .text	00000060 _write_r
00227264 g     F .text	00000018 setlocale
00232b8c g     O .rwdata	00000004 _impure_ptr
00234824 g     O .bss	00000004 alt_argc
00220a54 g     F .text	0000021c __sflush_r
0022fe50 g     F .text	00000060 _do_dtors
00227250 g     F .text	00000008 __locale_cjk_lang
00221628 g     F .text	00000004 _fseek_r
00222938 g     F .text	000001d4 __srefill_r
00220020 g       .exceptions	00000000 alt_irq_entry
00228194 g     F .text	00000064 __ulp
00221084 g     F .text	00000018 __fp_unlock_all
00232ba0 g     O .rwdata	00000008 alt_fs_list
0022f6e4 g     F .text	0000006c alt_hostfs_write
00220020 g       *ABS*	00000000 __ram_exceptions_start
0022727c g     F .text	0000000c localeconv
00230120 g     F .text	00000050 alt_ic_isr_register
00232c10 g       *ABS*	00000000 _edata
00234968 g       *ABS*	00000000 _end
0022a48c g     F .text	00000164 __fputwc
00220244 g       *ABS*	00000000 __ram_exceptions_end
0022eef4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
002301f8 g     F .text	0000008c alt_ic_irq_disable
00222bbc g     F .text	0000007c __swrite
00232b94 g     O .rwdata	00000004 __malloc_trim_threshold
00227244 g     F .text	0000000c __locale_msgcharset
002307e4 g     F .text	00000038 exit
00221bc8 g     F .text	000000c4 _fwalk_reent
00227f98 g     F .text	000001fc __mdiff
0022b508 g     F .text	00000074 .hidden __modsi3
002386a0 g       *ABS*	00000000 __alt_data_end
00220020 g     F .exceptions	00000000 alt_exception
00221060 g     F .text	00000004 __sfp_lock_release
0022109c g     F .text	000000f4 _fopen_r
00230b30 g     F .text	00000034 _exit
0022fc7c g     F .text	0000012c alt_alarm_start
00221cf8 g     F .text	000001bc __smakebuf_r
00222c9c g     F .text	00000098 strlen
0022e4c4 g     F .text	00000154 open
0022c854 g     F .text	000000dc .hidden __gedf2
00232b9c g     O .rwdata	00000004 __wctomb
00228e7c g     F .text	00000018 __sprint_r
002300ec g     F .text	00000034 alt_icache_flush_all
00232c04 g     O .rwdata	00000004 alt_priority_mask
00230170 g     F .text	00000088 alt_ic_irq_enable
00225088 g     F .text	0000001c __vfprintf_internal
0022a978 g     F .text	0000005c _wctomb_r
0022d13c g     F .text	000008fc .hidden __subdf3
002279cc g     F .text	000000b0 __lo0bits
00232c08 g     O .rwdata	00000008 alt_alarm_list
0022fdf0 g     F .text	00000060 _do_ctors
0022a888 g     F .text	000000c0 wcrtomb
0022dcdc g     F .text	000000d0 close
0022e16c g     F .text	00000084 alt_load
0022a614 g     F .text	00000080 fputwc
00221064 g     F .text	00000004 __sinit_lock_acquire
00227740 g     F .text	00000120 __multadd
00227718 g     F .text	00000028 _Bfree
0022f7b8 g     F .text	000001e4 alt_hostfs_fstat



Disassembly of section .entry:

00220000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  220000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  220004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  220008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  22000c:	00bffd16 	blt	zero,r2,220004 <_gp+0xfffe547c>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  220010:	004008b4 	movhi	at,34
    ori r1, r1, %lo(_start)
  220014:	08409114 	ori	at,at,580
    jmp r1
  220018:	0800683a 	jmp	at
  22001c:	00000000 	call	0 <__alt_mem_OnChip_Memory-0x220000>

Disassembly of section .exceptions:

00220020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  220020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  220024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  220028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  22002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  220030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  220034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  220038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  22003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  220040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  220044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  220048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  22004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  220050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  220054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  220058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  22005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  220060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  220064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  220068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  22006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  220070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  220074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  220078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  22007c:	10000326 	beq	r2,zero,22008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  220080:	20000226 	beq	r4,zero,22008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  220084:	02200fc0 	call	2200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  220088:	00000706 	br	2200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  22008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  220090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  220094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  220098:	02201d00 	call	2201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  22009c:	1000021e 	bne	r2,zero,2200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  2200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  2200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  2200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  2200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  2200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  2200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  2200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  2200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  2200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  2200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  2200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  2200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  2200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  2200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  2200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  2200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  2200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  2200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  2200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  2200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  2200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  2200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  2200f8:	ef80083a 	eret

002200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  2200fc:	defff904 	addi	sp,sp,-28
  220100:	dfc00615 	stw	ra,24(sp)
  220104:	df000515 	stw	fp,20(sp)
  220108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  22010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  220110:	0005313a 	rdctl	r2,ipending
  220114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  220118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  22011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  220120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  220124:	00800044 	movi	r2,1
  220128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  22012c:	e0fffb17 	ldw	r3,-20(fp)
  220130:	e0bffc17 	ldw	r2,-16(fp)
  220134:	1884703a 	and	r2,r3,r2
  220138:	10001426 	beq	r2,zero,22018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  22013c:	008008f4 	movhi	r2,35
  220140:	10921a04 	addi	r2,r2,18536
  220144:	e0fffd17 	ldw	r3,-12(fp)
  220148:	180690fa 	slli	r3,r3,3
  22014c:	10c5883a 	add	r2,r2,r3
  220150:	10c00017 	ldw	r3,0(r2)
  220154:	008008f4 	movhi	r2,35
  220158:	10921a04 	addi	r2,r2,18536
  22015c:	e13ffd17 	ldw	r4,-12(fp)
  220160:	200890fa 	slli	r4,r4,3
  220164:	1105883a 	add	r2,r2,r4
  220168:	10800104 	addi	r2,r2,4
  22016c:	10800017 	ldw	r2,0(r2)
  220170:	1009883a 	mov	r4,r2
  220174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  220178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  22017c:	0005313a 	rdctl	r2,ipending
  220180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  220184:	e0bfff17 	ldw	r2,-4(fp)
  220188:	00000706 	br	2201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  22018c:	e0bffc17 	ldw	r2,-16(fp)
  220190:	1085883a 	add	r2,r2,r2
  220194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  220198:	e0bffd17 	ldw	r2,-12(fp)
  22019c:	10800044 	addi	r2,r2,1
  2201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  2201a4:	003fe106 	br	22012c <_gp+0xfffe55a4>

    active = alt_irq_pending ();
  2201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  2201ac:	e0bffb17 	ldw	r2,-20(fp)
  2201b0:	103fdb1e 	bne	r2,zero,220120 <_gp+0xfffe5598>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  2201b4:	0001883a 	nop
}
  2201b8:	0001883a 	nop
  2201bc:	e037883a 	mov	sp,fp
  2201c0:	dfc00117 	ldw	ra,4(sp)
  2201c4:	df000017 	ldw	fp,0(sp)
  2201c8:	dec00204 	addi	sp,sp,8
  2201cc:	f800283a 	ret

002201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  2201d0:	defffb04 	addi	sp,sp,-20
  2201d4:	dfc00415 	stw	ra,16(sp)
  2201d8:	df000315 	stw	fp,12(sp)
  2201dc:	df000304 	addi	fp,sp,12
  2201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  2201e4:	000531fa 	rdctl	r2,exception
  2201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  2201ec:	e0bffd17 	ldw	r2,-12(fp)
  2201f0:	10801f0c 	andi	r2,r2,124
  2201f4:	1004d0ba 	srli	r2,r2,2
  2201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  2201fc:	0005333a 	rdctl	r2,badaddr
  220200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  220204:	d0a72d17 	ldw	r2,-25420(gp)
  220208:	10000726 	beq	r2,zero,220228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  22020c:	d0a72d17 	ldw	r2,-25420(gp)
  220210:	e0fffd17 	ldw	r3,-12(fp)
  220214:	e1bffe17 	ldw	r6,-8(fp)
  220218:	e17fff17 	ldw	r5,-4(fp)
  22021c:	1809883a 	mov	r4,r3
  220220:	103ee83a 	callr	r2
  220224:	00000206 	br	220230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  220228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  22022c:	0005883a 	mov	r2,zero
}
  220230:	e037883a 	mov	sp,fp
  220234:	dfc00117 	ldw	ra,4(sp)
  220238:	df000017 	ldw	fp,0(sp)
  22023c:	dec00204 	addi	sp,sp,8
  220240:	f800283a 	ret

Disassembly of section .text:

00220244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  220244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  220248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  22024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  220250:	00bffd16 	blt	zero,r2,220248 <_gp+0xfffe56c0>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  220254:	06c008f4 	movhi	sp,35
    ori sp, sp, %lo(__alt_stack_pointer)
  220258:	dee1a814 	ori	sp,sp,34464
    movhi gp, %hi(_gp)
  22025c:	068008f4 	movhi	gp,35
    ori gp, gp, %lo(_gp)
  220260:	d6aae214 	ori	gp,gp,43912
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  220264:	008008f4 	movhi	r2,35
    ori r2, r2, %lo(__bss_start)
  220268:	10920214 	ori	r2,r2,18440

    movhi r3, %hi(__bss_end)
  22026c:	00c008f4 	movhi	r3,35
    ori r3, r3, %lo(__bss_end)
  220270:	18d25a14 	ori	r3,r3,18792

    beq r2, r3, 1f
  220274:	10c00326 	beq	r2,r3,220284 <_start+0x40>

0:
    stw zero, (r2)
  220278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  22027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  220280:	10fffd36 	bltu	r2,r3,220278 <_gp+0xfffe56f0>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  220284:	022e16c0 	call	22e16c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  220288:	022e3000 	call	22e300 <alt_main>

0022028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  22028c:	003fff06 	br	22028c <_gp+0xfffe5704>

00220290 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  220290:	defffd04 	addi	sp,sp,-12
  220294:	dfc00215 	stw	ra,8(sp)
  220298:	df000115 	stw	fp,4(sp)
  22029c:	df000104 	addi	fp,sp,4
  2202a0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  2202a4:	d1600804 	addi	r5,gp,-32736
  2202a8:	e13fff17 	ldw	r4,-4(fp)
  2202ac:	022de140 	call	22de14 <alt_dev_llist_insert>
}
  2202b0:	e037883a 	mov	sp,fp
  2202b4:	dfc00117 	ldw	ra,4(sp)
  2202b8:	df000017 	ldw	fp,0(sp)
  2202bc:	dec00204 	addi	sp,sp,8
  2202c0:	f800283a 	ret

002202c4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  2202c4:	defffd04 	addi	sp,sp,-12
  2202c8:	dfc00215 	stw	ra,8(sp)
  2202cc:	df000115 	stw	fp,4(sp)
  2202d0:	df000104 	addi	fp,sp,4
  2202d4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOSII, NiosII);
  2202d8:	022e9980 	call	22e998 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  2202dc:	00800044 	movi	r2,1
  2202e0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  2202e4:	0001883a 	nop
  2202e8:	e037883a 	mov	sp,fp
  2202ec:	dfc00117 	ldw	ra,4(sp)
  2202f0:	df000017 	ldw	fp,0(sp)
  2202f4:	dec00204 	addi	sp,sp,8
  2202f8:	f800283a 	ret

002202fc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  2202fc:	defffd04 	addi	sp,sp,-12
  220300:	dfc00215 	stw	ra,8(sp)
  220304:	df000115 	stw	fp,4(sp)
  220308:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_TIMER_INIT ( TIMER, Timer);
  22030c:	01c0fa04 	movi	r7,1000
  220310:	01800044 	movi	r6,1
  220314:	000b883a 	mov	r5,zero
  220318:	01000934 	movhi	r4,36
  22031c:	210c0004 	addi	r4,r4,12288
  220320:	022f49c0 	call	22f49c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG, JTAG);
  220324:	000d883a 	mov	r6,zero
  220328:	000b883a 	mov	r5,zero
  22032c:	010008f4 	movhi	r4,35
  220330:	21041004 	addi	r4,r4,4160
  220334:	022eb200 	call	22eb20 <altera_avalon_jtag_uart_init>
  220338:	010008f4 	movhi	r4,35
  22033c:	21040604 	addi	r4,r4,4120
  220340:	02202900 	call	220290 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSTEM_ID, System_ID);
  220344:	0001883a 	nop
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
  220348:	010008f4 	movhi	r4,35
  22034c:	21081e04 	addi	r4,r4,8312
  220350:	022deb80 	call	22deb8 <alt_fs_reg>
    ALTERA_UP_AVALON_VIDEO_CHARACTER_BUFFER_WITH_DMA_INIT ( CHARACTER_BUFFER, Character_Buffer);
  220354:	008008f4 	movhi	r2,35
  220358:	10882804 	addi	r2,r2,8352
  22035c:	10800a17 	ldw	r2,40(r2)
  220360:	10800104 	addi	r2,r2,4
  220364:	10800017 	ldw	r2,0(r2)
  220368:	10ffffcc 	andi	r3,r2,65535
  22036c:	008008f4 	movhi	r2,35
  220370:	10882804 	addi	r2,r2,8352
  220374:	10c00c15 	stw	r3,48(r2)
  220378:	008008f4 	movhi	r2,35
  22037c:	10882804 	addi	r2,r2,8352
  220380:	10800a17 	ldw	r2,40(r2)
  220384:	10800104 	addi	r2,r2,4
  220388:	10800017 	ldw	r2,0(r2)
  22038c:	1006d43a 	srli	r3,r2,16
  220390:	008008f4 	movhi	r2,35
  220394:	10882804 	addi	r2,r2,8352
  220398:	10c00d15 	stw	r3,52(r2)
  22039c:	008008f4 	movhi	r2,35
  2203a0:	10882804 	addi	r2,r2,8352
  2203a4:	10800c17 	ldw	r2,48(r2)
  2203a8:	10801068 	cmpgeui	r2,r2,65
  2203ac:	1000081e 	bne	r2,zero,2203d0 <alt_sys_init+0xd4>
  2203b0:	008008f4 	movhi	r2,35
  2203b4:	10882804 	addi	r2,r2,8352
  2203b8:	00c00fc4 	movi	r3,63
  2203bc:	10c00f15 	stw	r3,60(r2)
  2203c0:	008008f4 	movhi	r2,35
  2203c4:	10882804 	addi	r2,r2,8352
  2203c8:	00c00184 	movi	r3,6
  2203cc:	10c01015 	stw	r3,64(r2)
  2203d0:	008008f4 	movhi	r2,35
  2203d4:	10882804 	addi	r2,r2,8352
  2203d8:	10800d17 	ldw	r2,52(r2)
  2203dc:	10800868 	cmpgeui	r2,r2,33
  2203e0:	1000041e 	bne	r2,zero,2203f4 <alt_sys_init+0xf8>
  2203e4:	008008f4 	movhi	r2,35
  2203e8:	10882804 	addi	r2,r2,8352
  2203ec:	00c007c4 	movi	r3,31
  2203f0:	10c01115 	stw	r3,68(r2)
  2203f4:	010008f4 	movhi	r4,35
  2203f8:	21082804 	addi	r4,r4,8352
  2203fc:	022f99c0 	call	22f99c <alt_up_char_buffer_init>
  220400:	010008f4 	movhi	r4,35
  220404:	21082804 	addi	r4,r4,8352
  220408:	02202900 	call	220290 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_PIXEL_BUFFER_DMA_INIT ( PIXEL_BUFFER, Pixel_Buffer);
  22040c:	008008f4 	movhi	r2,35
  220410:	10883a04 	addi	r2,r2,8424
  220414:	10800a17 	ldw	r2,40(r2)
  220418:	10800017 	ldw	r2,0(r2)
  22041c:	1007883a 	mov	r3,r2
  220420:	008008f4 	movhi	r2,35
  220424:	10883a04 	addi	r2,r2,8424
  220428:	10c00b15 	stw	r3,44(r2)
  22042c:	008008f4 	movhi	r2,35
  220430:	10883a04 	addi	r2,r2,8424
  220434:	10800a17 	ldw	r2,40(r2)
  220438:	10800104 	addi	r2,r2,4
  22043c:	10800017 	ldw	r2,0(r2)
  220440:	1007883a 	mov	r3,r2
  220444:	008008f4 	movhi	r2,35
  220448:	10883a04 	addi	r2,r2,8424
  22044c:	10c00c15 	stw	r3,48(r2)
  220450:	008008f4 	movhi	r2,35
  220454:	10883a04 	addi	r2,r2,8424
  220458:	10800a17 	ldw	r2,40(r2)
  22045c:	10800204 	addi	r2,r2,8
  220460:	10800017 	ldw	r2,0(r2)
  220464:	10ffffcc 	andi	r3,r2,65535
  220468:	008008f4 	movhi	r2,35
  22046c:	10883a04 	addi	r2,r2,8424
  220470:	10c00f15 	stw	r3,60(r2)
  220474:	008008f4 	movhi	r2,35
  220478:	10883a04 	addi	r2,r2,8424
  22047c:	10800a17 	ldw	r2,40(r2)
  220480:	10800204 	addi	r2,r2,8
  220484:	10800017 	ldw	r2,0(r2)
  220488:	1006d43a 	srli	r3,r2,16
  22048c:	008008f4 	movhi	r2,35
  220490:	10883a04 	addi	r2,r2,8424
  220494:	10c01015 	stw	r3,64(r2)
  220498:	008008f4 	movhi	r2,35
  22049c:	10883a04 	addi	r2,r2,8424
  2204a0:	10800a17 	ldw	r2,40(r2)
  2204a4:	10800304 	addi	r2,r2,12
  2204a8:	10800017 	ldw	r2,0(r2)
  2204ac:	1005d07a 	srai	r2,r2,1
  2204b0:	10c0004c 	andi	r3,r2,1
  2204b4:	008008f4 	movhi	r2,35
  2204b8:	10883a04 	addi	r2,r2,8424
  2204bc:	10c00d15 	stw	r3,52(r2)
  2204c0:	008008f4 	movhi	r2,35
  2204c4:	10883a04 	addi	r2,r2,8424
  2204c8:	10800a17 	ldw	r2,40(r2)
  2204cc:	10800304 	addi	r2,r2,12
  2204d0:	10800017 	ldw	r2,0(r2)
  2204d4:	1005d13a 	srai	r2,r2,4
  2204d8:	10c003cc 	andi	r3,r2,15
  2204dc:	008008f4 	movhi	r2,35
  2204e0:	10883a04 	addi	r2,r2,8424
  2204e4:	10c00e15 	stw	r3,56(r2)
  2204e8:	008008f4 	movhi	r2,35
  2204ec:	10883a04 	addi	r2,r2,8424
  2204f0:	10800a17 	ldw	r2,40(r2)
  2204f4:	10800304 	addi	r2,r2,12
  2204f8:	10800017 	ldw	r2,0(r2)
  2204fc:	1005d43a 	srai	r2,r2,16
  220500:	e0bfff05 	stb	r2,-4(fp)
  220504:	008008f4 	movhi	r2,35
  220508:	10883a04 	addi	r2,r2,8424
  22050c:	10800a17 	ldw	r2,40(r2)
  220510:	10800304 	addi	r2,r2,12
  220514:	10800017 	ldw	r2,0(r2)
  220518:	1004d63a 	srli	r2,r2,24
  22051c:	e0bfff45 	stb	r2,-3(fp)
  220520:	008008f4 	movhi	r2,35
  220524:	10883a04 	addi	r2,r2,8424
  220528:	10800e17 	ldw	r2,56(r2)
  22052c:	10800058 	cmpnei	r2,r2,1
  220530:	1000041e 	bne	r2,zero,220544 <alt_sys_init+0x248>
  220534:	008008f4 	movhi	r2,35
  220538:	10883a04 	addi	r2,r2,8424
  22053c:	10001115 	stw	zero,68(r2)
  220540:	00000e06 	br	22057c <alt_sys_init+0x280>
  220544:	008008f4 	movhi	r2,35
  220548:	10883a04 	addi	r2,r2,8424
  22054c:	10800e17 	ldw	r2,56(r2)
  220550:	10800098 	cmpnei	r2,r2,2
  220554:	1000051e 	bne	r2,zero,22056c <alt_sys_init+0x270>
  220558:	008008f4 	movhi	r2,35
  22055c:	10883a04 	addi	r2,r2,8424
  220560:	00c00044 	movi	r3,1
  220564:	10c01115 	stw	r3,68(r2)
  220568:	00000406 	br	22057c <alt_sys_init+0x280>
  22056c:	008008f4 	movhi	r2,35
  220570:	10883a04 	addi	r2,r2,8424
  220574:	00c00084 	movi	r3,2
  220578:	10c01115 	stw	r3,68(r2)
  22057c:	e0bfff03 	ldbu	r2,-4(fp)
  220580:	00c00804 	movi	r3,32
  220584:	1885c83a 	sub	r2,r3,r2
  220588:	00ffffc4 	movi	r3,-1
  22058c:	1886d83a 	srl	r3,r3,r2
  220590:	008008f4 	movhi	r2,35
  220594:	10883a04 	addi	r2,r2,8424
  220598:	10c01215 	stw	r3,72(r2)
  22059c:	e0ffff03 	ldbu	r3,-4(fp)
  2205a0:	008008f4 	movhi	r2,35
  2205a4:	10883a04 	addi	r2,r2,8424
  2205a8:	10801117 	ldw	r2,68(r2)
  2205ac:	1887883a 	add	r3,r3,r2
  2205b0:	008008f4 	movhi	r2,35
  2205b4:	10883a04 	addi	r2,r2,8424
  2205b8:	10c01315 	stw	r3,76(r2)
  2205bc:	e0bfff43 	ldbu	r2,-3(fp)
  2205c0:	00c00804 	movi	r3,32
  2205c4:	1885c83a 	sub	r2,r3,r2
  2205c8:	00ffffc4 	movi	r3,-1
  2205cc:	1886d83a 	srl	r3,r3,r2
  2205d0:	008008f4 	movhi	r2,35
  2205d4:	10883a04 	addi	r2,r2,8424
  2205d8:	10c01415 	stw	r3,80(r2)
  2205dc:	010008f4 	movhi	r4,35
  2205e0:	21083a04 	addi	r4,r4,8424
  2205e4:	02202900 	call	220290 <alt_dev_reg>
}
  2205e8:	0001883a 	nop
  2205ec:	e037883a 	mov	sp,fp
  2205f0:	dfc00117 	ldw	ra,4(sp)
  2205f4:	df000017 	ldw	fp,0(sp)
  2205f8:	dec00204 	addi	sp,sp,8
  2205fc:	f800283a 	ret

00220600 <main>:
#include "stdbool.h"
#include "altera_avalon_pio_regs.h"
#include "alt_sys_init.c"

int main()
{
  220600:	deffdf04 	addi	sp,sp,-132
  220604:	dfc02015 	stw	ra,128(sp)
  220608:	df001f15 	stw	fp,124(sp)
  22060c:	df001f04 	addi	fp,sp,124

	FILE* PhaseA_Voltage_Save = fopen("/mnt/host/Readings/PhaseA_Voltage.txt","w");
  220610:	014008f4 	movhi	r5,35
  220614:	2942f004 	addi	r5,r5,3008
  220618:	010008f4 	movhi	r4,35
  22061c:	2102f104 	addi	r4,r4,3012
  220620:	02211900 	call	221190 <fopen>
  220624:	e0bfe315 	stw	r2,-116(fp)
	FILE* PhaseB_Voltage_Save = fopen("/mnt/host/Readings/PhaseB_Voltage.txt","w");
  220628:	014008f4 	movhi	r5,35
  22062c:	2942f004 	addi	r5,r5,3008
  220630:	010008f4 	movhi	r4,35
  220634:	2102fb04 	addi	r4,r4,3052
  220638:	02211900 	call	221190 <fopen>
  22063c:	e0bfe415 	stw	r2,-112(fp)
	FILE* PhaseC_Voltage_Save = fopen("/mnt/host/Readings/PhaseC_Voltage.txt","w");
  220640:	014008f4 	movhi	r5,35
  220644:	2942f004 	addi	r5,r5,3008
  220648:	010008f4 	movhi	r4,35
  22064c:	21030504 	addi	r4,r4,3092
  220650:	02211900 	call	221190 <fopen>
  220654:	e0bfe515 	stw	r2,-108(fp)

	FILE* PhaseA_Current_Save = fopen("/mnt/host/Readings/PhaseA_Current.txt","w");
  220658:	014008f4 	movhi	r5,35
  22065c:	2942f004 	addi	r5,r5,3008
  220660:	010008f4 	movhi	r4,35
  220664:	21030f04 	addi	r4,r4,3132
  220668:	02211900 	call	221190 <fopen>
  22066c:	e0bfe615 	stw	r2,-104(fp)
	FILE* PhaseB_Current_Save = fopen("/mnt/host/Readings/PhaseB_Current.txt","w");
  220670:	014008f4 	movhi	r5,35
  220674:	2942f004 	addi	r5,r5,3008
  220678:	010008f4 	movhi	r4,35
  22067c:	21031904 	addi	r4,r4,3172
  220680:	02211900 	call	221190 <fopen>
  220684:	e0bfe715 	stw	r2,-100(fp)
	FILE* PhaseC_Current_Save = fopen("/mnt/host/Readings/PhaseC_Current.txt","w");
  220688:	014008f4 	movhi	r5,35
  22068c:	2942f004 	addi	r5,r5,3008
  220690:	010008f4 	movhi	r4,35
  220694:	21032304 	addi	r4,r4,3212
  220698:	02211900 	call	221190 <fopen>
  22069c:	e0bfe815 	stw	r2,-96(fp)

	unsigned int PhaseA_Voltage = 0;
  2206a0:	e03fe915 	stw	zero,-92(fp)
	unsigned int PhaseB_Voltage = 0;
  2206a4:	e03fea15 	stw	zero,-88(fp)
	unsigned int PhaseC_Voltage = 0;
  2206a8:	e03feb15 	stw	zero,-84(fp)
	unsigned int PhaseA_Current = 0;
  2206ac:	e03fec15 	stw	zero,-80(fp)
	unsigned int PhaseB_Current = 0;
  2206b0:	e03fed15 	stw	zero,-76(fp)
	unsigned int PhaseC_Current = 0;
  2206b4:	e03fee15 	stw	zero,-72(fp)
	unsigned int counter = 0;
  2206b8:	e03fe115 	stw	zero,-124(fp)

	char sPhaseA_Current[10];
	char sPhaseB_Current[10];
	char sPhaseC_Current[10];

	unsigned int Writing_Finish_Flag = 0;
  2206bc:	e03fef15 	stw	zero,-68(fp)
	unsigned int Read_New_Sample = 0;
  2206c0:	e03ff015 	stw	zero,-64(fp)
	unsigned int Read_Address = 0;
  2206c4:	e03fe215 	stw	zero,-120(fp)

	while(1)
	{
HERE:	Writing_Finish_Flag = IORD(WRITING_FINISH_FLAG_BASE, 0);
  2206c8:	00800934 	movhi	r2,36
  2206cc:	108c1004 	addi	r2,r2,12352
  2206d0:	10800037 	ldwio	r2,0(r2)
  2206d4:	e0bfef15 	stw	r2,-68(fp)
		if (Writing_Finish_Flag)
  2206d8:	e0bfef17 	ldw	r2,-68(fp)
  2206dc:	103ffa26 	beq	r2,zero,2206c8 <_gp+0xfffe5b40>
		{
			if (Read_Address == 0) printf("\nTaking sample started, please wait\n");
  2206e0:	e0bfe217 	ldw	r2,-120(fp)
  2206e4:	1000031e 	bne	r2,zero,2206f4 <main+0xf4>
  2206e8:	010008f4 	movhi	r4,35
  2206ec:	21032d04 	addi	r4,r4,3252
  2206f0:	02229080 	call	222908 <puts>
			PhaseA_Voltage = IORD(CHANNEL1_ANALOG_BASE, 0);
  2206f4:	00800934 	movhi	r2,36
  2206f8:	108c2804 	addi	r2,r2,12448
  2206fc:	10800037 	ldwio	r2,0(r2)
  220700:	e0bfe915 	stw	r2,-92(fp)
			PhaseB_Voltage = IORD(CHANNEL2_ANALOG_BASE, 0);
  220704:	00800934 	movhi	r2,36
  220708:	108c2404 	addi	r2,r2,12432
  22070c:	10800037 	ldwio	r2,0(r2)
  220710:	e0bfea15 	stw	r2,-88(fp)
			PhaseC_Voltage = IORD(CHANNEL3_ANALOG_BASE, 0);
  220714:	00800934 	movhi	r2,36
  220718:	108c2004 	addi	r2,r2,12416
  22071c:	10800037 	ldwio	r2,0(r2)
  220720:	e0bfeb15 	stw	r2,-84(fp)

			PhaseA_Current = IORD(CHANNEL4_ANALOG_BASE, 0);
  220724:	00800934 	movhi	r2,36
  220728:	108c1c04 	addi	r2,r2,12400
  22072c:	10800037 	ldwio	r2,0(r2)
  220730:	e0bfec15 	stw	r2,-80(fp)
			PhaseB_Current = IORD(CHANNEL5_ANALOG_BASE, 0);
  220734:	00800934 	movhi	r2,36
  220738:	108c1804 	addi	r2,r2,12384
  22073c:	10800037 	ldwio	r2,0(r2)
  220740:	e0bfed15 	stw	r2,-76(fp)
			PhaseC_Current = IORD(CHANNEL6_ANALOG_BASE, 0);
  220744:	00800934 	movhi	r2,36
  220748:	108c1404 	addi	r2,r2,12368
  22074c:	10800037 	ldwio	r2,0(r2)
  220750:	e0bfee15 	stw	r2,-72(fp)

			if(PhaseA_Voltage_Save != NULL && PhaseB_Voltage_Save != NULL && PhaseC_Voltage_Save != NULL &&
  220754:	e0bfe317 	ldw	r2,-116(fp)
  220758:	10005f26 	beq	r2,zero,2208d8 <main+0x2d8>
  22075c:	e0bfe417 	ldw	r2,-112(fp)
  220760:	10005d26 	beq	r2,zero,2208d8 <main+0x2d8>
  220764:	e0bfe517 	ldw	r2,-108(fp)
  220768:	10005b26 	beq	r2,zero,2208d8 <main+0x2d8>
  22076c:	e0bfe617 	ldw	r2,-104(fp)
  220770:	10005926 	beq	r2,zero,2208d8 <main+0x2d8>
			   PhaseA_Current_Save != NULL && PhaseB_Current_Save != NULL && PhaseC_Current_Save != NULL &&
  220774:	e0bfe717 	ldw	r2,-100(fp)
  220778:	10005726 	beq	r2,zero,2208d8 <main+0x2d8>
  22077c:	e0bfe817 	ldw	r2,-96(fp)
  220780:	10005526 	beq	r2,zero,2208d8 <main+0x2d8>
  220784:	e0bfef17 	ldw	r2,-68(fp)
  220788:	10800058 	cmpnei	r2,r2,1
  22078c:	1000521e 	bne	r2,zero,2208d8 <main+0x2d8>
			   Writing_Finish_Flag == true )
			{
				itoa(PhaseA_Voltage,sPhaseA_Voltage,10);
  220790:	e0bfe917 	ldw	r2,-92(fp)
  220794:	e0fff104 	addi	r3,fp,-60
  220798:	01800284 	movi	r6,10
  22079c:	180b883a 	mov	r5,r3
  2207a0:	1009883a 	mov	r4,r2
  2207a4:	0221cf40 	call	221cf4 <itoa>
				itoa(PhaseB_Voltage,sPhaseB_Voltage,10);
  2207a8:	e0bfea17 	ldw	r2,-88(fp)
  2207ac:	e0fff384 	addi	r3,fp,-50
  2207b0:	01800284 	movi	r6,10
  2207b4:	180b883a 	mov	r5,r3
  2207b8:	1009883a 	mov	r4,r2
  2207bc:	0221cf40 	call	221cf4 <itoa>
				itoa(PhaseC_Voltage,sPhaseC_Voltage,10);
  2207c0:	e0bfeb17 	ldw	r2,-84(fp)
  2207c4:	e0fff604 	addi	r3,fp,-40
  2207c8:	01800284 	movi	r6,10
  2207cc:	180b883a 	mov	r5,r3
  2207d0:	1009883a 	mov	r4,r2
  2207d4:	0221cf40 	call	221cf4 <itoa>

				itoa(PhaseA_Current,sPhaseA_Current,10);
  2207d8:	e0bfec17 	ldw	r2,-80(fp)
  2207dc:	e0fff884 	addi	r3,fp,-30
  2207e0:	01800284 	movi	r6,10
  2207e4:	180b883a 	mov	r5,r3
  2207e8:	1009883a 	mov	r4,r2
  2207ec:	0221cf40 	call	221cf4 <itoa>
				itoa(PhaseB_Current,sPhaseB_Current,10);
  2207f0:	e0bfed17 	ldw	r2,-76(fp)
  2207f4:	e0fffb04 	addi	r3,fp,-20
  2207f8:	01800284 	movi	r6,10
  2207fc:	180b883a 	mov	r5,r3
  220800:	1009883a 	mov	r4,r2
  220804:	0221cf40 	call	221cf4 <itoa>
				itoa(PhaseC_Current,sPhaseC_Current,10);
  220808:	e0bfee17 	ldw	r2,-72(fp)
  22080c:	e0fffd84 	addi	r3,fp,-10
  220810:	01800284 	movi	r6,10
  220814:	180b883a 	mov	r5,r3
  220818:	1009883a 	mov	r4,r2
  22081c:	0221cf40 	call	221cf4 <itoa>

				fprintf(PhaseA_Voltage_Save,"%s\n",sPhaseA_Voltage);
  220820:	e0bff104 	addi	r2,fp,-60
  220824:	100d883a 	mov	r6,r2
  220828:	014008f4 	movhi	r5,35
  22082c:	29433604 	addi	r5,r5,3288
  220830:	e13fe317 	ldw	r4,-116(fp)
  220834:	02211d00 	call	2211d0 <fprintf>
				fprintf(PhaseB_Voltage_Save,"%s\n",sPhaseB_Voltage);
  220838:	e0bff384 	addi	r2,fp,-50
  22083c:	100d883a 	mov	r6,r2
  220840:	014008f4 	movhi	r5,35
  220844:	29433604 	addi	r5,r5,3288
  220848:	e13fe417 	ldw	r4,-112(fp)
  22084c:	02211d00 	call	2211d0 <fprintf>
				fprintf(PhaseC_Voltage_Save,"%s\n",sPhaseC_Voltage);
  220850:	e0bff604 	addi	r2,fp,-40
  220854:	100d883a 	mov	r6,r2
  220858:	014008f4 	movhi	r5,35
  22085c:	29433604 	addi	r5,r5,3288
  220860:	e13fe517 	ldw	r4,-108(fp)
  220864:	02211d00 	call	2211d0 <fprintf>

				fprintf(PhaseA_Current_Save,"%s\n",sPhaseA_Current);
  220868:	e0bff884 	addi	r2,fp,-30
  22086c:	100d883a 	mov	r6,r2
  220870:	014008f4 	movhi	r5,35
  220874:	29433604 	addi	r5,r5,3288
  220878:	e13fe617 	ldw	r4,-104(fp)
  22087c:	02211d00 	call	2211d0 <fprintf>
				fprintf(PhaseB_Current_Save,"%s\n",sPhaseB_Current);
  220880:	e0bffb04 	addi	r2,fp,-20
  220884:	100d883a 	mov	r6,r2
  220888:	014008f4 	movhi	r5,35
  22088c:	29433604 	addi	r5,r5,3288
  220890:	e13fe717 	ldw	r4,-100(fp)
  220894:	02211d00 	call	2211d0 <fprintf>
				fprintf(PhaseC_Current_Save,"%s\n",sPhaseC_Current);
  220898:	e0bffd84 	addi	r2,fp,-10
  22089c:	100d883a 	mov	r6,r2
  2208a0:	014008f4 	movhi	r5,35
  2208a4:	29433604 	addi	r5,r5,3288
  2208a8:	e13fe817 	ldw	r4,-96(fp)
  2208ac:	02211d00 	call	2211d0 <fprintf>

				IOWR(READ_ADDRESS_BASE, 0, Read_Address);
  2208b0:	e0ffe217 	ldw	r3,-120(fp)
  2208b4:	00800934 	movhi	r2,36
  2208b8:	108c0804 	addi	r2,r2,12320
  2208bc:	10c00035 	stwio	r3,0(r2)
				counter++;
  2208c0:	e0bfe117 	ldw	r2,-124(fp)
  2208c4:	10800044 	addi	r2,r2,1
  2208c8:	e0bfe115 	stw	r2,-124(fp)
				Read_Address++;
  2208cc:	e0bfe217 	ldw	r2,-120(fp)
  2208d0:	10800044 	addi	r2,r2,1
  2208d4:	e0bfe215 	stw	r2,-120(fp)
			}
			if (counter == 4096) break;
  2208d8:	e0bfe117 	ldw	r2,-124(fp)
  2208dc:	10840018 	cmpnei	r2,r2,4096
  2208e0:	10000126 	beq	r2,zero,2208e8 <main+0x2e8>
		}
	}
  2208e4:	003f7806 	br	2206c8 <_gp+0xfffe5b40>

				IOWR(READ_ADDRESS_BASE, 0, Read_Address);
				counter++;
				Read_Address++;
			}
			if (counter == 4096) break;
  2208e8:	0001883a 	nop
		}
	}
	fclose(PhaseA_Voltage_Save);
  2208ec:	e13fe317 	ldw	r4,-116(fp)
  2208f0:	0220a400 	call	220a40 <fclose>
	fclose(PhaseB_Voltage_Save);
  2208f4:	e13fe417 	ldw	r4,-112(fp)
  2208f8:	0220a400 	call	220a40 <fclose>
	fclose(PhaseC_Voltage_Save);
  2208fc:	e13fe517 	ldw	r4,-108(fp)
  220900:	0220a400 	call	220a40 <fclose>

	fclose(PhaseA_Current_Save);
  220904:	e13fe617 	ldw	r4,-104(fp)
  220908:	0220a400 	call	220a40 <fclose>
	fclose(PhaseB_Current_Save);
  22090c:	e13fe717 	ldw	r4,-100(fp)
  220910:	0220a400 	call	220a40 <fclose>
	fclose(PhaseC_Current_Save);
  220914:	e13fe817 	ldw	r4,-96(fp)
  220918:	0220a400 	call	220a40 <fclose>
	printf("Taking sample finished\nYou can now run the MATLAB script\n");
  22091c:	010008f4 	movhi	r4,35
  220920:	21033704 	addi	r4,r4,3292
  220924:	02229080 	call	222908 <puts>
	while(1)
	{
		counter = 0;
  220928:	e03fe115 	stw	zero,-124(fp)
		Read_Address = 0;
  22092c:	e03fe215 	stw	zero,-120(fp)
		Read_New_Sample = IORD(READ_NEW_SAMPLE_BASE, 0);
  220930:	00800934 	movhi	r2,36
  220934:	108c0c04 	addi	r2,r2,12336
  220938:	10800037 	ldwio	r2,0(r2)
  22093c:	e0bff015 	stw	r2,-64(fp)
		if (Read_New_Sample == 1)
  220940:	e0bff017 	ldw	r2,-64(fp)
  220944:	10800058 	cmpnei	r2,r2,1
  220948:	103ff71e 	bne	r2,zero,220928 <_gp+0xfffe5da0>
		{
			goto HERE;
  22094c:	003f5e06 	br	2206c8 <_gp+0xfffe5b40>

00220950 <_fclose_r>:
  220950:	28003926 	beq	r5,zero,220a38 <_fclose_r+0xe8>
  220954:	defffc04 	addi	sp,sp,-16
  220958:	dc400115 	stw	r17,4(sp)
  22095c:	dc000015 	stw	r16,0(sp)
  220960:	dfc00315 	stw	ra,12(sp)
  220964:	dc800215 	stw	r18,8(sp)
  220968:	2023883a 	mov	r17,r4
  22096c:	2821883a 	mov	r16,r5
  220970:	20000226 	beq	r4,zero,22097c <_fclose_r+0x2c>
  220974:	20800e17 	ldw	r2,56(r4)
  220978:	10002726 	beq	r2,zero,220a18 <_fclose_r+0xc8>
  22097c:	8080030f 	ldh	r2,12(r16)
  220980:	1000071e 	bne	r2,zero,2209a0 <_fclose_r+0x50>
  220984:	0005883a 	mov	r2,zero
  220988:	dfc00317 	ldw	ra,12(sp)
  22098c:	dc800217 	ldw	r18,8(sp)
  220990:	dc400117 	ldw	r17,4(sp)
  220994:	dc000017 	ldw	r16,0(sp)
  220998:	dec00404 	addi	sp,sp,16
  22099c:	f800283a 	ret
  2209a0:	800b883a 	mov	r5,r16
  2209a4:	8809883a 	mov	r4,r17
  2209a8:	0220a540 	call	220a54 <__sflush_r>
  2209ac:	1025883a 	mov	r18,r2
  2209b0:	80800b17 	ldw	r2,44(r16)
  2209b4:	10000426 	beq	r2,zero,2209c8 <_fclose_r+0x78>
  2209b8:	81400717 	ldw	r5,28(r16)
  2209bc:	8809883a 	mov	r4,r17
  2209c0:	103ee83a 	callr	r2
  2209c4:	10001616 	blt	r2,zero,220a20 <_fclose_r+0xd0>
  2209c8:	8080030b 	ldhu	r2,12(r16)
  2209cc:	1080200c 	andi	r2,r2,128
  2209d0:	1000151e 	bne	r2,zero,220a28 <_fclose_r+0xd8>
  2209d4:	81400c17 	ldw	r5,48(r16)
  2209d8:	28000526 	beq	r5,zero,2209f0 <_fclose_r+0xa0>
  2209dc:	80801004 	addi	r2,r16,64
  2209e0:	28800226 	beq	r5,r2,2209ec <_fclose_r+0x9c>
  2209e4:	8809883a 	mov	r4,r17
  2209e8:	02213180 	call	221318 <_free_r>
  2209ec:	80000c15 	stw	zero,48(r16)
  2209f0:	81401117 	ldw	r5,68(r16)
  2209f4:	28000326 	beq	r5,zero,220a04 <_fclose_r+0xb4>
  2209f8:	8809883a 	mov	r4,r17
  2209fc:	02213180 	call	221318 <_free_r>
  220a00:	80001115 	stw	zero,68(r16)
  220a04:	022105c0 	call	22105c <__sfp_lock_acquire>
  220a08:	8000030d 	sth	zero,12(r16)
  220a0c:	02210600 	call	221060 <__sfp_lock_release>
  220a10:	9005883a 	mov	r2,r18
  220a14:	003fdc06 	br	220988 <_gp+0xfffe5e00>
  220a18:	022104c0 	call	22104c <__sinit>
  220a1c:	003fd706 	br	22097c <_gp+0xfffe5df4>
  220a20:	04bfffc4 	movi	r18,-1
  220a24:	003fe806 	br	2209c8 <_gp+0xfffe5e40>
  220a28:	81400417 	ldw	r5,16(r16)
  220a2c:	8809883a 	mov	r4,r17
  220a30:	02213180 	call	221318 <_free_r>
  220a34:	003fe706 	br	2209d4 <_gp+0xfffe5e4c>
  220a38:	0005883a 	mov	r2,zero
  220a3c:	f800283a 	ret

00220a40 <fclose>:
  220a40:	008008f4 	movhi	r2,35
  220a44:	108ae304 	addi	r2,r2,11148
  220a48:	200b883a 	mov	r5,r4
  220a4c:	11000017 	ldw	r4,0(r2)
  220a50:	02209501 	jmpi	220950 <_fclose_r>

00220a54 <__sflush_r>:
  220a54:	2880030b 	ldhu	r2,12(r5)
  220a58:	defffb04 	addi	sp,sp,-20
  220a5c:	dcc00315 	stw	r19,12(sp)
  220a60:	dc400115 	stw	r17,4(sp)
  220a64:	dfc00415 	stw	ra,16(sp)
  220a68:	dc800215 	stw	r18,8(sp)
  220a6c:	dc000015 	stw	r16,0(sp)
  220a70:	10c0020c 	andi	r3,r2,8
  220a74:	2823883a 	mov	r17,r5
  220a78:	2027883a 	mov	r19,r4
  220a7c:	1800311e 	bne	r3,zero,220b44 <__sflush_r+0xf0>
  220a80:	28c00117 	ldw	r3,4(r5)
  220a84:	10820014 	ori	r2,r2,2048
  220a88:	2880030d 	sth	r2,12(r5)
  220a8c:	00c04b0e 	bge	zero,r3,220bbc <__sflush_r+0x168>
  220a90:	8a000a17 	ldw	r8,40(r17)
  220a94:	40002326 	beq	r8,zero,220b24 <__sflush_r+0xd0>
  220a98:	9c000017 	ldw	r16,0(r19)
  220a9c:	10c4000c 	andi	r3,r2,4096
  220aa0:	98000015 	stw	zero,0(r19)
  220aa4:	18004826 	beq	r3,zero,220bc8 <__sflush_r+0x174>
  220aa8:	89801417 	ldw	r6,80(r17)
  220aac:	10c0010c 	andi	r3,r2,4
  220ab0:	18000626 	beq	r3,zero,220acc <__sflush_r+0x78>
  220ab4:	88c00117 	ldw	r3,4(r17)
  220ab8:	88800c17 	ldw	r2,48(r17)
  220abc:	30cdc83a 	sub	r6,r6,r3
  220ac0:	10000226 	beq	r2,zero,220acc <__sflush_r+0x78>
  220ac4:	88800f17 	ldw	r2,60(r17)
  220ac8:	308dc83a 	sub	r6,r6,r2
  220acc:	89400717 	ldw	r5,28(r17)
  220ad0:	000f883a 	mov	r7,zero
  220ad4:	9809883a 	mov	r4,r19
  220ad8:	403ee83a 	callr	r8
  220adc:	00ffffc4 	movi	r3,-1
  220ae0:	10c04426 	beq	r2,r3,220bf4 <__sflush_r+0x1a0>
  220ae4:	88c0030b 	ldhu	r3,12(r17)
  220ae8:	89000417 	ldw	r4,16(r17)
  220aec:	88000115 	stw	zero,4(r17)
  220af0:	197dffcc 	andi	r5,r3,63487
  220af4:	8940030d 	sth	r5,12(r17)
  220af8:	89000015 	stw	r4,0(r17)
  220afc:	18c4000c 	andi	r3,r3,4096
  220b00:	18002c1e 	bne	r3,zero,220bb4 <__sflush_r+0x160>
  220b04:	89400c17 	ldw	r5,48(r17)
  220b08:	9c000015 	stw	r16,0(r19)
  220b0c:	28000526 	beq	r5,zero,220b24 <__sflush_r+0xd0>
  220b10:	88801004 	addi	r2,r17,64
  220b14:	28800226 	beq	r5,r2,220b20 <__sflush_r+0xcc>
  220b18:	9809883a 	mov	r4,r19
  220b1c:	02213180 	call	221318 <_free_r>
  220b20:	88000c15 	stw	zero,48(r17)
  220b24:	0005883a 	mov	r2,zero
  220b28:	dfc00417 	ldw	ra,16(sp)
  220b2c:	dcc00317 	ldw	r19,12(sp)
  220b30:	dc800217 	ldw	r18,8(sp)
  220b34:	dc400117 	ldw	r17,4(sp)
  220b38:	dc000017 	ldw	r16,0(sp)
  220b3c:	dec00504 	addi	sp,sp,20
  220b40:	f800283a 	ret
  220b44:	2c800417 	ldw	r18,16(r5)
  220b48:	903ff626 	beq	r18,zero,220b24 <_gp+0xfffe5f9c>
  220b4c:	2c000017 	ldw	r16,0(r5)
  220b50:	108000cc 	andi	r2,r2,3
  220b54:	2c800015 	stw	r18,0(r5)
  220b58:	84a1c83a 	sub	r16,r16,r18
  220b5c:	1000131e 	bne	r2,zero,220bac <__sflush_r+0x158>
  220b60:	28800517 	ldw	r2,20(r5)
  220b64:	88800215 	stw	r2,8(r17)
  220b68:	04000316 	blt	zero,r16,220b78 <__sflush_r+0x124>
  220b6c:	003fed06 	br	220b24 <_gp+0xfffe5f9c>
  220b70:	90a5883a 	add	r18,r18,r2
  220b74:	043feb0e 	bge	zero,r16,220b24 <_gp+0xfffe5f9c>
  220b78:	88800917 	ldw	r2,36(r17)
  220b7c:	89400717 	ldw	r5,28(r17)
  220b80:	800f883a 	mov	r7,r16
  220b84:	900d883a 	mov	r6,r18
  220b88:	9809883a 	mov	r4,r19
  220b8c:	103ee83a 	callr	r2
  220b90:	80a1c83a 	sub	r16,r16,r2
  220b94:	00bff616 	blt	zero,r2,220b70 <_gp+0xfffe5fe8>
  220b98:	88c0030b 	ldhu	r3,12(r17)
  220b9c:	00bfffc4 	movi	r2,-1
  220ba0:	18c01014 	ori	r3,r3,64
  220ba4:	88c0030d 	sth	r3,12(r17)
  220ba8:	003fdf06 	br	220b28 <_gp+0xfffe5fa0>
  220bac:	0005883a 	mov	r2,zero
  220bb0:	003fec06 	br	220b64 <_gp+0xfffe5fdc>
  220bb4:	88801415 	stw	r2,80(r17)
  220bb8:	003fd206 	br	220b04 <_gp+0xfffe5f7c>
  220bbc:	28c00f17 	ldw	r3,60(r5)
  220bc0:	00ffb316 	blt	zero,r3,220a90 <_gp+0xfffe5f08>
  220bc4:	003fd706 	br	220b24 <_gp+0xfffe5f9c>
  220bc8:	89400717 	ldw	r5,28(r17)
  220bcc:	000d883a 	mov	r6,zero
  220bd0:	01c00044 	movi	r7,1
  220bd4:	9809883a 	mov	r4,r19
  220bd8:	403ee83a 	callr	r8
  220bdc:	100d883a 	mov	r6,r2
  220be0:	00bfffc4 	movi	r2,-1
  220be4:	30801426 	beq	r6,r2,220c38 <__sflush_r+0x1e4>
  220be8:	8880030b 	ldhu	r2,12(r17)
  220bec:	8a000a17 	ldw	r8,40(r17)
  220bf0:	003fae06 	br	220aac <_gp+0xfffe5f24>
  220bf4:	98c00017 	ldw	r3,0(r19)
  220bf8:	183fba26 	beq	r3,zero,220ae4 <_gp+0xfffe5f5c>
  220bfc:	01000744 	movi	r4,29
  220c00:	19000626 	beq	r3,r4,220c1c <__sflush_r+0x1c8>
  220c04:	01000584 	movi	r4,22
  220c08:	19000426 	beq	r3,r4,220c1c <__sflush_r+0x1c8>
  220c0c:	88c0030b 	ldhu	r3,12(r17)
  220c10:	18c01014 	ori	r3,r3,64
  220c14:	88c0030d 	sth	r3,12(r17)
  220c18:	003fc306 	br	220b28 <_gp+0xfffe5fa0>
  220c1c:	8880030b 	ldhu	r2,12(r17)
  220c20:	88c00417 	ldw	r3,16(r17)
  220c24:	88000115 	stw	zero,4(r17)
  220c28:	10bdffcc 	andi	r2,r2,63487
  220c2c:	8880030d 	sth	r2,12(r17)
  220c30:	88c00015 	stw	r3,0(r17)
  220c34:	003fb306 	br	220b04 <_gp+0xfffe5f7c>
  220c38:	98800017 	ldw	r2,0(r19)
  220c3c:	103fea26 	beq	r2,zero,220be8 <_gp+0xfffe6060>
  220c40:	00c00744 	movi	r3,29
  220c44:	10c00226 	beq	r2,r3,220c50 <__sflush_r+0x1fc>
  220c48:	00c00584 	movi	r3,22
  220c4c:	10c0031e 	bne	r2,r3,220c5c <__sflush_r+0x208>
  220c50:	9c000015 	stw	r16,0(r19)
  220c54:	0005883a 	mov	r2,zero
  220c58:	003fb306 	br	220b28 <_gp+0xfffe5fa0>
  220c5c:	88c0030b 	ldhu	r3,12(r17)
  220c60:	3005883a 	mov	r2,r6
  220c64:	18c01014 	ori	r3,r3,64
  220c68:	88c0030d 	sth	r3,12(r17)
  220c6c:	003fae06 	br	220b28 <_gp+0xfffe5fa0>

00220c70 <_fflush_r>:
  220c70:	defffd04 	addi	sp,sp,-12
  220c74:	dc000115 	stw	r16,4(sp)
  220c78:	dfc00215 	stw	ra,8(sp)
  220c7c:	2021883a 	mov	r16,r4
  220c80:	20000226 	beq	r4,zero,220c8c <_fflush_r+0x1c>
  220c84:	20800e17 	ldw	r2,56(r4)
  220c88:	10000c26 	beq	r2,zero,220cbc <_fflush_r+0x4c>
  220c8c:	2880030f 	ldh	r2,12(r5)
  220c90:	1000051e 	bne	r2,zero,220ca8 <_fflush_r+0x38>
  220c94:	0005883a 	mov	r2,zero
  220c98:	dfc00217 	ldw	ra,8(sp)
  220c9c:	dc000117 	ldw	r16,4(sp)
  220ca0:	dec00304 	addi	sp,sp,12
  220ca4:	f800283a 	ret
  220ca8:	8009883a 	mov	r4,r16
  220cac:	dfc00217 	ldw	ra,8(sp)
  220cb0:	dc000117 	ldw	r16,4(sp)
  220cb4:	dec00304 	addi	sp,sp,12
  220cb8:	0220a541 	jmpi	220a54 <__sflush_r>
  220cbc:	d9400015 	stw	r5,0(sp)
  220cc0:	022104c0 	call	22104c <__sinit>
  220cc4:	d9400017 	ldw	r5,0(sp)
  220cc8:	003ff006 	br	220c8c <_gp+0xfffe6104>

00220ccc <fflush>:
  220ccc:	20000526 	beq	r4,zero,220ce4 <fflush+0x18>
  220cd0:	008008f4 	movhi	r2,35
  220cd4:	108ae304 	addi	r2,r2,11148
  220cd8:	200b883a 	mov	r5,r4
  220cdc:	11000017 	ldw	r4,0(r2)
  220ce0:	0220c701 	jmpi	220c70 <_fflush_r>
  220ce4:	008008f4 	movhi	r2,35
  220ce8:	108ae204 	addi	r2,r2,11144
  220cec:	11000017 	ldw	r4,0(r2)
  220cf0:	014008b4 	movhi	r5,34
  220cf4:	29431c04 	addi	r5,r5,3184
  220cf8:	0221bc81 	jmpi	221bc8 <_fwalk_reent>

00220cfc <__fp_unlock>:
  220cfc:	0005883a 	mov	r2,zero
  220d00:	f800283a 	ret

00220d04 <_cleanup_r>:
  220d04:	014008b4 	movhi	r5,34
  220d08:	29425404 	addi	r5,r5,2384
  220d0c:	0221bc81 	jmpi	221bc8 <_fwalk_reent>

00220d10 <__sinit.part.1>:
  220d10:	defff704 	addi	sp,sp,-36
  220d14:	00c008b4 	movhi	r3,34
  220d18:	dfc00815 	stw	ra,32(sp)
  220d1c:	ddc00715 	stw	r23,28(sp)
  220d20:	dd800615 	stw	r22,24(sp)
  220d24:	dd400515 	stw	r21,20(sp)
  220d28:	dd000415 	stw	r20,16(sp)
  220d2c:	dcc00315 	stw	r19,12(sp)
  220d30:	dc800215 	stw	r18,8(sp)
  220d34:	dc400115 	stw	r17,4(sp)
  220d38:	dc000015 	stw	r16,0(sp)
  220d3c:	18c34104 	addi	r3,r3,3332
  220d40:	24000117 	ldw	r16,4(r4)
  220d44:	20c00f15 	stw	r3,60(r4)
  220d48:	2080bb04 	addi	r2,r4,748
  220d4c:	00c000c4 	movi	r3,3
  220d50:	20c0b915 	stw	r3,740(r4)
  220d54:	2080ba15 	stw	r2,744(r4)
  220d58:	2000b815 	stw	zero,736(r4)
  220d5c:	05c00204 	movi	r23,8
  220d60:	00800104 	movi	r2,4
  220d64:	2025883a 	mov	r18,r4
  220d68:	b80d883a 	mov	r6,r23
  220d6c:	81001704 	addi	r4,r16,92
  220d70:	000b883a 	mov	r5,zero
  220d74:	80000015 	stw	zero,0(r16)
  220d78:	80000115 	stw	zero,4(r16)
  220d7c:	80000215 	stw	zero,8(r16)
  220d80:	8080030d 	sth	r2,12(r16)
  220d84:	80001915 	stw	zero,100(r16)
  220d88:	8000038d 	sth	zero,14(r16)
  220d8c:	80000415 	stw	zero,16(r16)
  220d90:	80000515 	stw	zero,20(r16)
  220d94:	80000615 	stw	zero,24(r16)
  220d98:	02226c00 	call	2226c0 <memset>
  220d9c:	058008b4 	movhi	r22,34
  220da0:	94400217 	ldw	r17,8(r18)
  220da4:	054008b4 	movhi	r21,34
  220da8:	050008b4 	movhi	r20,34
  220dac:	04c008b4 	movhi	r19,34
  220db0:	b58ad804 	addi	r22,r22,11104
  220db4:	ad4aef04 	addi	r21,r21,11196
  220db8:	a50b0e04 	addi	r20,r20,11320
  220dbc:	9ccb2504 	addi	r19,r19,11412
  220dc0:	85800815 	stw	r22,32(r16)
  220dc4:	85400915 	stw	r21,36(r16)
  220dc8:	85000a15 	stw	r20,40(r16)
  220dcc:	84c00b15 	stw	r19,44(r16)
  220dd0:	84000715 	stw	r16,28(r16)
  220dd4:	00800284 	movi	r2,10
  220dd8:	8880030d 	sth	r2,12(r17)
  220ddc:	00800044 	movi	r2,1
  220de0:	b80d883a 	mov	r6,r23
  220de4:	89001704 	addi	r4,r17,92
  220de8:	000b883a 	mov	r5,zero
  220dec:	88000015 	stw	zero,0(r17)
  220df0:	88000115 	stw	zero,4(r17)
  220df4:	88000215 	stw	zero,8(r17)
  220df8:	88001915 	stw	zero,100(r17)
  220dfc:	8880038d 	sth	r2,14(r17)
  220e00:	88000415 	stw	zero,16(r17)
  220e04:	88000515 	stw	zero,20(r17)
  220e08:	88000615 	stw	zero,24(r17)
  220e0c:	02226c00 	call	2226c0 <memset>
  220e10:	94000317 	ldw	r16,12(r18)
  220e14:	00800484 	movi	r2,18
  220e18:	8c400715 	stw	r17,28(r17)
  220e1c:	8d800815 	stw	r22,32(r17)
  220e20:	8d400915 	stw	r21,36(r17)
  220e24:	8d000a15 	stw	r20,40(r17)
  220e28:	8cc00b15 	stw	r19,44(r17)
  220e2c:	8080030d 	sth	r2,12(r16)
  220e30:	00800084 	movi	r2,2
  220e34:	80000015 	stw	zero,0(r16)
  220e38:	80000115 	stw	zero,4(r16)
  220e3c:	80000215 	stw	zero,8(r16)
  220e40:	80001915 	stw	zero,100(r16)
  220e44:	8080038d 	sth	r2,14(r16)
  220e48:	80000415 	stw	zero,16(r16)
  220e4c:	80000515 	stw	zero,20(r16)
  220e50:	80000615 	stw	zero,24(r16)
  220e54:	b80d883a 	mov	r6,r23
  220e58:	000b883a 	mov	r5,zero
  220e5c:	81001704 	addi	r4,r16,92
  220e60:	02226c00 	call	2226c0 <memset>
  220e64:	00800044 	movi	r2,1
  220e68:	84000715 	stw	r16,28(r16)
  220e6c:	85800815 	stw	r22,32(r16)
  220e70:	85400915 	stw	r21,36(r16)
  220e74:	85000a15 	stw	r20,40(r16)
  220e78:	84c00b15 	stw	r19,44(r16)
  220e7c:	90800e15 	stw	r2,56(r18)
  220e80:	dfc00817 	ldw	ra,32(sp)
  220e84:	ddc00717 	ldw	r23,28(sp)
  220e88:	dd800617 	ldw	r22,24(sp)
  220e8c:	dd400517 	ldw	r21,20(sp)
  220e90:	dd000417 	ldw	r20,16(sp)
  220e94:	dcc00317 	ldw	r19,12(sp)
  220e98:	dc800217 	ldw	r18,8(sp)
  220e9c:	dc400117 	ldw	r17,4(sp)
  220ea0:	dc000017 	ldw	r16,0(sp)
  220ea4:	dec00904 	addi	sp,sp,36
  220ea8:	f800283a 	ret

00220eac <__fp_lock>:
  220eac:	0005883a 	mov	r2,zero
  220eb0:	f800283a 	ret

00220eb4 <__sfmoreglue>:
  220eb4:	defffc04 	addi	sp,sp,-16
  220eb8:	dc400115 	stw	r17,4(sp)
  220ebc:	2c7fffc4 	addi	r17,r5,-1
  220ec0:	8c401a24 	muli	r17,r17,104
  220ec4:	dc800215 	stw	r18,8(sp)
  220ec8:	2825883a 	mov	r18,r5
  220ecc:	89401d04 	addi	r5,r17,116
  220ed0:	dc000015 	stw	r16,0(sp)
  220ed4:	dfc00315 	stw	ra,12(sp)
  220ed8:	0221eb40 	call	221eb4 <_malloc_r>
  220edc:	1021883a 	mov	r16,r2
  220ee0:	10000726 	beq	r2,zero,220f00 <__sfmoreglue+0x4c>
  220ee4:	11000304 	addi	r4,r2,12
  220ee8:	10000015 	stw	zero,0(r2)
  220eec:	14800115 	stw	r18,4(r2)
  220ef0:	11000215 	stw	r4,8(r2)
  220ef4:	89801a04 	addi	r6,r17,104
  220ef8:	000b883a 	mov	r5,zero
  220efc:	02226c00 	call	2226c0 <memset>
  220f00:	8005883a 	mov	r2,r16
  220f04:	dfc00317 	ldw	ra,12(sp)
  220f08:	dc800217 	ldw	r18,8(sp)
  220f0c:	dc400117 	ldw	r17,4(sp)
  220f10:	dc000017 	ldw	r16,0(sp)
  220f14:	dec00404 	addi	sp,sp,16
  220f18:	f800283a 	ret

00220f1c <__sfp>:
  220f1c:	defffb04 	addi	sp,sp,-20
  220f20:	dc000015 	stw	r16,0(sp)
  220f24:	040008f4 	movhi	r16,35
  220f28:	840ae204 	addi	r16,r16,11144
  220f2c:	dcc00315 	stw	r19,12(sp)
  220f30:	2027883a 	mov	r19,r4
  220f34:	81000017 	ldw	r4,0(r16)
  220f38:	dfc00415 	stw	ra,16(sp)
  220f3c:	dc800215 	stw	r18,8(sp)
  220f40:	20800e17 	ldw	r2,56(r4)
  220f44:	dc400115 	stw	r17,4(sp)
  220f48:	1000021e 	bne	r2,zero,220f54 <__sfp+0x38>
  220f4c:	0220d100 	call	220d10 <__sinit.part.1>
  220f50:	81000017 	ldw	r4,0(r16)
  220f54:	2480b804 	addi	r18,r4,736
  220f58:	047fffc4 	movi	r17,-1
  220f5c:	91000117 	ldw	r4,4(r18)
  220f60:	94000217 	ldw	r16,8(r18)
  220f64:	213fffc4 	addi	r4,r4,-1
  220f68:	20000a16 	blt	r4,zero,220f94 <__sfp+0x78>
  220f6c:	8080030f 	ldh	r2,12(r16)
  220f70:	10000c26 	beq	r2,zero,220fa4 <__sfp+0x88>
  220f74:	80c01d04 	addi	r3,r16,116
  220f78:	00000206 	br	220f84 <__sfp+0x68>
  220f7c:	18bfe60f 	ldh	r2,-104(r3)
  220f80:	10000826 	beq	r2,zero,220fa4 <__sfp+0x88>
  220f84:	213fffc4 	addi	r4,r4,-1
  220f88:	1c3ffd04 	addi	r16,r3,-12
  220f8c:	18c01a04 	addi	r3,r3,104
  220f90:	247ffa1e 	bne	r4,r17,220f7c <_gp+0xfffe63f4>
  220f94:	90800017 	ldw	r2,0(r18)
  220f98:	10001d26 	beq	r2,zero,221010 <__sfp+0xf4>
  220f9c:	1025883a 	mov	r18,r2
  220fa0:	003fee06 	br	220f5c <_gp+0xfffe63d4>
  220fa4:	00bfffc4 	movi	r2,-1
  220fa8:	8080038d 	sth	r2,14(r16)
  220fac:	00800044 	movi	r2,1
  220fb0:	8080030d 	sth	r2,12(r16)
  220fb4:	80001915 	stw	zero,100(r16)
  220fb8:	80000015 	stw	zero,0(r16)
  220fbc:	80000215 	stw	zero,8(r16)
  220fc0:	80000115 	stw	zero,4(r16)
  220fc4:	80000415 	stw	zero,16(r16)
  220fc8:	80000515 	stw	zero,20(r16)
  220fcc:	80000615 	stw	zero,24(r16)
  220fd0:	01800204 	movi	r6,8
  220fd4:	000b883a 	mov	r5,zero
  220fd8:	81001704 	addi	r4,r16,92
  220fdc:	02226c00 	call	2226c0 <memset>
  220fe0:	8005883a 	mov	r2,r16
  220fe4:	80000c15 	stw	zero,48(r16)
  220fe8:	80000d15 	stw	zero,52(r16)
  220fec:	80001115 	stw	zero,68(r16)
  220ff0:	80001215 	stw	zero,72(r16)
  220ff4:	dfc00417 	ldw	ra,16(sp)
  220ff8:	dcc00317 	ldw	r19,12(sp)
  220ffc:	dc800217 	ldw	r18,8(sp)
  221000:	dc400117 	ldw	r17,4(sp)
  221004:	dc000017 	ldw	r16,0(sp)
  221008:	dec00504 	addi	sp,sp,20
  22100c:	f800283a 	ret
  221010:	01400104 	movi	r5,4
  221014:	9809883a 	mov	r4,r19
  221018:	0220eb40 	call	220eb4 <__sfmoreglue>
  22101c:	90800015 	stw	r2,0(r18)
  221020:	103fde1e 	bne	r2,zero,220f9c <_gp+0xfffe6414>
  221024:	00800304 	movi	r2,12
  221028:	98800015 	stw	r2,0(r19)
  22102c:	0005883a 	mov	r2,zero
  221030:	003ff006 	br	220ff4 <_gp+0xfffe646c>

00221034 <_cleanup>:
  221034:	008008f4 	movhi	r2,35
  221038:	108ae204 	addi	r2,r2,11144
  22103c:	11000017 	ldw	r4,0(r2)
  221040:	014008b4 	movhi	r5,34
  221044:	29425404 	addi	r5,r5,2384
  221048:	0221bc81 	jmpi	221bc8 <_fwalk_reent>

0022104c <__sinit>:
  22104c:	20800e17 	ldw	r2,56(r4)
  221050:	10000126 	beq	r2,zero,221058 <__sinit+0xc>
  221054:	f800283a 	ret
  221058:	0220d101 	jmpi	220d10 <__sinit.part.1>

0022105c <__sfp_lock_acquire>:
  22105c:	f800283a 	ret

00221060 <__sfp_lock_release>:
  221060:	f800283a 	ret

00221064 <__sinit_lock_acquire>:
  221064:	f800283a 	ret

00221068 <__sinit_lock_release>:
  221068:	f800283a 	ret

0022106c <__fp_lock_all>:
  22106c:	008008f4 	movhi	r2,35
  221070:	108ae304 	addi	r2,r2,11148
  221074:	11000017 	ldw	r4,0(r2)
  221078:	014008b4 	movhi	r5,34
  22107c:	2943ab04 	addi	r5,r5,3756
  221080:	0221b041 	jmpi	221b04 <_fwalk>

00221084 <__fp_unlock_all>:
  221084:	008008f4 	movhi	r2,35
  221088:	108ae304 	addi	r2,r2,11148
  22108c:	11000017 	ldw	r4,0(r2)
  221090:	014008b4 	movhi	r5,34
  221094:	29433f04 	addi	r5,r5,3324
  221098:	0221b041 	jmpi	221b04 <_fwalk>

0022109c <_fopen_r>:
  22109c:	defffa04 	addi	sp,sp,-24
  2210a0:	3005883a 	mov	r2,r6
  2210a4:	dcc00415 	stw	r19,16(sp)
  2210a8:	d80d883a 	mov	r6,sp
  2210ac:	2827883a 	mov	r19,r5
  2210b0:	100b883a 	mov	r5,r2
  2210b4:	dc800315 	stw	r18,12(sp)
  2210b8:	dfc00515 	stw	ra,20(sp)
  2210bc:	dc400215 	stw	r17,8(sp)
  2210c0:	dc000115 	stw	r16,4(sp)
  2210c4:	2025883a 	mov	r18,r4
  2210c8:	0226bf00 	call	226bf0 <__sflags>
  2210cc:	10002726 	beq	r2,zero,22116c <_fopen_r+0xd0>
  2210d0:	9009883a 	mov	r4,r18
  2210d4:	1023883a 	mov	r17,r2
  2210d8:	0220f1c0 	call	220f1c <__sfp>
  2210dc:	1021883a 	mov	r16,r2
  2210e0:	10002226 	beq	r2,zero,22116c <_fopen_r+0xd0>
  2210e4:	d9800017 	ldw	r6,0(sp)
  2210e8:	01c06d84 	movi	r7,438
  2210ec:	980b883a 	mov	r5,r19
  2210f0:	9009883a 	mov	r4,r18
  2210f4:	02227e80 	call	2227e8 <_open_r>
  2210f8:	10001916 	blt	r2,zero,221160 <_fopen_r+0xc4>
  2210fc:	8080038d 	sth	r2,14(r16)
  221100:	008008b4 	movhi	r2,34
  221104:	108ad804 	addi	r2,r2,11104
  221108:	80800815 	stw	r2,32(r16)
  22110c:	008008b4 	movhi	r2,34
  221110:	108aef04 	addi	r2,r2,11196
  221114:	80800915 	stw	r2,36(r16)
  221118:	008008b4 	movhi	r2,34
  22111c:	108b0e04 	addi	r2,r2,11320
  221120:	80800a15 	stw	r2,40(r16)
  221124:	008008b4 	movhi	r2,34
  221128:	108b2504 	addi	r2,r2,11412
  22112c:	8440030d 	sth	r17,12(r16)
  221130:	84000715 	stw	r16,28(r16)
  221134:	80800b15 	stw	r2,44(r16)
  221138:	8c40400c 	andi	r17,r17,256
  22113c:	88000d1e 	bne	r17,zero,221174 <_fopen_r+0xd8>
  221140:	8005883a 	mov	r2,r16
  221144:	dfc00517 	ldw	ra,20(sp)
  221148:	dcc00417 	ldw	r19,16(sp)
  22114c:	dc800317 	ldw	r18,12(sp)
  221150:	dc400217 	ldw	r17,8(sp)
  221154:	dc000117 	ldw	r16,4(sp)
  221158:	dec00604 	addi	sp,sp,24
  22115c:	f800283a 	ret
  221160:	022105c0 	call	22105c <__sfp_lock_acquire>
  221164:	8000030d 	sth	zero,12(r16)
  221168:	02210600 	call	221060 <__sfp_lock_release>
  22116c:	0005883a 	mov	r2,zero
  221170:	003ff406 	br	221144 <_gp+0xfffe65bc>
  221174:	01c00084 	movi	r7,2
  221178:	000d883a 	mov	r6,zero
  22117c:	800b883a 	mov	r5,r16
  221180:	9009883a 	mov	r4,r18
  221184:	02216280 	call	221628 <_fseek_r>
  221188:	8005883a 	mov	r2,r16
  22118c:	003fed06 	br	221144 <_gp+0xfffe65bc>

00221190 <fopen>:
  221190:	008008f4 	movhi	r2,35
  221194:	108ae304 	addi	r2,r2,11148
  221198:	280d883a 	mov	r6,r5
  22119c:	200b883a 	mov	r5,r4
  2211a0:	11000017 	ldw	r4,0(r2)
  2211a4:	022109c1 	jmpi	22109c <_fopen_r>

002211a8 <_fprintf_r>:
  2211a8:	defffe04 	addi	sp,sp,-8
  2211ac:	2809883a 	mov	r4,r5
  2211b0:	300b883a 	mov	r5,r6
  2211b4:	dfc00015 	stw	ra,0(sp)
  2211b8:	d9c00115 	stw	r7,4(sp)
  2211bc:	d9800104 	addi	r6,sp,4
  2211c0:	02250880 	call	225088 <__vfprintf_internal>
  2211c4:	dfc00017 	ldw	ra,0(sp)
  2211c8:	dec00204 	addi	sp,sp,8
  2211cc:	f800283a 	ret

002211d0 <fprintf>:
  2211d0:	defffd04 	addi	sp,sp,-12
  2211d4:	dfc00015 	stw	ra,0(sp)
  2211d8:	d9800115 	stw	r6,4(sp)
  2211dc:	d9c00215 	stw	r7,8(sp)
  2211e0:	d9800104 	addi	r6,sp,4
  2211e4:	02250880 	call	225088 <__vfprintf_internal>
  2211e8:	dfc00017 	ldw	ra,0(sp)
  2211ec:	dec00304 	addi	sp,sp,12
  2211f0:	f800283a 	ret

002211f4 <_malloc_trim_r>:
  2211f4:	defffb04 	addi	sp,sp,-20
  2211f8:	dcc00315 	stw	r19,12(sp)
  2211fc:	04c008f4 	movhi	r19,35
  221200:	dc800215 	stw	r18,8(sp)
  221204:	dc400115 	stw	r17,4(sp)
  221208:	dc000015 	stw	r16,0(sp)
  22120c:	dfc00415 	stw	ra,16(sp)
  221210:	2821883a 	mov	r16,r5
  221214:	9cc95804 	addi	r19,r19,9568
  221218:	2025883a 	mov	r18,r4
  22121c:	022e37c0 	call	22e37c <__malloc_lock>
  221220:	98800217 	ldw	r2,8(r19)
  221224:	14400117 	ldw	r17,4(r2)
  221228:	00bfff04 	movi	r2,-4
  22122c:	88a2703a 	and	r17,r17,r2
  221230:	8c21c83a 	sub	r16,r17,r16
  221234:	8403fbc4 	addi	r16,r16,4079
  221238:	8020d33a 	srli	r16,r16,12
  22123c:	0083ffc4 	movi	r2,4095
  221240:	843fffc4 	addi	r16,r16,-1
  221244:	8020933a 	slli	r16,r16,12
  221248:	1400060e 	bge	r2,r16,221264 <_malloc_trim_r+0x70>
  22124c:	000b883a 	mov	r5,zero
  221250:	9009883a 	mov	r4,r18
  221254:	0222b0c0 	call	222b0c <_sbrk_r>
  221258:	98c00217 	ldw	r3,8(r19)
  22125c:	1c47883a 	add	r3,r3,r17
  221260:	10c00a26 	beq	r2,r3,22128c <_malloc_trim_r+0x98>
  221264:	9009883a 	mov	r4,r18
  221268:	022e3a00 	call	22e3a0 <__malloc_unlock>
  22126c:	0005883a 	mov	r2,zero
  221270:	dfc00417 	ldw	ra,16(sp)
  221274:	dcc00317 	ldw	r19,12(sp)
  221278:	dc800217 	ldw	r18,8(sp)
  22127c:	dc400117 	ldw	r17,4(sp)
  221280:	dc000017 	ldw	r16,0(sp)
  221284:	dec00504 	addi	sp,sp,20
  221288:	f800283a 	ret
  22128c:	040bc83a 	sub	r5,zero,r16
  221290:	9009883a 	mov	r4,r18
  221294:	0222b0c0 	call	222b0c <_sbrk_r>
  221298:	00ffffc4 	movi	r3,-1
  22129c:	10c00d26 	beq	r2,r3,2212d4 <_malloc_trim_r+0xe0>
  2212a0:	00c008f4 	movhi	r3,35
  2212a4:	18d21004 	addi	r3,r3,18496
  2212a8:	18800017 	ldw	r2,0(r3)
  2212ac:	99000217 	ldw	r4,8(r19)
  2212b0:	8c23c83a 	sub	r17,r17,r16
  2212b4:	8c400054 	ori	r17,r17,1
  2212b8:	1421c83a 	sub	r16,r2,r16
  2212bc:	24400115 	stw	r17,4(r4)
  2212c0:	9009883a 	mov	r4,r18
  2212c4:	1c000015 	stw	r16,0(r3)
  2212c8:	022e3a00 	call	22e3a0 <__malloc_unlock>
  2212cc:	00800044 	movi	r2,1
  2212d0:	003fe706 	br	221270 <_gp+0xfffe66e8>
  2212d4:	000b883a 	mov	r5,zero
  2212d8:	9009883a 	mov	r4,r18
  2212dc:	0222b0c0 	call	222b0c <_sbrk_r>
  2212e0:	99000217 	ldw	r4,8(r19)
  2212e4:	014003c4 	movi	r5,15
  2212e8:	1107c83a 	sub	r3,r2,r4
  2212ec:	28ffdd0e 	bge	r5,r3,221264 <_gp+0xfffe66dc>
  2212f0:	014008f4 	movhi	r5,35
  2212f4:	294ae404 	addi	r5,r5,11152
  2212f8:	29400017 	ldw	r5,0(r5)
  2212fc:	18c00054 	ori	r3,r3,1
  221300:	20c00115 	stw	r3,4(r4)
  221304:	00c008f4 	movhi	r3,35
  221308:	1145c83a 	sub	r2,r2,r5
  22130c:	18d21004 	addi	r3,r3,18496
  221310:	18800015 	stw	r2,0(r3)
  221314:	003fd306 	br	221264 <_gp+0xfffe66dc>

00221318 <_free_r>:
  221318:	28004126 	beq	r5,zero,221420 <_free_r+0x108>
  22131c:	defffd04 	addi	sp,sp,-12
  221320:	dc400115 	stw	r17,4(sp)
  221324:	dc000015 	stw	r16,0(sp)
  221328:	2023883a 	mov	r17,r4
  22132c:	2821883a 	mov	r16,r5
  221330:	dfc00215 	stw	ra,8(sp)
  221334:	022e37c0 	call	22e37c <__malloc_lock>
  221338:	81ffff17 	ldw	r7,-4(r16)
  22133c:	00bfff84 	movi	r2,-2
  221340:	010008f4 	movhi	r4,35
  221344:	81bffe04 	addi	r6,r16,-8
  221348:	3884703a 	and	r2,r7,r2
  22134c:	21095804 	addi	r4,r4,9568
  221350:	308b883a 	add	r5,r6,r2
  221354:	2a400117 	ldw	r9,4(r5)
  221358:	22000217 	ldw	r8,8(r4)
  22135c:	00ffff04 	movi	r3,-4
  221360:	48c6703a 	and	r3,r9,r3
  221364:	2a005726 	beq	r5,r8,2214c4 <_free_r+0x1ac>
  221368:	28c00115 	stw	r3,4(r5)
  22136c:	39c0004c 	andi	r7,r7,1
  221370:	3800091e 	bne	r7,zero,221398 <_free_r+0x80>
  221374:	823ffe17 	ldw	r8,-8(r16)
  221378:	22400204 	addi	r9,r4,8
  22137c:	320dc83a 	sub	r6,r6,r8
  221380:	31c00217 	ldw	r7,8(r6)
  221384:	1205883a 	add	r2,r2,r8
  221388:	3a406526 	beq	r7,r9,221520 <_free_r+0x208>
  22138c:	32000317 	ldw	r8,12(r6)
  221390:	3a000315 	stw	r8,12(r7)
  221394:	41c00215 	stw	r7,8(r8)
  221398:	28cf883a 	add	r7,r5,r3
  22139c:	39c00117 	ldw	r7,4(r7)
  2213a0:	39c0004c 	andi	r7,r7,1
  2213a4:	38003a26 	beq	r7,zero,221490 <_free_r+0x178>
  2213a8:	10c00054 	ori	r3,r2,1
  2213ac:	30c00115 	stw	r3,4(r6)
  2213b0:	3087883a 	add	r3,r6,r2
  2213b4:	18800015 	stw	r2,0(r3)
  2213b8:	00c07fc4 	movi	r3,511
  2213bc:	18801936 	bltu	r3,r2,221424 <_free_r+0x10c>
  2213c0:	1004d0fa 	srli	r2,r2,3
  2213c4:	01c00044 	movi	r7,1
  2213c8:	21400117 	ldw	r5,4(r4)
  2213cc:	10c00044 	addi	r3,r2,1
  2213d0:	18c7883a 	add	r3,r3,r3
  2213d4:	1005d0ba 	srai	r2,r2,2
  2213d8:	18c7883a 	add	r3,r3,r3
  2213dc:	18c7883a 	add	r3,r3,r3
  2213e0:	1907883a 	add	r3,r3,r4
  2213e4:	3884983a 	sll	r2,r7,r2
  2213e8:	19c00017 	ldw	r7,0(r3)
  2213ec:	1a3ffe04 	addi	r8,r3,-8
  2213f0:	1144b03a 	or	r2,r2,r5
  2213f4:	32000315 	stw	r8,12(r6)
  2213f8:	31c00215 	stw	r7,8(r6)
  2213fc:	20800115 	stw	r2,4(r4)
  221400:	19800015 	stw	r6,0(r3)
  221404:	39800315 	stw	r6,12(r7)
  221408:	8809883a 	mov	r4,r17
  22140c:	dfc00217 	ldw	ra,8(sp)
  221410:	dc400117 	ldw	r17,4(sp)
  221414:	dc000017 	ldw	r16,0(sp)
  221418:	dec00304 	addi	sp,sp,12
  22141c:	022e3a01 	jmpi	22e3a0 <__malloc_unlock>
  221420:	f800283a 	ret
  221424:	100ad27a 	srli	r5,r2,9
  221428:	00c00104 	movi	r3,4
  22142c:	19404a36 	bltu	r3,r5,221558 <_free_r+0x240>
  221430:	100ad1ba 	srli	r5,r2,6
  221434:	28c00e44 	addi	r3,r5,57
  221438:	18c7883a 	add	r3,r3,r3
  22143c:	29400e04 	addi	r5,r5,56
  221440:	18c7883a 	add	r3,r3,r3
  221444:	18c7883a 	add	r3,r3,r3
  221448:	1909883a 	add	r4,r3,r4
  22144c:	20c00017 	ldw	r3,0(r4)
  221450:	01c008f4 	movhi	r7,35
  221454:	213ffe04 	addi	r4,r4,-8
  221458:	39c95804 	addi	r7,r7,9568
  22145c:	20c04426 	beq	r4,r3,221570 <_free_r+0x258>
  221460:	01ffff04 	movi	r7,-4
  221464:	19400117 	ldw	r5,4(r3)
  221468:	29ca703a 	and	r5,r5,r7
  22146c:	1140022e 	bgeu	r2,r5,221478 <_free_r+0x160>
  221470:	18c00217 	ldw	r3,8(r3)
  221474:	20fffb1e 	bne	r4,r3,221464 <_gp+0xfffe68dc>
  221478:	19000317 	ldw	r4,12(r3)
  22147c:	31000315 	stw	r4,12(r6)
  221480:	30c00215 	stw	r3,8(r6)
  221484:	21800215 	stw	r6,8(r4)
  221488:	19800315 	stw	r6,12(r3)
  22148c:	003fde06 	br	221408 <_gp+0xfffe6880>
  221490:	29c00217 	ldw	r7,8(r5)
  221494:	10c5883a 	add	r2,r2,r3
  221498:	00c008f4 	movhi	r3,35
  22149c:	18c95a04 	addi	r3,r3,9576
  2214a0:	38c03b26 	beq	r7,r3,221590 <_free_r+0x278>
  2214a4:	2a000317 	ldw	r8,12(r5)
  2214a8:	11400054 	ori	r5,r2,1
  2214ac:	3087883a 	add	r3,r6,r2
  2214b0:	3a000315 	stw	r8,12(r7)
  2214b4:	41c00215 	stw	r7,8(r8)
  2214b8:	31400115 	stw	r5,4(r6)
  2214bc:	18800015 	stw	r2,0(r3)
  2214c0:	003fbd06 	br	2213b8 <_gp+0xfffe6830>
  2214c4:	39c0004c 	andi	r7,r7,1
  2214c8:	10c5883a 	add	r2,r2,r3
  2214cc:	3800071e 	bne	r7,zero,2214ec <_free_r+0x1d4>
  2214d0:	81fffe17 	ldw	r7,-8(r16)
  2214d4:	31cdc83a 	sub	r6,r6,r7
  2214d8:	30c00317 	ldw	r3,12(r6)
  2214dc:	31400217 	ldw	r5,8(r6)
  2214e0:	11c5883a 	add	r2,r2,r7
  2214e4:	28c00315 	stw	r3,12(r5)
  2214e8:	19400215 	stw	r5,8(r3)
  2214ec:	10c00054 	ori	r3,r2,1
  2214f0:	30c00115 	stw	r3,4(r6)
  2214f4:	00c008f4 	movhi	r3,35
  2214f8:	18cae504 	addi	r3,r3,11156
  2214fc:	18c00017 	ldw	r3,0(r3)
  221500:	21800215 	stw	r6,8(r4)
  221504:	10ffc036 	bltu	r2,r3,221408 <_gp+0xfffe6880>
  221508:	008008f4 	movhi	r2,35
  22150c:	10920504 	addi	r2,r2,18452
  221510:	11400017 	ldw	r5,0(r2)
  221514:	8809883a 	mov	r4,r17
  221518:	02211f40 	call	2211f4 <_malloc_trim_r>
  22151c:	003fba06 	br	221408 <_gp+0xfffe6880>
  221520:	28c9883a 	add	r4,r5,r3
  221524:	21000117 	ldw	r4,4(r4)
  221528:	2100004c 	andi	r4,r4,1
  22152c:	2000391e 	bne	r4,zero,221614 <_free_r+0x2fc>
  221530:	29c00217 	ldw	r7,8(r5)
  221534:	29000317 	ldw	r4,12(r5)
  221538:	1885883a 	add	r2,r3,r2
  22153c:	10c00054 	ori	r3,r2,1
  221540:	39000315 	stw	r4,12(r7)
  221544:	21c00215 	stw	r7,8(r4)
  221548:	30c00115 	stw	r3,4(r6)
  22154c:	308d883a 	add	r6,r6,r2
  221550:	30800015 	stw	r2,0(r6)
  221554:	003fac06 	br	221408 <_gp+0xfffe6880>
  221558:	00c00504 	movi	r3,20
  22155c:	19401536 	bltu	r3,r5,2215b4 <_free_r+0x29c>
  221560:	28c01704 	addi	r3,r5,92
  221564:	18c7883a 	add	r3,r3,r3
  221568:	294016c4 	addi	r5,r5,91
  22156c:	003fb406 	br	221440 <_gp+0xfffe68b8>
  221570:	280bd0ba 	srai	r5,r5,2
  221574:	00c00044 	movi	r3,1
  221578:	38800117 	ldw	r2,4(r7)
  22157c:	194a983a 	sll	r5,r3,r5
  221580:	2007883a 	mov	r3,r4
  221584:	2884b03a 	or	r2,r5,r2
  221588:	38800115 	stw	r2,4(r7)
  22158c:	003fbb06 	br	22147c <_gp+0xfffe68f4>
  221590:	21800515 	stw	r6,20(r4)
  221594:	21800415 	stw	r6,16(r4)
  221598:	10c00054 	ori	r3,r2,1
  22159c:	31c00315 	stw	r7,12(r6)
  2215a0:	31c00215 	stw	r7,8(r6)
  2215a4:	30c00115 	stw	r3,4(r6)
  2215a8:	308d883a 	add	r6,r6,r2
  2215ac:	30800015 	stw	r2,0(r6)
  2215b0:	003f9506 	br	221408 <_gp+0xfffe6880>
  2215b4:	00c01504 	movi	r3,84
  2215b8:	19400536 	bltu	r3,r5,2215d0 <_free_r+0x2b8>
  2215bc:	100ad33a 	srli	r5,r2,12
  2215c0:	28c01bc4 	addi	r3,r5,111
  2215c4:	18c7883a 	add	r3,r3,r3
  2215c8:	29401b84 	addi	r5,r5,110
  2215cc:	003f9c06 	br	221440 <_gp+0xfffe68b8>
  2215d0:	00c05504 	movi	r3,340
  2215d4:	19400536 	bltu	r3,r5,2215ec <_free_r+0x2d4>
  2215d8:	100ad3fa 	srli	r5,r2,15
  2215dc:	28c01e04 	addi	r3,r5,120
  2215e0:	18c7883a 	add	r3,r3,r3
  2215e4:	29401dc4 	addi	r5,r5,119
  2215e8:	003f9506 	br	221440 <_gp+0xfffe68b8>
  2215ec:	00c15504 	movi	r3,1364
  2215f0:	19400536 	bltu	r3,r5,221608 <_free_r+0x2f0>
  2215f4:	100ad4ba 	srli	r5,r2,18
  2215f8:	28c01f44 	addi	r3,r5,125
  2215fc:	18c7883a 	add	r3,r3,r3
  221600:	29401f04 	addi	r5,r5,124
  221604:	003f8e06 	br	221440 <_gp+0xfffe68b8>
  221608:	00c03f84 	movi	r3,254
  22160c:	01401f84 	movi	r5,126
  221610:	003f8b06 	br	221440 <_gp+0xfffe68b8>
  221614:	10c00054 	ori	r3,r2,1
  221618:	30c00115 	stw	r3,4(r6)
  22161c:	308d883a 	add	r6,r6,r2
  221620:	30800015 	stw	r2,0(r6)
  221624:	003f7806 	br	221408 <_gp+0xfffe6880>

00221628 <_fseek_r>:
  221628:	02216481 	jmpi	221648 <_fseeko_r>

0022162c <fseek>:
  22162c:	008008f4 	movhi	r2,35
  221630:	108ae304 	addi	r2,r2,11148
  221634:	300f883a 	mov	r7,r6
  221638:	280d883a 	mov	r6,r5
  22163c:	200b883a 	mov	r5,r4
  221640:	11000017 	ldw	r4,0(r2)
  221644:	02216481 	jmpi	221648 <_fseeko_r>

00221648 <_fseeko_r>:
  221648:	deffe804 	addi	sp,sp,-96
  22164c:	dd401415 	stw	r21,80(sp)
  221650:	dc801115 	stw	r18,68(sp)
  221654:	dc401015 	stw	r17,64(sp)
  221658:	dc000f15 	stw	r16,60(sp)
  22165c:	dfc01715 	stw	ra,92(sp)
  221660:	ddc01615 	stw	r23,88(sp)
  221664:	dd801515 	stw	r22,84(sp)
  221668:	dd001315 	stw	r20,76(sp)
  22166c:	dcc01215 	stw	r19,72(sp)
  221670:	2023883a 	mov	r17,r4
  221674:	2821883a 	mov	r16,r5
  221678:	302b883a 	mov	r21,r6
  22167c:	3825883a 	mov	r18,r7
  221680:	20000226 	beq	r4,zero,22168c <_fseeko_r+0x44>
  221684:	20800e17 	ldw	r2,56(r4)
  221688:	10005a26 	beq	r2,zero,2217f4 <_fseeko_r+0x1ac>
  22168c:	8080030b 	ldhu	r2,12(r16)
  221690:	00c04204 	movi	r3,264
  221694:	1080420c 	andi	r2,r2,264
  221698:	10c05b26 	beq	r2,r3,221808 <_fseeko_r+0x1c0>
  22169c:	85000a17 	ldw	r20,40(r16)
  2216a0:	a000f626 	beq	r20,zero,221a7c <_fseeko_r+0x434>
  2216a4:	00800044 	movi	r2,1
  2216a8:	90803e26 	beq	r18,r2,2217a4 <_fseeko_r+0x15c>
  2216ac:	00800084 	movi	r2,2
  2216b0:	90801026 	beq	r18,r2,2216f4 <_fseeko_r+0xac>
  2216b4:	90000f26 	beq	r18,zero,2216f4 <_fseeko_r+0xac>
  2216b8:	00800584 	movi	r2,22
  2216bc:	88800015 	stw	r2,0(r17)
  2216c0:	04ffffc4 	movi	r19,-1
  2216c4:	9805883a 	mov	r2,r19
  2216c8:	dfc01717 	ldw	ra,92(sp)
  2216cc:	ddc01617 	ldw	r23,88(sp)
  2216d0:	dd801517 	ldw	r22,84(sp)
  2216d4:	dd401417 	ldw	r21,80(sp)
  2216d8:	dd001317 	ldw	r20,76(sp)
  2216dc:	dcc01217 	ldw	r19,72(sp)
  2216e0:	dc801117 	ldw	r18,68(sp)
  2216e4:	dc401017 	ldw	r17,64(sp)
  2216e8:	dc000f17 	ldw	r16,60(sp)
  2216ec:	dec01804 	addi	sp,sp,96
  2216f0:	f800283a 	ret
  2216f4:	80800417 	ldw	r2,16(r16)
  2216f8:	002f883a 	mov	r23,zero
  2216fc:	0027883a 	mov	r19,zero
  221700:	1000cb26 	beq	r2,zero,221a30 <_fseeko_r+0x3e8>
  221704:	8080030b 	ldhu	r2,12(r16)
  221708:	10c2068c 	andi	r3,r2,2074
  22170c:	1800071e 	bne	r3,zero,22172c <_fseeko_r+0xe4>
  221710:	10c1000c 	andi	r3,r2,1024
  221714:	1800451e 	bne	r3,zero,22182c <_fseeko_r+0x1e4>
  221718:	00c008b4 	movhi	r3,34
  22171c:	18cb0e04 	addi	r3,r3,11320
  221720:	a0c0b726 	beq	r20,r3,221a00 <_fseeko_r+0x3b8>
  221724:	10820014 	ori	r2,r2,2048
  221728:	8080030d 	sth	r2,12(r16)
  22172c:	800b883a 	mov	r5,r16
  221730:	8809883a 	mov	r4,r17
  221734:	0220c700 	call	220c70 <_fflush_r>
  221738:	1027883a 	mov	r19,r2
  22173c:	103fe01e 	bne	r2,zero,2216c0 <_gp+0xfffe6b38>
  221740:	81400717 	ldw	r5,28(r16)
  221744:	900f883a 	mov	r7,r18
  221748:	a80d883a 	mov	r6,r21
  22174c:	8809883a 	mov	r4,r17
  221750:	a03ee83a 	callr	r20
  221754:	00ffffc4 	movi	r3,-1
  221758:	10ffd926 	beq	r2,r3,2216c0 <_gp+0xfffe6b38>
  22175c:	81400c17 	ldw	r5,48(r16)
  221760:	28000526 	beq	r5,zero,221778 <_fseeko_r+0x130>
  221764:	80801004 	addi	r2,r16,64
  221768:	28800226 	beq	r5,r2,221774 <_fseeko_r+0x12c>
  22176c:	8809883a 	mov	r4,r17
  221770:	02213180 	call	221318 <_free_r>
  221774:	80000c15 	stw	zero,48(r16)
  221778:	8080030b 	ldhu	r2,12(r16)
  22177c:	80c00417 	ldw	r3,16(r16)
  221780:	80000115 	stw	zero,4(r16)
  221784:	10bdf7cc 	andi	r2,r2,63455
  221788:	80c00015 	stw	r3,0(r16)
  22178c:	8080030d 	sth	r2,12(r16)
  221790:	01800204 	movi	r6,8
  221794:	000b883a 	mov	r5,zero
  221798:	81001704 	addi	r4,r16,92
  22179c:	02226c00 	call	2226c0 <memset>
  2217a0:	003fc806 	br	2216c4 <_gp+0xfffe6b3c>
  2217a4:	800b883a 	mov	r5,r16
  2217a8:	8809883a 	mov	r4,r17
  2217ac:	0220c700 	call	220c70 <_fflush_r>
  2217b0:	8080030b 	ldhu	r2,12(r16)
  2217b4:	10c4000c 	andi	r3,r2,4096
  2217b8:	18008726 	beq	r3,zero,2219d8 <_fseeko_r+0x390>
  2217bc:	84c01417 	ldw	r19,80(r16)
  2217c0:	10c0010c 	andi	r3,r2,4
  2217c4:	1800431e 	bne	r3,zero,2218d4 <_fseeko_r+0x28c>
  2217c8:	1080020c 	andi	r2,r2,8
  2217cc:	10008026 	beq	r2,zero,2219d0 <_fseeko_r+0x388>
  2217d0:	80c00017 	ldw	r3,0(r16)
  2217d4:	80800417 	ldw	r2,16(r16)
  2217d8:	18000226 	beq	r3,zero,2217e4 <_fseeko_r+0x19c>
  2217dc:	1887c83a 	sub	r3,r3,r2
  2217e0:	98e7883a 	add	r19,r19,r3
  2217e4:	aceb883a 	add	r21,r21,r19
  2217e8:	05c00044 	movi	r23,1
  2217ec:	0025883a 	mov	r18,zero
  2217f0:	003fc306 	br	221700 <_gp+0xfffe6b78>
  2217f4:	022104c0 	call	22104c <__sinit>
  2217f8:	8080030b 	ldhu	r2,12(r16)
  2217fc:	00c04204 	movi	r3,264
  221800:	1080420c 	andi	r2,r2,264
  221804:	10ffa51e 	bne	r2,r3,22169c <_gp+0xfffe6b14>
  221808:	800b883a 	mov	r5,r16
  22180c:	8809883a 	mov	r4,r17
  221810:	0220c700 	call	220c70 <_fflush_r>
  221814:	003fa106 	br	22169c <_gp+0xfffe6b14>
  221818:	8080030b 	ldhu	r2,12(r16)
  22181c:	00c10004 	movi	r3,1024
  221820:	80c01315 	stw	r3,76(r16)
  221824:	10c4b03a 	or	r2,r2,r3
  221828:	8080030d 	sth	r2,12(r16)
  22182c:	9000311e 	bne	r18,zero,2218f4 <_fseeko_r+0x2ac>
  221830:	a82d883a 	mov	r22,r21
  221834:	b800371e 	bne	r23,zero,221914 <_fseeko_r+0x2cc>
  221838:	8080030b 	ldhu	r2,12(r16)
  22183c:	1084000c 	andi	r2,r2,4096
  221840:	10007f26 	beq	r2,zero,221a40 <_fseeko_r+0x3f8>
  221844:	80801417 	ldw	r2,80(r16)
  221848:	81800117 	ldw	r6,4(r16)
  22184c:	81400c17 	ldw	r5,48(r16)
  221850:	11a7c83a 	sub	r19,r2,r6
  221854:	28008226 	beq	r5,zero,221a60 <_fseeko_r+0x418>
  221858:	81c00f17 	ldw	r7,60(r16)
  22185c:	99e7c83a 	sub	r19,r19,r7
  221860:	81000e17 	ldw	r4,56(r16)
  221864:	80800417 	ldw	r2,16(r16)
  221868:	99a7883a 	add	r19,r19,r6
  22186c:	2087c83a 	sub	r3,r4,r2
  221870:	98e7c83a 	sub	r19,r19,r3
  221874:	38c7883a 	add	r3,r7,r3
  221878:	b4c02b16 	blt	r22,r19,221928 <_fseeko_r+0x2e0>
  22187c:	98c9883a 	add	r4,r19,r3
  221880:	b100292e 	bgeu	r22,r4,221928 <_fseeko_r+0x2e0>
  221884:	b4e7c83a 	sub	r19,r22,r19
  221888:	14c5883a 	add	r2,r2,r19
  22188c:	1ce7c83a 	sub	r19,r3,r19
  221890:	80800015 	stw	r2,0(r16)
  221894:	84c00115 	stw	r19,4(r16)
  221898:	28000526 	beq	r5,zero,2218b0 <_fseeko_r+0x268>
  22189c:	80801004 	addi	r2,r16,64
  2218a0:	28800226 	beq	r5,r2,2218ac <_fseeko_r+0x264>
  2218a4:	8809883a 	mov	r4,r17
  2218a8:	02213180 	call	221318 <_free_r>
  2218ac:	80000c15 	stw	zero,48(r16)
  2218b0:	8080030b 	ldhu	r2,12(r16)
  2218b4:	01800204 	movi	r6,8
  2218b8:	000b883a 	mov	r5,zero
  2218bc:	10bff7cc 	andi	r2,r2,65503
  2218c0:	8080030d 	sth	r2,12(r16)
  2218c4:	81001704 	addi	r4,r16,92
  2218c8:	02226c00 	call	2226c0 <memset>
  2218cc:	0027883a 	mov	r19,zero
  2218d0:	003f7c06 	br	2216c4 <_gp+0xfffe6b3c>
  2218d4:	80c00117 	ldw	r3,4(r16)
  2218d8:	80800c17 	ldw	r2,48(r16)
  2218dc:	98e7c83a 	sub	r19,r19,r3
  2218e0:	10003b26 	beq	r2,zero,2219d0 <_fseeko_r+0x388>
  2218e4:	80c00f17 	ldw	r3,60(r16)
  2218e8:	80800417 	ldw	r2,16(r16)
  2218ec:	98e7c83a 	sub	r19,r19,r3
  2218f0:	003fbc06 	br	2217e4 <_gp+0xfffe6c5c>
  2218f4:	8140038f 	ldh	r5,14(r16)
  2218f8:	d80d883a 	mov	r6,sp
  2218fc:	8809883a 	mov	r4,r17
  221900:	0221aa80 	call	221aa8 <_fstat_r>
  221904:	103f891e 	bne	r2,zero,22172c <_gp+0xfffe6ba4>
  221908:	dd800417 	ldw	r22,16(sp)
  22190c:	adad883a 	add	r22,r21,r22
  221910:	b83fc926 	beq	r23,zero,221838 <_gp+0xfffe6cb0>
  221914:	81400c17 	ldw	r5,48(r16)
  221918:	81800117 	ldw	r6,4(r16)
  22191c:	28005026 	beq	r5,zero,221a60 <_fseeko_r+0x418>
  221920:	81c00f17 	ldw	r7,60(r16)
  221924:	003fce06 	br	221860 <_gp+0xfffe6cd8>
  221928:	84c01317 	ldw	r19,76(r16)
  22192c:	81400717 	ldw	r5,28(r16)
  221930:	000f883a 	mov	r7,zero
  221934:	04e7c83a 	sub	r19,zero,r19
  221938:	9da6703a 	and	r19,r19,r22
  22193c:	980d883a 	mov	r6,r19
  221940:	8809883a 	mov	r4,r17
  221944:	a03ee83a 	callr	r20
  221948:	00ffffc4 	movi	r3,-1
  22194c:	10ff7726 	beq	r2,r3,22172c <_gp+0xfffe6ba4>
  221950:	80800417 	ldw	r2,16(r16)
  221954:	81400c17 	ldw	r5,48(r16)
  221958:	80000115 	stw	zero,4(r16)
  22195c:	80800015 	stw	r2,0(r16)
  221960:	28000526 	beq	r5,zero,221978 <_fseeko_r+0x330>
  221964:	80801004 	addi	r2,r16,64
  221968:	28800226 	beq	r5,r2,221974 <_fseeko_r+0x32c>
  22196c:	8809883a 	mov	r4,r17
  221970:	02213180 	call	221318 <_free_r>
  221974:	80000c15 	stw	zero,48(r16)
  221978:	8080030b 	ldhu	r2,12(r16)
  22197c:	b4e7c83a 	sub	r19,r22,r19
  221980:	10bff7cc 	andi	r2,r2,65503
  221984:	8080030d 	sth	r2,12(r16)
  221988:	98000b26 	beq	r19,zero,2219b8 <_fseeko_r+0x370>
  22198c:	800b883a 	mov	r5,r16
  221990:	8809883a 	mov	r4,r17
  221994:	02229380 	call	222938 <__srefill_r>
  221998:	103f641e 	bne	r2,zero,22172c <_gp+0xfffe6ba4>
  22199c:	80800117 	ldw	r2,4(r16)
  2219a0:	14ff6236 	bltu	r2,r19,22172c <_gp+0xfffe6ba4>
  2219a4:	80c00017 	ldw	r3,0(r16)
  2219a8:	14c5c83a 	sub	r2,r2,r19
  2219ac:	80800115 	stw	r2,4(r16)
  2219b0:	1ce7883a 	add	r19,r3,r19
  2219b4:	84c00015 	stw	r19,0(r16)
  2219b8:	01800204 	movi	r6,8
  2219bc:	000b883a 	mov	r5,zero
  2219c0:	81001704 	addi	r4,r16,92
  2219c4:	02226c00 	call	2226c0 <memset>
  2219c8:	0027883a 	mov	r19,zero
  2219cc:	003f3d06 	br	2216c4 <_gp+0xfffe6b3c>
  2219d0:	80800417 	ldw	r2,16(r16)
  2219d4:	003f8306 	br	2217e4 <_gp+0xfffe6c5c>
  2219d8:	81400717 	ldw	r5,28(r16)
  2219dc:	900f883a 	mov	r7,r18
  2219e0:	000d883a 	mov	r6,zero
  2219e4:	8809883a 	mov	r4,r17
  2219e8:	a03ee83a 	callr	r20
  2219ec:	1027883a 	mov	r19,r2
  2219f0:	00bfffc4 	movi	r2,-1
  2219f4:	98bf3226 	beq	r19,r2,2216c0 <_gp+0xfffe6b38>
  2219f8:	8080030b 	ldhu	r2,12(r16)
  2219fc:	003f7006 	br	2217c0 <_gp+0xfffe6c38>
  221a00:	8140038f 	ldh	r5,14(r16)
  221a04:	283f4716 	blt	r5,zero,221724 <_gp+0xfffe6b9c>
  221a08:	d80d883a 	mov	r6,sp
  221a0c:	8809883a 	mov	r4,r17
  221a10:	0221aa80 	call	221aa8 <_fstat_r>
  221a14:	1000041e 	bne	r2,zero,221a28 <_fseeko_r+0x3e0>
  221a18:	d8800117 	ldw	r2,4(sp)
  221a1c:	00e00014 	movui	r3,32768
  221a20:	10bc000c 	andi	r2,r2,61440
  221a24:	10ff7c26 	beq	r2,r3,221818 <_gp+0xfffe6c90>
  221a28:	8080030b 	ldhu	r2,12(r16)
  221a2c:	003f3d06 	br	221724 <_gp+0xfffe6b9c>
  221a30:	800b883a 	mov	r5,r16
  221a34:	8809883a 	mov	r4,r17
  221a38:	0221cf80 	call	221cf8 <__smakebuf_r>
  221a3c:	003f3106 	br	221704 <_gp+0xfffe6b7c>
  221a40:	81400717 	ldw	r5,28(r16)
  221a44:	01c00044 	movi	r7,1
  221a48:	000d883a 	mov	r6,zero
  221a4c:	8809883a 	mov	r4,r17
  221a50:	a03ee83a 	callr	r20
  221a54:	00ffffc4 	movi	r3,-1
  221a58:	10ff7b1e 	bne	r2,r3,221848 <_gp+0xfffe6cc0>
  221a5c:	003f3306 	br	22172c <_gp+0xfffe6ba4>
  221a60:	80c00017 	ldw	r3,0(r16)
  221a64:	80800417 	ldw	r2,16(r16)
  221a68:	000b883a 	mov	r5,zero
  221a6c:	1887c83a 	sub	r3,r3,r2
  221a70:	98e7c83a 	sub	r19,r19,r3
  221a74:	30c7883a 	add	r3,r6,r3
  221a78:	003f7f06 	br	221878 <_gp+0xfffe6cf0>
  221a7c:	00800744 	movi	r2,29
  221a80:	88800015 	stw	r2,0(r17)
  221a84:	04ffffc4 	movi	r19,-1
  221a88:	003f0e06 	br	2216c4 <_gp+0xfffe6b3c>

00221a8c <fseeko>:
  221a8c:	008008f4 	movhi	r2,35
  221a90:	108ae304 	addi	r2,r2,11148
  221a94:	300f883a 	mov	r7,r6
  221a98:	280d883a 	mov	r6,r5
  221a9c:	200b883a 	mov	r5,r4
  221aa0:	11000017 	ldw	r4,0(r2)
  221aa4:	02216481 	jmpi	221648 <_fseeko_r>

00221aa8 <_fstat_r>:
  221aa8:	defffd04 	addi	sp,sp,-12
  221aac:	2805883a 	mov	r2,r5
  221ab0:	dc000015 	stw	r16,0(sp)
  221ab4:	040008f4 	movhi	r16,35
  221ab8:	dc400115 	stw	r17,4(sp)
  221abc:	84120204 	addi	r16,r16,18440
  221ac0:	2023883a 	mov	r17,r4
  221ac4:	300b883a 	mov	r5,r6
  221ac8:	1009883a 	mov	r4,r2
  221acc:	dfc00215 	stw	ra,8(sp)
  221ad0:	80000015 	stw	zero,0(r16)
  221ad4:	022df740 	call	22df74 <fstat>
  221ad8:	00ffffc4 	movi	r3,-1
  221adc:	10c00526 	beq	r2,r3,221af4 <_fstat_r+0x4c>
  221ae0:	dfc00217 	ldw	ra,8(sp)
  221ae4:	dc400117 	ldw	r17,4(sp)
  221ae8:	dc000017 	ldw	r16,0(sp)
  221aec:	dec00304 	addi	sp,sp,12
  221af0:	f800283a 	ret
  221af4:	80c00017 	ldw	r3,0(r16)
  221af8:	183ff926 	beq	r3,zero,221ae0 <_gp+0xfffe6f58>
  221afc:	88c00015 	stw	r3,0(r17)
  221b00:	003ff706 	br	221ae0 <_gp+0xfffe6f58>

00221b04 <_fwalk>:
  221b04:	defff704 	addi	sp,sp,-36
  221b08:	dd000415 	stw	r20,16(sp)
  221b0c:	dfc00815 	stw	ra,32(sp)
  221b10:	ddc00715 	stw	r23,28(sp)
  221b14:	dd800615 	stw	r22,24(sp)
  221b18:	dd400515 	stw	r21,20(sp)
  221b1c:	dcc00315 	stw	r19,12(sp)
  221b20:	dc800215 	stw	r18,8(sp)
  221b24:	dc400115 	stw	r17,4(sp)
  221b28:	dc000015 	stw	r16,0(sp)
  221b2c:	2500b804 	addi	r20,r4,736
  221b30:	a0002326 	beq	r20,zero,221bc0 <_fwalk+0xbc>
  221b34:	282b883a 	mov	r21,r5
  221b38:	002f883a 	mov	r23,zero
  221b3c:	05800044 	movi	r22,1
  221b40:	04ffffc4 	movi	r19,-1
  221b44:	a4400117 	ldw	r17,4(r20)
  221b48:	a4800217 	ldw	r18,8(r20)
  221b4c:	8c7fffc4 	addi	r17,r17,-1
  221b50:	88000d16 	blt	r17,zero,221b88 <_fwalk+0x84>
  221b54:	94000304 	addi	r16,r18,12
  221b58:	94800384 	addi	r18,r18,14
  221b5c:	8080000b 	ldhu	r2,0(r16)
  221b60:	8c7fffc4 	addi	r17,r17,-1
  221b64:	813ffd04 	addi	r4,r16,-12
  221b68:	b080042e 	bgeu	r22,r2,221b7c <_fwalk+0x78>
  221b6c:	9080000f 	ldh	r2,0(r18)
  221b70:	14c00226 	beq	r2,r19,221b7c <_fwalk+0x78>
  221b74:	a83ee83a 	callr	r21
  221b78:	b8aeb03a 	or	r23,r23,r2
  221b7c:	84001a04 	addi	r16,r16,104
  221b80:	94801a04 	addi	r18,r18,104
  221b84:	8cfff51e 	bne	r17,r19,221b5c <_gp+0xfffe6fd4>
  221b88:	a5000017 	ldw	r20,0(r20)
  221b8c:	a03fed1e 	bne	r20,zero,221b44 <_gp+0xfffe6fbc>
  221b90:	b805883a 	mov	r2,r23
  221b94:	dfc00817 	ldw	ra,32(sp)
  221b98:	ddc00717 	ldw	r23,28(sp)
  221b9c:	dd800617 	ldw	r22,24(sp)
  221ba0:	dd400517 	ldw	r21,20(sp)
  221ba4:	dd000417 	ldw	r20,16(sp)
  221ba8:	dcc00317 	ldw	r19,12(sp)
  221bac:	dc800217 	ldw	r18,8(sp)
  221bb0:	dc400117 	ldw	r17,4(sp)
  221bb4:	dc000017 	ldw	r16,0(sp)
  221bb8:	dec00904 	addi	sp,sp,36
  221bbc:	f800283a 	ret
  221bc0:	002f883a 	mov	r23,zero
  221bc4:	003ff206 	br	221b90 <_gp+0xfffe7008>

00221bc8 <_fwalk_reent>:
  221bc8:	defff704 	addi	sp,sp,-36
  221bcc:	dd000415 	stw	r20,16(sp)
  221bd0:	dfc00815 	stw	ra,32(sp)
  221bd4:	ddc00715 	stw	r23,28(sp)
  221bd8:	dd800615 	stw	r22,24(sp)
  221bdc:	dd400515 	stw	r21,20(sp)
  221be0:	dcc00315 	stw	r19,12(sp)
  221be4:	dc800215 	stw	r18,8(sp)
  221be8:	dc400115 	stw	r17,4(sp)
  221bec:	dc000015 	stw	r16,0(sp)
  221bf0:	2500b804 	addi	r20,r4,736
  221bf4:	a0002326 	beq	r20,zero,221c84 <_fwalk_reent+0xbc>
  221bf8:	282b883a 	mov	r21,r5
  221bfc:	2027883a 	mov	r19,r4
  221c00:	002f883a 	mov	r23,zero
  221c04:	05800044 	movi	r22,1
  221c08:	04bfffc4 	movi	r18,-1
  221c0c:	a4400117 	ldw	r17,4(r20)
  221c10:	a4000217 	ldw	r16,8(r20)
  221c14:	8c7fffc4 	addi	r17,r17,-1
  221c18:	88000c16 	blt	r17,zero,221c4c <_fwalk_reent+0x84>
  221c1c:	84000304 	addi	r16,r16,12
  221c20:	8080000b 	ldhu	r2,0(r16)
  221c24:	8c7fffc4 	addi	r17,r17,-1
  221c28:	817ffd04 	addi	r5,r16,-12
  221c2c:	b080052e 	bgeu	r22,r2,221c44 <_fwalk_reent+0x7c>
  221c30:	8080008f 	ldh	r2,2(r16)
  221c34:	9809883a 	mov	r4,r19
  221c38:	14800226 	beq	r2,r18,221c44 <_fwalk_reent+0x7c>
  221c3c:	a83ee83a 	callr	r21
  221c40:	b8aeb03a 	or	r23,r23,r2
  221c44:	84001a04 	addi	r16,r16,104
  221c48:	8cbff51e 	bne	r17,r18,221c20 <_gp+0xfffe7098>
  221c4c:	a5000017 	ldw	r20,0(r20)
  221c50:	a03fee1e 	bne	r20,zero,221c0c <_gp+0xfffe7084>
  221c54:	b805883a 	mov	r2,r23
  221c58:	dfc00817 	ldw	ra,32(sp)
  221c5c:	ddc00717 	ldw	r23,28(sp)
  221c60:	dd800617 	ldw	r22,24(sp)
  221c64:	dd400517 	ldw	r21,20(sp)
  221c68:	dd000417 	ldw	r20,16(sp)
  221c6c:	dcc00317 	ldw	r19,12(sp)
  221c70:	dc800217 	ldw	r18,8(sp)
  221c74:	dc400117 	ldw	r17,4(sp)
  221c78:	dc000017 	ldw	r16,0(sp)
  221c7c:	dec00904 	addi	sp,sp,36
  221c80:	f800283a 	ret
  221c84:	002f883a 	mov	r23,zero
  221c88:	003ff206 	br	221c54 <_gp+0xfffe70cc>

00221c8c <__itoa>:
  221c8c:	30bfff84 	addi	r2,r6,-2
  221c90:	00c00884 	movi	r3,34
  221c94:	18801436 	bltu	r3,r2,221ce8 <__itoa+0x5c>
  221c98:	defffe04 	addi	sp,sp,-8
  221c9c:	dfc00115 	stw	ra,4(sp)
  221ca0:	dc000015 	stw	r16,0(sp)
  221ca4:	00800284 	movi	r2,10
  221ca8:	30800926 	beq	r6,r2,221cd0 <__itoa+0x44>
  221cac:	0005883a 	mov	r2,zero
  221cb0:	2821883a 	mov	r16,r5
  221cb4:	288b883a 	add	r5,r5,r2
  221cb8:	0222d340 	call	222d34 <__utoa>
  221cbc:	8005883a 	mov	r2,r16
  221cc0:	dfc00117 	ldw	ra,4(sp)
  221cc4:	dc000017 	ldw	r16,0(sp)
  221cc8:	dec00204 	addi	sp,sp,8
  221ccc:	f800283a 	ret
  221cd0:	203ff60e 	bge	r4,zero,221cac <_gp+0xfffe7124>
  221cd4:	00800b44 	movi	r2,45
  221cd8:	28800005 	stb	r2,0(r5)
  221cdc:	0109c83a 	sub	r4,zero,r4
  221ce0:	00800044 	movi	r2,1
  221ce4:	003ff206 	br	221cb0 <_gp+0xfffe7128>
  221ce8:	28000005 	stb	zero,0(r5)
  221cec:	0005883a 	mov	r2,zero
  221cf0:	f800283a 	ret

00221cf4 <itoa>:
  221cf4:	0221c8c1 	jmpi	221c8c <__itoa>

00221cf8 <__smakebuf_r>:
  221cf8:	2880030b 	ldhu	r2,12(r5)
  221cfc:	10c0008c 	andi	r3,r2,2
  221d00:	1800411e 	bne	r3,zero,221e08 <__smakebuf_r+0x110>
  221d04:	deffec04 	addi	sp,sp,-80
  221d08:	dc000f15 	stw	r16,60(sp)
  221d0c:	2821883a 	mov	r16,r5
  221d10:	2940038f 	ldh	r5,14(r5)
  221d14:	dc401015 	stw	r17,64(sp)
  221d18:	dfc01315 	stw	ra,76(sp)
  221d1c:	dcc01215 	stw	r19,72(sp)
  221d20:	dc801115 	stw	r18,68(sp)
  221d24:	2023883a 	mov	r17,r4
  221d28:	28001c16 	blt	r5,zero,221d9c <__smakebuf_r+0xa4>
  221d2c:	d80d883a 	mov	r6,sp
  221d30:	0221aa80 	call	221aa8 <_fstat_r>
  221d34:	10001816 	blt	r2,zero,221d98 <__smakebuf_r+0xa0>
  221d38:	d8800117 	ldw	r2,4(sp)
  221d3c:	00e00014 	movui	r3,32768
  221d40:	10bc000c 	andi	r2,r2,61440
  221d44:	14c80020 	cmpeqi	r19,r2,8192
  221d48:	10c03726 	beq	r2,r3,221e28 <__smakebuf_r+0x130>
  221d4c:	80c0030b 	ldhu	r3,12(r16)
  221d50:	18c20014 	ori	r3,r3,2048
  221d54:	80c0030d 	sth	r3,12(r16)
  221d58:	00c80004 	movi	r3,8192
  221d5c:	10c0521e 	bne	r2,r3,221ea8 <__smakebuf_r+0x1b0>
  221d60:	8140038f 	ldh	r5,14(r16)
  221d64:	8809883a 	mov	r4,r17
  221d68:	02271580 	call	227158 <_isatty_r>
  221d6c:	10004c26 	beq	r2,zero,221ea0 <__smakebuf_r+0x1a8>
  221d70:	8080030b 	ldhu	r2,12(r16)
  221d74:	80c010c4 	addi	r3,r16,67
  221d78:	80c00015 	stw	r3,0(r16)
  221d7c:	10800054 	ori	r2,r2,1
  221d80:	8080030d 	sth	r2,12(r16)
  221d84:	00800044 	movi	r2,1
  221d88:	80c00415 	stw	r3,16(r16)
  221d8c:	80800515 	stw	r2,20(r16)
  221d90:	04810004 	movi	r18,1024
  221d94:	00000706 	br	221db4 <__smakebuf_r+0xbc>
  221d98:	8080030b 	ldhu	r2,12(r16)
  221d9c:	10c0200c 	andi	r3,r2,128
  221da0:	18001f1e 	bne	r3,zero,221e20 <__smakebuf_r+0x128>
  221da4:	04810004 	movi	r18,1024
  221da8:	10820014 	ori	r2,r2,2048
  221dac:	8080030d 	sth	r2,12(r16)
  221db0:	0027883a 	mov	r19,zero
  221db4:	900b883a 	mov	r5,r18
  221db8:	8809883a 	mov	r4,r17
  221dbc:	0221eb40 	call	221eb4 <_malloc_r>
  221dc0:	10002c26 	beq	r2,zero,221e74 <__smakebuf_r+0x17c>
  221dc4:	80c0030b 	ldhu	r3,12(r16)
  221dc8:	010008b4 	movhi	r4,34
  221dcc:	21034104 	addi	r4,r4,3332
  221dd0:	89000f15 	stw	r4,60(r17)
  221dd4:	18c02014 	ori	r3,r3,128
  221dd8:	80c0030d 	sth	r3,12(r16)
  221ddc:	80800015 	stw	r2,0(r16)
  221de0:	80800415 	stw	r2,16(r16)
  221de4:	84800515 	stw	r18,20(r16)
  221de8:	98001a1e 	bne	r19,zero,221e54 <__smakebuf_r+0x15c>
  221dec:	dfc01317 	ldw	ra,76(sp)
  221df0:	dcc01217 	ldw	r19,72(sp)
  221df4:	dc801117 	ldw	r18,68(sp)
  221df8:	dc401017 	ldw	r17,64(sp)
  221dfc:	dc000f17 	ldw	r16,60(sp)
  221e00:	dec01404 	addi	sp,sp,80
  221e04:	f800283a 	ret
  221e08:	288010c4 	addi	r2,r5,67
  221e0c:	28800015 	stw	r2,0(r5)
  221e10:	28800415 	stw	r2,16(r5)
  221e14:	00800044 	movi	r2,1
  221e18:	28800515 	stw	r2,20(r5)
  221e1c:	f800283a 	ret
  221e20:	04801004 	movi	r18,64
  221e24:	003fe006 	br	221da8 <_gp+0xfffe7220>
  221e28:	81000a17 	ldw	r4,40(r16)
  221e2c:	00c008b4 	movhi	r3,34
  221e30:	18cb0e04 	addi	r3,r3,11320
  221e34:	20ffc51e 	bne	r4,r3,221d4c <_gp+0xfffe71c4>
  221e38:	8080030b 	ldhu	r2,12(r16)
  221e3c:	04810004 	movi	r18,1024
  221e40:	84801315 	stw	r18,76(r16)
  221e44:	1484b03a 	or	r2,r2,r18
  221e48:	8080030d 	sth	r2,12(r16)
  221e4c:	0027883a 	mov	r19,zero
  221e50:	003fd806 	br	221db4 <_gp+0xfffe722c>
  221e54:	8140038f 	ldh	r5,14(r16)
  221e58:	8809883a 	mov	r4,r17
  221e5c:	02271580 	call	227158 <_isatty_r>
  221e60:	103fe226 	beq	r2,zero,221dec <_gp+0xfffe7264>
  221e64:	8080030b 	ldhu	r2,12(r16)
  221e68:	10800054 	ori	r2,r2,1
  221e6c:	8080030d 	sth	r2,12(r16)
  221e70:	003fde06 	br	221dec <_gp+0xfffe7264>
  221e74:	8080030b 	ldhu	r2,12(r16)
  221e78:	10c0800c 	andi	r3,r2,512
  221e7c:	183fdb1e 	bne	r3,zero,221dec <_gp+0xfffe7264>
  221e80:	10800094 	ori	r2,r2,2
  221e84:	80c010c4 	addi	r3,r16,67
  221e88:	8080030d 	sth	r2,12(r16)
  221e8c:	00800044 	movi	r2,1
  221e90:	80c00015 	stw	r3,0(r16)
  221e94:	80c00415 	stw	r3,16(r16)
  221e98:	80800515 	stw	r2,20(r16)
  221e9c:	003fd306 	br	221dec <_gp+0xfffe7264>
  221ea0:	04810004 	movi	r18,1024
  221ea4:	003fc306 	br	221db4 <_gp+0xfffe722c>
  221ea8:	0027883a 	mov	r19,zero
  221eac:	04810004 	movi	r18,1024
  221eb0:	003fc006 	br	221db4 <_gp+0xfffe722c>

00221eb4 <_malloc_r>:
  221eb4:	defff504 	addi	sp,sp,-44
  221eb8:	dc800315 	stw	r18,12(sp)
  221ebc:	dfc00a15 	stw	ra,40(sp)
  221ec0:	df000915 	stw	fp,36(sp)
  221ec4:	ddc00815 	stw	r23,32(sp)
  221ec8:	dd800715 	stw	r22,28(sp)
  221ecc:	dd400615 	stw	r21,24(sp)
  221ed0:	dd000515 	stw	r20,20(sp)
  221ed4:	dcc00415 	stw	r19,16(sp)
  221ed8:	dc400215 	stw	r17,8(sp)
  221edc:	dc000115 	stw	r16,4(sp)
  221ee0:	288002c4 	addi	r2,r5,11
  221ee4:	00c00584 	movi	r3,22
  221ee8:	2025883a 	mov	r18,r4
  221eec:	18807f2e 	bgeu	r3,r2,2220ec <_malloc_r+0x238>
  221ef0:	047ffe04 	movi	r17,-8
  221ef4:	1462703a 	and	r17,r2,r17
  221ef8:	8800a316 	blt	r17,zero,222188 <_malloc_r+0x2d4>
  221efc:	8940a236 	bltu	r17,r5,222188 <_malloc_r+0x2d4>
  221f00:	022e37c0 	call	22e37c <__malloc_lock>
  221f04:	00807dc4 	movi	r2,503
  221f08:	1441e92e 	bgeu	r2,r17,2226b0 <_malloc_r+0x7fc>
  221f0c:	8804d27a 	srli	r2,r17,9
  221f10:	1000a126 	beq	r2,zero,222198 <_malloc_r+0x2e4>
  221f14:	00c00104 	movi	r3,4
  221f18:	18811e36 	bltu	r3,r2,222394 <_malloc_r+0x4e0>
  221f1c:	8804d1ba 	srli	r2,r17,6
  221f20:	12000e44 	addi	r8,r2,57
  221f24:	11c00e04 	addi	r7,r2,56
  221f28:	4209883a 	add	r4,r8,r8
  221f2c:	04c008f4 	movhi	r19,35
  221f30:	2109883a 	add	r4,r4,r4
  221f34:	9cc95804 	addi	r19,r19,9568
  221f38:	2109883a 	add	r4,r4,r4
  221f3c:	9909883a 	add	r4,r19,r4
  221f40:	24000117 	ldw	r16,4(r4)
  221f44:	213ffe04 	addi	r4,r4,-8
  221f48:	24009726 	beq	r4,r16,2221a8 <_malloc_r+0x2f4>
  221f4c:	80800117 	ldw	r2,4(r16)
  221f50:	01bfff04 	movi	r6,-4
  221f54:	014003c4 	movi	r5,15
  221f58:	1184703a 	and	r2,r2,r6
  221f5c:	1447c83a 	sub	r3,r2,r17
  221f60:	28c00716 	blt	r5,r3,221f80 <_malloc_r+0xcc>
  221f64:	1800920e 	bge	r3,zero,2221b0 <_malloc_r+0x2fc>
  221f68:	84000317 	ldw	r16,12(r16)
  221f6c:	24008e26 	beq	r4,r16,2221a8 <_malloc_r+0x2f4>
  221f70:	80800117 	ldw	r2,4(r16)
  221f74:	1184703a 	and	r2,r2,r6
  221f78:	1447c83a 	sub	r3,r2,r17
  221f7c:	28fff90e 	bge	r5,r3,221f64 <_gp+0xfffe73dc>
  221f80:	3809883a 	mov	r4,r7
  221f84:	018008f4 	movhi	r6,35
  221f88:	9c000417 	ldw	r16,16(r19)
  221f8c:	31895804 	addi	r6,r6,9568
  221f90:	32000204 	addi	r8,r6,8
  221f94:	82013426 	beq	r16,r8,222468 <_malloc_r+0x5b4>
  221f98:	80c00117 	ldw	r3,4(r16)
  221f9c:	00bfff04 	movi	r2,-4
  221fa0:	188e703a 	and	r7,r3,r2
  221fa4:	3c45c83a 	sub	r2,r7,r17
  221fa8:	00c003c4 	movi	r3,15
  221fac:	18811f16 	blt	r3,r2,22242c <_malloc_r+0x578>
  221fb0:	32000515 	stw	r8,20(r6)
  221fb4:	32000415 	stw	r8,16(r6)
  221fb8:	10007f0e 	bge	r2,zero,2221b8 <_malloc_r+0x304>
  221fbc:	00807fc4 	movi	r2,511
  221fc0:	11c0fd36 	bltu	r2,r7,2223b8 <_malloc_r+0x504>
  221fc4:	3806d0fa 	srli	r3,r7,3
  221fc8:	01c00044 	movi	r7,1
  221fcc:	30800117 	ldw	r2,4(r6)
  221fd0:	19400044 	addi	r5,r3,1
  221fd4:	294b883a 	add	r5,r5,r5
  221fd8:	1807d0ba 	srai	r3,r3,2
  221fdc:	294b883a 	add	r5,r5,r5
  221fe0:	294b883a 	add	r5,r5,r5
  221fe4:	298b883a 	add	r5,r5,r6
  221fe8:	38c6983a 	sll	r3,r7,r3
  221fec:	29c00017 	ldw	r7,0(r5)
  221ff0:	2a7ffe04 	addi	r9,r5,-8
  221ff4:	1886b03a 	or	r3,r3,r2
  221ff8:	82400315 	stw	r9,12(r16)
  221ffc:	81c00215 	stw	r7,8(r16)
  222000:	30c00115 	stw	r3,4(r6)
  222004:	2c000015 	stw	r16,0(r5)
  222008:	3c000315 	stw	r16,12(r7)
  22200c:	2005d0ba 	srai	r2,r4,2
  222010:	01400044 	movi	r5,1
  222014:	288a983a 	sll	r5,r5,r2
  222018:	19406f36 	bltu	r3,r5,2221d8 <_malloc_r+0x324>
  22201c:	28c4703a 	and	r2,r5,r3
  222020:	10000a1e 	bne	r2,zero,22204c <_malloc_r+0x198>
  222024:	00bfff04 	movi	r2,-4
  222028:	294b883a 	add	r5,r5,r5
  22202c:	2088703a 	and	r4,r4,r2
  222030:	28c4703a 	and	r2,r5,r3
  222034:	21000104 	addi	r4,r4,4
  222038:	1000041e 	bne	r2,zero,22204c <_malloc_r+0x198>
  22203c:	294b883a 	add	r5,r5,r5
  222040:	28c4703a 	and	r2,r5,r3
  222044:	21000104 	addi	r4,r4,4
  222048:	103ffc26 	beq	r2,zero,22203c <_gp+0xfffe74b4>
  22204c:	02bfff04 	movi	r10,-4
  222050:	024003c4 	movi	r9,15
  222054:	21800044 	addi	r6,r4,1
  222058:	318d883a 	add	r6,r6,r6
  22205c:	318d883a 	add	r6,r6,r6
  222060:	318d883a 	add	r6,r6,r6
  222064:	998d883a 	add	r6,r19,r6
  222068:	333ffe04 	addi	r12,r6,-8
  22206c:	2017883a 	mov	r11,r4
  222070:	31800104 	addi	r6,r6,4
  222074:	34000017 	ldw	r16,0(r6)
  222078:	31fffd04 	addi	r7,r6,-12
  22207c:	81c0041e 	bne	r16,r7,222090 <_malloc_r+0x1dc>
  222080:	0000fb06 	br	222470 <_malloc_r+0x5bc>
  222084:	1801030e 	bge	r3,zero,222494 <_malloc_r+0x5e0>
  222088:	84000317 	ldw	r16,12(r16)
  22208c:	81c0f826 	beq	r16,r7,222470 <_malloc_r+0x5bc>
  222090:	80800117 	ldw	r2,4(r16)
  222094:	1284703a 	and	r2,r2,r10
  222098:	1447c83a 	sub	r3,r2,r17
  22209c:	48fff90e 	bge	r9,r3,222084 <_gp+0xfffe74fc>
  2220a0:	80800317 	ldw	r2,12(r16)
  2220a4:	81000217 	ldw	r4,8(r16)
  2220a8:	89400054 	ori	r5,r17,1
  2220ac:	81400115 	stw	r5,4(r16)
  2220b0:	20800315 	stw	r2,12(r4)
  2220b4:	11000215 	stw	r4,8(r2)
  2220b8:	8463883a 	add	r17,r16,r17
  2220bc:	9c400515 	stw	r17,20(r19)
  2220c0:	9c400415 	stw	r17,16(r19)
  2220c4:	18800054 	ori	r2,r3,1
  2220c8:	88800115 	stw	r2,4(r17)
  2220cc:	8a000315 	stw	r8,12(r17)
  2220d0:	8a000215 	stw	r8,8(r17)
  2220d4:	88e3883a 	add	r17,r17,r3
  2220d8:	88c00015 	stw	r3,0(r17)
  2220dc:	9009883a 	mov	r4,r18
  2220e0:	022e3a00 	call	22e3a0 <__malloc_unlock>
  2220e4:	80800204 	addi	r2,r16,8
  2220e8:	00001b06 	br	222158 <_malloc_r+0x2a4>
  2220ec:	04400404 	movi	r17,16
  2220f0:	89402536 	bltu	r17,r5,222188 <_malloc_r+0x2d4>
  2220f4:	022e37c0 	call	22e37c <__malloc_lock>
  2220f8:	00800184 	movi	r2,6
  2220fc:	01000084 	movi	r4,2
  222100:	04c008f4 	movhi	r19,35
  222104:	1085883a 	add	r2,r2,r2
  222108:	9cc95804 	addi	r19,r19,9568
  22210c:	1085883a 	add	r2,r2,r2
  222110:	9885883a 	add	r2,r19,r2
  222114:	14000117 	ldw	r16,4(r2)
  222118:	10fffe04 	addi	r3,r2,-8
  22211c:	80c0d926 	beq	r16,r3,222484 <_malloc_r+0x5d0>
  222120:	80c00117 	ldw	r3,4(r16)
  222124:	81000317 	ldw	r4,12(r16)
  222128:	00bfff04 	movi	r2,-4
  22212c:	1884703a 	and	r2,r3,r2
  222130:	81400217 	ldw	r5,8(r16)
  222134:	8085883a 	add	r2,r16,r2
  222138:	10c00117 	ldw	r3,4(r2)
  22213c:	29000315 	stw	r4,12(r5)
  222140:	21400215 	stw	r5,8(r4)
  222144:	18c00054 	ori	r3,r3,1
  222148:	10c00115 	stw	r3,4(r2)
  22214c:	9009883a 	mov	r4,r18
  222150:	022e3a00 	call	22e3a0 <__malloc_unlock>
  222154:	80800204 	addi	r2,r16,8
  222158:	dfc00a17 	ldw	ra,40(sp)
  22215c:	df000917 	ldw	fp,36(sp)
  222160:	ddc00817 	ldw	r23,32(sp)
  222164:	dd800717 	ldw	r22,28(sp)
  222168:	dd400617 	ldw	r21,24(sp)
  22216c:	dd000517 	ldw	r20,20(sp)
  222170:	dcc00417 	ldw	r19,16(sp)
  222174:	dc800317 	ldw	r18,12(sp)
  222178:	dc400217 	ldw	r17,8(sp)
  22217c:	dc000117 	ldw	r16,4(sp)
  222180:	dec00b04 	addi	sp,sp,44
  222184:	f800283a 	ret
  222188:	00800304 	movi	r2,12
  22218c:	90800015 	stw	r2,0(r18)
  222190:	0005883a 	mov	r2,zero
  222194:	003ff006 	br	222158 <_gp+0xfffe75d0>
  222198:	01002004 	movi	r4,128
  22219c:	02001004 	movi	r8,64
  2221a0:	01c00fc4 	movi	r7,63
  2221a4:	003f6106 	br	221f2c <_gp+0xfffe73a4>
  2221a8:	4009883a 	mov	r4,r8
  2221ac:	003f7506 	br	221f84 <_gp+0xfffe73fc>
  2221b0:	81000317 	ldw	r4,12(r16)
  2221b4:	003fde06 	br	222130 <_gp+0xfffe75a8>
  2221b8:	81c5883a 	add	r2,r16,r7
  2221bc:	11400117 	ldw	r5,4(r2)
  2221c0:	9009883a 	mov	r4,r18
  2221c4:	29400054 	ori	r5,r5,1
  2221c8:	11400115 	stw	r5,4(r2)
  2221cc:	022e3a00 	call	22e3a0 <__malloc_unlock>
  2221d0:	80800204 	addi	r2,r16,8
  2221d4:	003fe006 	br	222158 <_gp+0xfffe75d0>
  2221d8:	9c000217 	ldw	r16,8(r19)
  2221dc:	00bfff04 	movi	r2,-4
  2221e0:	85800117 	ldw	r22,4(r16)
  2221e4:	b0ac703a 	and	r22,r22,r2
  2221e8:	b4400336 	bltu	r22,r17,2221f8 <_malloc_r+0x344>
  2221ec:	b445c83a 	sub	r2,r22,r17
  2221f0:	00c003c4 	movi	r3,15
  2221f4:	18805d16 	blt	r3,r2,22236c <_malloc_r+0x4b8>
  2221f8:	05c008f4 	movhi	r23,35
  2221fc:	008008f4 	movhi	r2,35
  222200:	10920504 	addi	r2,r2,18452
  222204:	bdcae404 	addi	r23,r23,11152
  222208:	15400017 	ldw	r21,0(r2)
  22220c:	b8c00017 	ldw	r3,0(r23)
  222210:	00bfffc4 	movi	r2,-1
  222214:	858d883a 	add	r6,r16,r22
  222218:	8d6b883a 	add	r21,r17,r21
  22221c:	1880ea26 	beq	r3,r2,2225c8 <_malloc_r+0x714>
  222220:	ad4403c4 	addi	r21,r21,4111
  222224:	00bc0004 	movi	r2,-4096
  222228:	a8aa703a 	and	r21,r21,r2
  22222c:	a80b883a 	mov	r5,r21
  222230:	9009883a 	mov	r4,r18
  222234:	d9800015 	stw	r6,0(sp)
  222238:	0222b0c0 	call	222b0c <_sbrk_r>
  22223c:	1029883a 	mov	r20,r2
  222240:	00bfffc4 	movi	r2,-1
  222244:	d9800017 	ldw	r6,0(sp)
  222248:	a080e826 	beq	r20,r2,2225ec <_malloc_r+0x738>
  22224c:	a180a636 	bltu	r20,r6,2224e8 <_malloc_r+0x634>
  222250:	070008f4 	movhi	fp,35
  222254:	e7121004 	addi	fp,fp,18496
  222258:	e0800017 	ldw	r2,0(fp)
  22225c:	a887883a 	add	r3,r21,r2
  222260:	e0c00015 	stw	r3,0(fp)
  222264:	3500e626 	beq	r6,r20,222600 <_malloc_r+0x74c>
  222268:	b9000017 	ldw	r4,0(r23)
  22226c:	00bfffc4 	movi	r2,-1
  222270:	2080ee26 	beq	r4,r2,22262c <_malloc_r+0x778>
  222274:	a185c83a 	sub	r2,r20,r6
  222278:	10c5883a 	add	r2,r2,r3
  22227c:	e0800015 	stw	r2,0(fp)
  222280:	a0c001cc 	andi	r3,r20,7
  222284:	1800bc26 	beq	r3,zero,222578 <_malloc_r+0x6c4>
  222288:	a0e9c83a 	sub	r20,r20,r3
  22228c:	00840204 	movi	r2,4104
  222290:	a5000204 	addi	r20,r20,8
  222294:	10c7c83a 	sub	r3,r2,r3
  222298:	a545883a 	add	r2,r20,r21
  22229c:	1083ffcc 	andi	r2,r2,4095
  2222a0:	18abc83a 	sub	r21,r3,r2
  2222a4:	a80b883a 	mov	r5,r21
  2222a8:	9009883a 	mov	r4,r18
  2222ac:	0222b0c0 	call	222b0c <_sbrk_r>
  2222b0:	00ffffc4 	movi	r3,-1
  2222b4:	10c0e126 	beq	r2,r3,22263c <_malloc_r+0x788>
  2222b8:	1505c83a 	sub	r2,r2,r20
  2222bc:	1545883a 	add	r2,r2,r21
  2222c0:	10800054 	ori	r2,r2,1
  2222c4:	e0c00017 	ldw	r3,0(fp)
  2222c8:	9d000215 	stw	r20,8(r19)
  2222cc:	a0800115 	stw	r2,4(r20)
  2222d0:	a8c7883a 	add	r3,r21,r3
  2222d4:	e0c00015 	stw	r3,0(fp)
  2222d8:	84c00e26 	beq	r16,r19,222314 <_malloc_r+0x460>
  2222dc:	018003c4 	movi	r6,15
  2222e0:	3580a72e 	bgeu	r6,r22,222580 <_malloc_r+0x6cc>
  2222e4:	81400117 	ldw	r5,4(r16)
  2222e8:	013ffe04 	movi	r4,-8
  2222ec:	b0bffd04 	addi	r2,r22,-12
  2222f0:	1104703a 	and	r2,r2,r4
  2222f4:	2900004c 	andi	r4,r5,1
  2222f8:	2088b03a 	or	r4,r4,r2
  2222fc:	81000115 	stw	r4,4(r16)
  222300:	01400144 	movi	r5,5
  222304:	8089883a 	add	r4,r16,r2
  222308:	21400115 	stw	r5,4(r4)
  22230c:	21400215 	stw	r5,8(r4)
  222310:	3080cd36 	bltu	r6,r2,222648 <_malloc_r+0x794>
  222314:	008008f4 	movhi	r2,35
  222318:	10920404 	addi	r2,r2,18448
  22231c:	11000017 	ldw	r4,0(r2)
  222320:	20c0012e 	bgeu	r4,r3,222328 <_malloc_r+0x474>
  222324:	10c00015 	stw	r3,0(r2)
  222328:	008008f4 	movhi	r2,35
  22232c:	10920304 	addi	r2,r2,18444
  222330:	11000017 	ldw	r4,0(r2)
  222334:	9c000217 	ldw	r16,8(r19)
  222338:	20c0012e 	bgeu	r4,r3,222340 <_malloc_r+0x48c>
  22233c:	10c00015 	stw	r3,0(r2)
  222340:	80c00117 	ldw	r3,4(r16)
  222344:	00bfff04 	movi	r2,-4
  222348:	1886703a 	and	r3,r3,r2
  22234c:	1c45c83a 	sub	r2,r3,r17
  222350:	1c400236 	bltu	r3,r17,22235c <_malloc_r+0x4a8>
  222354:	00c003c4 	movi	r3,15
  222358:	18800416 	blt	r3,r2,22236c <_malloc_r+0x4b8>
  22235c:	9009883a 	mov	r4,r18
  222360:	022e3a00 	call	22e3a0 <__malloc_unlock>
  222364:	0005883a 	mov	r2,zero
  222368:	003f7b06 	br	222158 <_gp+0xfffe75d0>
  22236c:	88c00054 	ori	r3,r17,1
  222370:	80c00115 	stw	r3,4(r16)
  222374:	8463883a 	add	r17,r16,r17
  222378:	10800054 	ori	r2,r2,1
  22237c:	9c400215 	stw	r17,8(r19)
  222380:	88800115 	stw	r2,4(r17)
  222384:	9009883a 	mov	r4,r18
  222388:	022e3a00 	call	22e3a0 <__malloc_unlock>
  22238c:	80800204 	addi	r2,r16,8
  222390:	003f7106 	br	222158 <_gp+0xfffe75d0>
  222394:	00c00504 	movi	r3,20
  222398:	18804a2e 	bgeu	r3,r2,2224c4 <_malloc_r+0x610>
  22239c:	00c01504 	movi	r3,84
  2223a0:	18806e36 	bltu	r3,r2,22255c <_malloc_r+0x6a8>
  2223a4:	8804d33a 	srli	r2,r17,12
  2223a8:	12001bc4 	addi	r8,r2,111
  2223ac:	11c01b84 	addi	r7,r2,110
  2223b0:	4209883a 	add	r4,r8,r8
  2223b4:	003edd06 	br	221f2c <_gp+0xfffe73a4>
  2223b8:	3804d27a 	srli	r2,r7,9
  2223bc:	00c00104 	movi	r3,4
  2223c0:	1880442e 	bgeu	r3,r2,2224d4 <_malloc_r+0x620>
  2223c4:	00c00504 	movi	r3,20
  2223c8:	18808136 	bltu	r3,r2,2225d0 <_malloc_r+0x71c>
  2223cc:	11401704 	addi	r5,r2,92
  2223d0:	10c016c4 	addi	r3,r2,91
  2223d4:	294b883a 	add	r5,r5,r5
  2223d8:	294b883a 	add	r5,r5,r5
  2223dc:	294b883a 	add	r5,r5,r5
  2223e0:	994b883a 	add	r5,r19,r5
  2223e4:	28800017 	ldw	r2,0(r5)
  2223e8:	018008f4 	movhi	r6,35
  2223ec:	297ffe04 	addi	r5,r5,-8
  2223f0:	31895804 	addi	r6,r6,9568
  2223f4:	28806526 	beq	r5,r2,22258c <_malloc_r+0x6d8>
  2223f8:	01bfff04 	movi	r6,-4
  2223fc:	10c00117 	ldw	r3,4(r2)
  222400:	1986703a 	and	r3,r3,r6
  222404:	38c0022e 	bgeu	r7,r3,222410 <_malloc_r+0x55c>
  222408:	10800217 	ldw	r2,8(r2)
  22240c:	28bffb1e 	bne	r5,r2,2223fc <_gp+0xfffe7874>
  222410:	11400317 	ldw	r5,12(r2)
  222414:	98c00117 	ldw	r3,4(r19)
  222418:	81400315 	stw	r5,12(r16)
  22241c:	80800215 	stw	r2,8(r16)
  222420:	2c000215 	stw	r16,8(r5)
  222424:	14000315 	stw	r16,12(r2)
  222428:	003ef806 	br	22200c <_gp+0xfffe7484>
  22242c:	88c00054 	ori	r3,r17,1
  222430:	80c00115 	stw	r3,4(r16)
  222434:	8463883a 	add	r17,r16,r17
  222438:	34400515 	stw	r17,20(r6)
  22243c:	34400415 	stw	r17,16(r6)
  222440:	10c00054 	ori	r3,r2,1
  222444:	8a000315 	stw	r8,12(r17)
  222448:	8a000215 	stw	r8,8(r17)
  22244c:	88c00115 	stw	r3,4(r17)
  222450:	88a3883a 	add	r17,r17,r2
  222454:	88800015 	stw	r2,0(r17)
  222458:	9009883a 	mov	r4,r18
  22245c:	022e3a00 	call	22e3a0 <__malloc_unlock>
  222460:	80800204 	addi	r2,r16,8
  222464:	003f3c06 	br	222158 <_gp+0xfffe75d0>
  222468:	30c00117 	ldw	r3,4(r6)
  22246c:	003ee706 	br	22200c <_gp+0xfffe7484>
  222470:	5ac00044 	addi	r11,r11,1
  222474:	588000cc 	andi	r2,r11,3
  222478:	31800204 	addi	r6,r6,8
  22247c:	103efd1e 	bne	r2,zero,222074 <_gp+0xfffe74ec>
  222480:	00002406 	br	222514 <_malloc_r+0x660>
  222484:	14000317 	ldw	r16,12(r2)
  222488:	143f251e 	bne	r2,r16,222120 <_gp+0xfffe7598>
  22248c:	21000084 	addi	r4,r4,2
  222490:	003ebc06 	br	221f84 <_gp+0xfffe73fc>
  222494:	8085883a 	add	r2,r16,r2
  222498:	10c00117 	ldw	r3,4(r2)
  22249c:	81000317 	ldw	r4,12(r16)
  2224a0:	81400217 	ldw	r5,8(r16)
  2224a4:	18c00054 	ori	r3,r3,1
  2224a8:	10c00115 	stw	r3,4(r2)
  2224ac:	29000315 	stw	r4,12(r5)
  2224b0:	21400215 	stw	r5,8(r4)
  2224b4:	9009883a 	mov	r4,r18
  2224b8:	022e3a00 	call	22e3a0 <__malloc_unlock>
  2224bc:	80800204 	addi	r2,r16,8
  2224c0:	003f2506 	br	222158 <_gp+0xfffe75d0>
  2224c4:	12001704 	addi	r8,r2,92
  2224c8:	11c016c4 	addi	r7,r2,91
  2224cc:	4209883a 	add	r4,r8,r8
  2224d0:	003e9606 	br	221f2c <_gp+0xfffe73a4>
  2224d4:	3804d1ba 	srli	r2,r7,6
  2224d8:	11400e44 	addi	r5,r2,57
  2224dc:	10c00e04 	addi	r3,r2,56
  2224e0:	294b883a 	add	r5,r5,r5
  2224e4:	003fbc06 	br	2223d8 <_gp+0xfffe7850>
  2224e8:	84ff5926 	beq	r16,r19,222250 <_gp+0xfffe76c8>
  2224ec:	008008f4 	movhi	r2,35
  2224f0:	10895804 	addi	r2,r2,9568
  2224f4:	14000217 	ldw	r16,8(r2)
  2224f8:	00bfff04 	movi	r2,-4
  2224fc:	80c00117 	ldw	r3,4(r16)
  222500:	1886703a 	and	r3,r3,r2
  222504:	003f9106 	br	22234c <_gp+0xfffe77c4>
  222508:	60800217 	ldw	r2,8(r12)
  22250c:	213fffc4 	addi	r4,r4,-1
  222510:	1300651e 	bne	r2,r12,2226a8 <_malloc_r+0x7f4>
  222514:	208000cc 	andi	r2,r4,3
  222518:	633ffe04 	addi	r12,r12,-8
  22251c:	103ffa1e 	bne	r2,zero,222508 <_gp+0xfffe7980>
  222520:	98800117 	ldw	r2,4(r19)
  222524:	0146303a 	nor	r3,zero,r5
  222528:	1884703a 	and	r2,r3,r2
  22252c:	98800115 	stw	r2,4(r19)
  222530:	294b883a 	add	r5,r5,r5
  222534:	117f2836 	bltu	r2,r5,2221d8 <_gp+0xfffe7650>
  222538:	283f2726 	beq	r5,zero,2221d8 <_gp+0xfffe7650>
  22253c:	2886703a 	and	r3,r5,r2
  222540:	5809883a 	mov	r4,r11
  222544:	183ec31e 	bne	r3,zero,222054 <_gp+0xfffe74cc>
  222548:	294b883a 	add	r5,r5,r5
  22254c:	2886703a 	and	r3,r5,r2
  222550:	21000104 	addi	r4,r4,4
  222554:	183ffc26 	beq	r3,zero,222548 <_gp+0xfffe79c0>
  222558:	003ebe06 	br	222054 <_gp+0xfffe74cc>
  22255c:	00c05504 	movi	r3,340
  222560:	18801236 	bltu	r3,r2,2225ac <_malloc_r+0x6f8>
  222564:	8804d3fa 	srli	r2,r17,15
  222568:	12001e04 	addi	r8,r2,120
  22256c:	11c01dc4 	addi	r7,r2,119
  222570:	4209883a 	add	r4,r8,r8
  222574:	003e6d06 	br	221f2c <_gp+0xfffe73a4>
  222578:	00c40004 	movi	r3,4096
  22257c:	003f4606 	br	222298 <_gp+0xfffe7710>
  222580:	00800044 	movi	r2,1
  222584:	a0800115 	stw	r2,4(r20)
  222588:	003f7406 	br	22235c <_gp+0xfffe77d4>
  22258c:	1805d0ba 	srai	r2,r3,2
  222590:	01c00044 	movi	r7,1
  222594:	30c00117 	ldw	r3,4(r6)
  222598:	388e983a 	sll	r7,r7,r2
  22259c:	2805883a 	mov	r2,r5
  2225a0:	38c6b03a 	or	r3,r7,r3
  2225a4:	30c00115 	stw	r3,4(r6)
  2225a8:	003f9b06 	br	222418 <_gp+0xfffe7890>
  2225ac:	00c15504 	movi	r3,1364
  2225b0:	18801a36 	bltu	r3,r2,22261c <_malloc_r+0x768>
  2225b4:	8804d4ba 	srli	r2,r17,18
  2225b8:	12001f44 	addi	r8,r2,125
  2225bc:	11c01f04 	addi	r7,r2,124
  2225c0:	4209883a 	add	r4,r8,r8
  2225c4:	003e5906 	br	221f2c <_gp+0xfffe73a4>
  2225c8:	ad400404 	addi	r21,r21,16
  2225cc:	003f1706 	br	22222c <_gp+0xfffe76a4>
  2225d0:	00c01504 	movi	r3,84
  2225d4:	18802336 	bltu	r3,r2,222664 <_malloc_r+0x7b0>
  2225d8:	3804d33a 	srli	r2,r7,12
  2225dc:	11401bc4 	addi	r5,r2,111
  2225e0:	10c01b84 	addi	r3,r2,110
  2225e4:	294b883a 	add	r5,r5,r5
  2225e8:	003f7b06 	br	2223d8 <_gp+0xfffe7850>
  2225ec:	9c000217 	ldw	r16,8(r19)
  2225f0:	00bfff04 	movi	r2,-4
  2225f4:	80c00117 	ldw	r3,4(r16)
  2225f8:	1886703a 	and	r3,r3,r2
  2225fc:	003f5306 	br	22234c <_gp+0xfffe77c4>
  222600:	3083ffcc 	andi	r2,r6,4095
  222604:	103f181e 	bne	r2,zero,222268 <_gp+0xfffe76e0>
  222608:	99000217 	ldw	r4,8(r19)
  22260c:	b545883a 	add	r2,r22,r21
  222610:	10800054 	ori	r2,r2,1
  222614:	20800115 	stw	r2,4(r4)
  222618:	003f3e06 	br	222314 <_gp+0xfffe778c>
  22261c:	01003f84 	movi	r4,254
  222620:	02001fc4 	movi	r8,127
  222624:	01c01f84 	movi	r7,126
  222628:	003e4006 	br	221f2c <_gp+0xfffe73a4>
  22262c:	008008f4 	movhi	r2,35
  222630:	108ae404 	addi	r2,r2,11152
  222634:	15000015 	stw	r20,0(r2)
  222638:	003f1106 	br	222280 <_gp+0xfffe76f8>
  22263c:	00800044 	movi	r2,1
  222640:	002b883a 	mov	r21,zero
  222644:	003f1f06 	br	2222c4 <_gp+0xfffe773c>
  222648:	81400204 	addi	r5,r16,8
  22264c:	9009883a 	mov	r4,r18
  222650:	02213180 	call	221318 <_free_r>
  222654:	008008f4 	movhi	r2,35
  222658:	10921004 	addi	r2,r2,18496
  22265c:	10c00017 	ldw	r3,0(r2)
  222660:	003f2c06 	br	222314 <_gp+0xfffe778c>
  222664:	00c05504 	movi	r3,340
  222668:	18800536 	bltu	r3,r2,222680 <_malloc_r+0x7cc>
  22266c:	3804d3fa 	srli	r2,r7,15
  222670:	11401e04 	addi	r5,r2,120
  222674:	10c01dc4 	addi	r3,r2,119
  222678:	294b883a 	add	r5,r5,r5
  22267c:	003f5606 	br	2223d8 <_gp+0xfffe7850>
  222680:	00c15504 	movi	r3,1364
  222684:	18800536 	bltu	r3,r2,22269c <_malloc_r+0x7e8>
  222688:	3804d4ba 	srli	r2,r7,18
  22268c:	11401f44 	addi	r5,r2,125
  222690:	10c01f04 	addi	r3,r2,124
  222694:	294b883a 	add	r5,r5,r5
  222698:	003f4f06 	br	2223d8 <_gp+0xfffe7850>
  22269c:	01403f84 	movi	r5,254
  2226a0:	00c01f84 	movi	r3,126
  2226a4:	003f4c06 	br	2223d8 <_gp+0xfffe7850>
  2226a8:	98800117 	ldw	r2,4(r19)
  2226ac:	003fa006 	br	222530 <_gp+0xfffe79a8>
  2226b0:	8808d0fa 	srli	r4,r17,3
  2226b4:	20800044 	addi	r2,r4,1
  2226b8:	1085883a 	add	r2,r2,r2
  2226bc:	003e9006 	br	222100 <_gp+0xfffe7578>

002226c0 <memset>:
  2226c0:	20c000cc 	andi	r3,r4,3
  2226c4:	2005883a 	mov	r2,r4
  2226c8:	18004426 	beq	r3,zero,2227dc <memset+0x11c>
  2226cc:	31ffffc4 	addi	r7,r6,-1
  2226d0:	30004026 	beq	r6,zero,2227d4 <memset+0x114>
  2226d4:	2813883a 	mov	r9,r5
  2226d8:	200d883a 	mov	r6,r4
  2226dc:	2007883a 	mov	r3,r4
  2226e0:	00000406 	br	2226f4 <memset+0x34>
  2226e4:	3a3fffc4 	addi	r8,r7,-1
  2226e8:	31800044 	addi	r6,r6,1
  2226ec:	38003926 	beq	r7,zero,2227d4 <memset+0x114>
  2226f0:	400f883a 	mov	r7,r8
  2226f4:	18c00044 	addi	r3,r3,1
  2226f8:	32400005 	stb	r9,0(r6)
  2226fc:	1a0000cc 	andi	r8,r3,3
  222700:	403ff81e 	bne	r8,zero,2226e4 <_gp+0xfffe7b5c>
  222704:	010000c4 	movi	r4,3
  222708:	21c02d2e 	bgeu	r4,r7,2227c0 <memset+0x100>
  22270c:	29003fcc 	andi	r4,r5,255
  222710:	200c923a 	slli	r6,r4,8
  222714:	3108b03a 	or	r4,r6,r4
  222718:	200c943a 	slli	r6,r4,16
  22271c:	218cb03a 	or	r6,r4,r6
  222720:	010003c4 	movi	r4,15
  222724:	21c0182e 	bgeu	r4,r7,222788 <memset+0xc8>
  222728:	3b3ffc04 	addi	r12,r7,-16
  22272c:	6018d13a 	srli	r12,r12,4
  222730:	1a000104 	addi	r8,r3,4
  222734:	1ac00204 	addi	r11,r3,8
  222738:	6008913a 	slli	r4,r12,4
  22273c:	1a800304 	addi	r10,r3,12
  222740:	1813883a 	mov	r9,r3
  222744:	21000504 	addi	r4,r4,20
  222748:	1909883a 	add	r4,r3,r4
  22274c:	49800015 	stw	r6,0(r9)
  222750:	41800015 	stw	r6,0(r8)
  222754:	59800015 	stw	r6,0(r11)
  222758:	51800015 	stw	r6,0(r10)
  22275c:	42000404 	addi	r8,r8,16
  222760:	4a400404 	addi	r9,r9,16
  222764:	5ac00404 	addi	r11,r11,16
  222768:	52800404 	addi	r10,r10,16
  22276c:	413ff71e 	bne	r8,r4,22274c <_gp+0xfffe7bc4>
  222770:	63000044 	addi	r12,r12,1
  222774:	6018913a 	slli	r12,r12,4
  222778:	39c003cc 	andi	r7,r7,15
  22277c:	010000c4 	movi	r4,3
  222780:	1b07883a 	add	r3,r3,r12
  222784:	21c00e2e 	bgeu	r4,r7,2227c0 <memset+0x100>
  222788:	1813883a 	mov	r9,r3
  22278c:	3811883a 	mov	r8,r7
  222790:	010000c4 	movi	r4,3
  222794:	49800015 	stw	r6,0(r9)
  222798:	423fff04 	addi	r8,r8,-4
  22279c:	4a400104 	addi	r9,r9,4
  2227a0:	223ffc36 	bltu	r4,r8,222794 <_gp+0xfffe7c0c>
  2227a4:	393fff04 	addi	r4,r7,-4
  2227a8:	2008d0ba 	srli	r4,r4,2
  2227ac:	39c000cc 	andi	r7,r7,3
  2227b0:	21000044 	addi	r4,r4,1
  2227b4:	2109883a 	add	r4,r4,r4
  2227b8:	2109883a 	add	r4,r4,r4
  2227bc:	1907883a 	add	r3,r3,r4
  2227c0:	38000526 	beq	r7,zero,2227d8 <memset+0x118>
  2227c4:	19cf883a 	add	r7,r3,r7
  2227c8:	19400005 	stb	r5,0(r3)
  2227cc:	18c00044 	addi	r3,r3,1
  2227d0:	38fffd1e 	bne	r7,r3,2227c8 <_gp+0xfffe7c40>
  2227d4:	f800283a 	ret
  2227d8:	f800283a 	ret
  2227dc:	2007883a 	mov	r3,r4
  2227e0:	300f883a 	mov	r7,r6
  2227e4:	003fc706 	br	222704 <_gp+0xfffe7b7c>

002227e8 <_open_r>:
  2227e8:	defffd04 	addi	sp,sp,-12
  2227ec:	2805883a 	mov	r2,r5
  2227f0:	dc000015 	stw	r16,0(sp)
  2227f4:	040008f4 	movhi	r16,35
  2227f8:	dc400115 	stw	r17,4(sp)
  2227fc:	300b883a 	mov	r5,r6
  222800:	84120204 	addi	r16,r16,18440
  222804:	2023883a 	mov	r17,r4
  222808:	380d883a 	mov	r6,r7
  22280c:	1009883a 	mov	r4,r2
  222810:	dfc00215 	stw	ra,8(sp)
  222814:	80000015 	stw	zero,0(r16)
  222818:	022e4c40 	call	22e4c4 <open>
  22281c:	00ffffc4 	movi	r3,-1
  222820:	10c00526 	beq	r2,r3,222838 <_open_r+0x50>
  222824:	dfc00217 	ldw	ra,8(sp)
  222828:	dc400117 	ldw	r17,4(sp)
  22282c:	dc000017 	ldw	r16,0(sp)
  222830:	dec00304 	addi	sp,sp,12
  222834:	f800283a 	ret
  222838:	80c00017 	ldw	r3,0(r16)
  22283c:	183ff926 	beq	r3,zero,222824 <_gp+0xfffe7c9c>
  222840:	88c00015 	stw	r3,0(r17)
  222844:	003ff706 	br	222824 <_gp+0xfffe7c9c>

00222848 <_puts_r>:
  222848:	defff604 	addi	sp,sp,-40
  22284c:	dc000715 	stw	r16,28(sp)
  222850:	2021883a 	mov	r16,r4
  222854:	2809883a 	mov	r4,r5
  222858:	dc400815 	stw	r17,32(sp)
  22285c:	dfc00915 	stw	ra,36(sp)
  222860:	2823883a 	mov	r17,r5
  222864:	0222c9c0 	call	222c9c <strlen>
  222868:	10c00044 	addi	r3,r2,1
  22286c:	d8800115 	stw	r2,4(sp)
  222870:	008008f4 	movhi	r2,35
  222874:	10834704 	addi	r2,r2,3356
  222878:	d8800215 	stw	r2,8(sp)
  22287c:	00800044 	movi	r2,1
  222880:	d8800315 	stw	r2,12(sp)
  222884:	00800084 	movi	r2,2
  222888:	dc400015 	stw	r17,0(sp)
  22288c:	d8c00615 	stw	r3,24(sp)
  222890:	dec00415 	stw	sp,16(sp)
  222894:	d8800515 	stw	r2,20(sp)
  222898:	80000226 	beq	r16,zero,2228a4 <_puts_r+0x5c>
  22289c:	80800e17 	ldw	r2,56(r16)
  2228a0:	10001426 	beq	r2,zero,2228f4 <_puts_r+0xac>
  2228a4:	81400217 	ldw	r5,8(r16)
  2228a8:	2880030b 	ldhu	r2,12(r5)
  2228ac:	10c8000c 	andi	r3,r2,8192
  2228b0:	1800061e 	bne	r3,zero,2228cc <_puts_r+0x84>
  2228b4:	29001917 	ldw	r4,100(r5)
  2228b8:	00f7ffc4 	movi	r3,-8193
  2228bc:	10880014 	ori	r2,r2,8192
  2228c0:	20c6703a 	and	r3,r4,r3
  2228c4:	2880030d 	sth	r2,12(r5)
  2228c8:	28c01915 	stw	r3,100(r5)
  2228cc:	d9800404 	addi	r6,sp,16
  2228d0:	8009883a 	mov	r4,r16
  2228d4:	0226c9c0 	call	226c9c <__sfvwrite_r>
  2228d8:	1000091e 	bne	r2,zero,222900 <_puts_r+0xb8>
  2228dc:	00800284 	movi	r2,10
  2228e0:	dfc00917 	ldw	ra,36(sp)
  2228e4:	dc400817 	ldw	r17,32(sp)
  2228e8:	dc000717 	ldw	r16,28(sp)
  2228ec:	dec00a04 	addi	sp,sp,40
  2228f0:	f800283a 	ret
  2228f4:	8009883a 	mov	r4,r16
  2228f8:	022104c0 	call	22104c <__sinit>
  2228fc:	003fe906 	br	2228a4 <_gp+0xfffe7d1c>
  222900:	00bfffc4 	movi	r2,-1
  222904:	003ff606 	br	2228e0 <_gp+0xfffe7d58>

00222908 <puts>:
  222908:	008008f4 	movhi	r2,35
  22290c:	108ae304 	addi	r2,r2,11148
  222910:	200b883a 	mov	r5,r4
  222914:	11000017 	ldw	r4,0(r2)
  222918:	02228481 	jmpi	222848 <_puts_r>

0022291c <lflush>:
  22291c:	2080030b 	ldhu	r2,12(r4)
  222920:	00c00244 	movi	r3,9
  222924:	1080024c 	andi	r2,r2,9
  222928:	10c00226 	beq	r2,r3,222934 <lflush+0x18>
  22292c:	0005883a 	mov	r2,zero
  222930:	f800283a 	ret
  222934:	0220ccc1 	jmpi	220ccc <fflush>

00222938 <__srefill_r>:
  222938:	defffc04 	addi	sp,sp,-16
  22293c:	dc400115 	stw	r17,4(sp)
  222940:	dc000015 	stw	r16,0(sp)
  222944:	dfc00315 	stw	ra,12(sp)
  222948:	dc800215 	stw	r18,8(sp)
  22294c:	2023883a 	mov	r17,r4
  222950:	2821883a 	mov	r16,r5
  222954:	20000226 	beq	r4,zero,222960 <__srefill_r+0x28>
  222958:	20800e17 	ldw	r2,56(r4)
  22295c:	10003c26 	beq	r2,zero,222a50 <__srefill_r+0x118>
  222960:	80c0030b 	ldhu	r3,12(r16)
  222964:	1908000c 	andi	r4,r3,8192
  222968:	1805883a 	mov	r2,r3
  22296c:	2000071e 	bne	r4,zero,22298c <__srefill_r+0x54>
  222970:	81001917 	ldw	r4,100(r16)
  222974:	18880014 	ori	r2,r3,8192
  222978:	00f7ffc4 	movi	r3,-8193
  22297c:	20c8703a 	and	r4,r4,r3
  222980:	8080030d 	sth	r2,12(r16)
  222984:	1007883a 	mov	r3,r2
  222988:	81001915 	stw	r4,100(r16)
  22298c:	80000115 	stw	zero,4(r16)
  222990:	1100080c 	andi	r4,r2,32
  222994:	2000571e 	bne	r4,zero,222af4 <__srefill_r+0x1bc>
  222998:	1100010c 	andi	r4,r2,4
  22299c:	20001f26 	beq	r4,zero,222a1c <__srefill_r+0xe4>
  2229a0:	81400c17 	ldw	r5,48(r16)
  2229a4:	28000826 	beq	r5,zero,2229c8 <__srefill_r+0x90>
  2229a8:	80801004 	addi	r2,r16,64
  2229ac:	28800226 	beq	r5,r2,2229b8 <__srefill_r+0x80>
  2229b0:	8809883a 	mov	r4,r17
  2229b4:	02213180 	call	221318 <_free_r>
  2229b8:	80800f17 	ldw	r2,60(r16)
  2229bc:	80000c15 	stw	zero,48(r16)
  2229c0:	80800115 	stw	r2,4(r16)
  2229c4:	1000391e 	bne	r2,zero,222aac <__srefill_r+0x174>
  2229c8:	80800417 	ldw	r2,16(r16)
  2229cc:	10004b26 	beq	r2,zero,222afc <__srefill_r+0x1c4>
  2229d0:	8480030b 	ldhu	r18,12(r16)
  2229d4:	908000cc 	andi	r2,r18,3
  2229d8:	10001f1e 	bne	r2,zero,222a58 <__srefill_r+0x120>
  2229dc:	81800417 	ldw	r6,16(r16)
  2229e0:	80800817 	ldw	r2,32(r16)
  2229e4:	81c00517 	ldw	r7,20(r16)
  2229e8:	81400717 	ldw	r5,28(r16)
  2229ec:	81800015 	stw	r6,0(r16)
  2229f0:	8809883a 	mov	r4,r17
  2229f4:	103ee83a 	callr	r2
  2229f8:	80800115 	stw	r2,4(r16)
  2229fc:	00800e0e 	bge	zero,r2,222a38 <__srefill_r+0x100>
  222a00:	0005883a 	mov	r2,zero
  222a04:	dfc00317 	ldw	ra,12(sp)
  222a08:	dc800217 	ldw	r18,8(sp)
  222a0c:	dc400117 	ldw	r17,4(sp)
  222a10:	dc000017 	ldw	r16,0(sp)
  222a14:	dec00404 	addi	sp,sp,16
  222a18:	f800283a 	ret
  222a1c:	1100040c 	andi	r4,r2,16
  222a20:	20003026 	beq	r4,zero,222ae4 <__srefill_r+0x1ac>
  222a24:	1080020c 	andi	r2,r2,8
  222a28:	1000241e 	bne	r2,zero,222abc <__srefill_r+0x184>
  222a2c:	18c00114 	ori	r3,r3,4
  222a30:	80c0030d 	sth	r3,12(r16)
  222a34:	003fe406 	br	2229c8 <_gp+0xfffe7e40>
  222a38:	80c0030b 	ldhu	r3,12(r16)
  222a3c:	1000161e 	bne	r2,zero,222a98 <__srefill_r+0x160>
  222a40:	18c00814 	ori	r3,r3,32
  222a44:	00bfffc4 	movi	r2,-1
  222a48:	80c0030d 	sth	r3,12(r16)
  222a4c:	003fed06 	br	222a04 <_gp+0xfffe7e7c>
  222a50:	022104c0 	call	22104c <__sinit>
  222a54:	003fc206 	br	222960 <_gp+0xfffe7dd8>
  222a58:	008008f4 	movhi	r2,35
  222a5c:	108ae204 	addi	r2,r2,11144
  222a60:	11000017 	ldw	r4,0(r2)
  222a64:	014008b4 	movhi	r5,34
  222a68:	00800044 	movi	r2,1
  222a6c:	294a4704 	addi	r5,r5,10524
  222a70:	8080030d 	sth	r2,12(r16)
  222a74:	0221b040 	call	221b04 <_fwalk>
  222a78:	00800244 	movi	r2,9
  222a7c:	8480030d 	sth	r18,12(r16)
  222a80:	9480024c 	andi	r18,r18,9
  222a84:	90bfd51e 	bne	r18,r2,2229dc <_gp+0xfffe7e54>
  222a88:	800b883a 	mov	r5,r16
  222a8c:	8809883a 	mov	r4,r17
  222a90:	0220a540 	call	220a54 <__sflush_r>
  222a94:	003fd106 	br	2229dc <_gp+0xfffe7e54>
  222a98:	18c01014 	ori	r3,r3,64
  222a9c:	80000115 	stw	zero,4(r16)
  222aa0:	00bfffc4 	movi	r2,-1
  222aa4:	80c0030d 	sth	r3,12(r16)
  222aa8:	003fd606 	br	222a04 <_gp+0xfffe7e7c>
  222aac:	80c00e17 	ldw	r3,56(r16)
  222ab0:	0005883a 	mov	r2,zero
  222ab4:	80c00015 	stw	r3,0(r16)
  222ab8:	003fd206 	br	222a04 <_gp+0xfffe7e7c>
  222abc:	800b883a 	mov	r5,r16
  222ac0:	8809883a 	mov	r4,r17
  222ac4:	0220c700 	call	220c70 <_fflush_r>
  222ac8:	10000a1e 	bne	r2,zero,222af4 <__srefill_r+0x1bc>
  222acc:	8080030b 	ldhu	r2,12(r16)
  222ad0:	00fffdc4 	movi	r3,-9
  222ad4:	80000215 	stw	zero,8(r16)
  222ad8:	1886703a 	and	r3,r3,r2
  222adc:	80000615 	stw	zero,24(r16)
  222ae0:	003fd206 	br	222a2c <_gp+0xfffe7ea4>
  222ae4:	00800244 	movi	r2,9
  222ae8:	88800015 	stw	r2,0(r17)
  222aec:	18c01014 	ori	r3,r3,64
  222af0:	80c0030d 	sth	r3,12(r16)
  222af4:	00bfffc4 	movi	r2,-1
  222af8:	003fc206 	br	222a04 <_gp+0xfffe7e7c>
  222afc:	800b883a 	mov	r5,r16
  222b00:	8809883a 	mov	r4,r17
  222b04:	0221cf80 	call	221cf8 <__smakebuf_r>
  222b08:	003fb106 	br	2229d0 <_gp+0xfffe7e48>

00222b0c <_sbrk_r>:
  222b0c:	defffd04 	addi	sp,sp,-12
  222b10:	dc000015 	stw	r16,0(sp)
  222b14:	040008f4 	movhi	r16,35
  222b18:	dc400115 	stw	r17,4(sp)
  222b1c:	84120204 	addi	r16,r16,18440
  222b20:	2023883a 	mov	r17,r4
  222b24:	2809883a 	mov	r4,r5
  222b28:	dfc00215 	stw	ra,8(sp)
  222b2c:	80000015 	stw	zero,0(r16)
  222b30:	022e7b40 	call	22e7b4 <sbrk>
  222b34:	00ffffc4 	movi	r3,-1
  222b38:	10c00526 	beq	r2,r3,222b50 <_sbrk_r+0x44>
  222b3c:	dfc00217 	ldw	ra,8(sp)
  222b40:	dc400117 	ldw	r17,4(sp)
  222b44:	dc000017 	ldw	r16,0(sp)
  222b48:	dec00304 	addi	sp,sp,12
  222b4c:	f800283a 	ret
  222b50:	80c00017 	ldw	r3,0(r16)
  222b54:	183ff926 	beq	r3,zero,222b3c <_gp+0xfffe7fb4>
  222b58:	88c00015 	stw	r3,0(r17)
  222b5c:	003ff706 	br	222b3c <_gp+0xfffe7fb4>

00222b60 <__sread>:
  222b60:	defffe04 	addi	sp,sp,-8
  222b64:	dc000015 	stw	r16,0(sp)
  222b68:	2821883a 	mov	r16,r5
  222b6c:	2940038f 	ldh	r5,14(r5)
  222b70:	dfc00115 	stw	ra,4(sp)
  222b74:	022866c0 	call	22866c <_read_r>
  222b78:	10000716 	blt	r2,zero,222b98 <__sread+0x38>
  222b7c:	80c01417 	ldw	r3,80(r16)
  222b80:	1887883a 	add	r3,r3,r2
  222b84:	80c01415 	stw	r3,80(r16)
  222b88:	dfc00117 	ldw	ra,4(sp)
  222b8c:	dc000017 	ldw	r16,0(sp)
  222b90:	dec00204 	addi	sp,sp,8
  222b94:	f800283a 	ret
  222b98:	80c0030b 	ldhu	r3,12(r16)
  222b9c:	18fbffcc 	andi	r3,r3,61439
  222ba0:	80c0030d 	sth	r3,12(r16)
  222ba4:	dfc00117 	ldw	ra,4(sp)
  222ba8:	dc000017 	ldw	r16,0(sp)
  222bac:	dec00204 	addi	sp,sp,8
  222bb0:	f800283a 	ret

00222bb4 <__seofread>:
  222bb4:	0005883a 	mov	r2,zero
  222bb8:	f800283a 	ret

00222bbc <__swrite>:
  222bbc:	2880030b 	ldhu	r2,12(r5)
  222bc0:	defffb04 	addi	sp,sp,-20
  222bc4:	dcc00315 	stw	r19,12(sp)
  222bc8:	dc800215 	stw	r18,8(sp)
  222bcc:	dc400115 	stw	r17,4(sp)
  222bd0:	dc000015 	stw	r16,0(sp)
  222bd4:	dfc00415 	stw	ra,16(sp)
  222bd8:	10c0400c 	andi	r3,r2,256
  222bdc:	2821883a 	mov	r16,r5
  222be0:	2023883a 	mov	r17,r4
  222be4:	3025883a 	mov	r18,r6
  222be8:	3827883a 	mov	r19,r7
  222bec:	18000526 	beq	r3,zero,222c04 <__swrite+0x48>
  222bf0:	2940038f 	ldh	r5,14(r5)
  222bf4:	01c00084 	movi	r7,2
  222bf8:	000d883a 	mov	r6,zero
  222bfc:	02272880 	call	227288 <_lseek_r>
  222c00:	8080030b 	ldhu	r2,12(r16)
  222c04:	8140038f 	ldh	r5,14(r16)
  222c08:	10bbffcc 	andi	r2,r2,61439
  222c0c:	980f883a 	mov	r7,r19
  222c10:	900d883a 	mov	r6,r18
  222c14:	8809883a 	mov	r4,r17
  222c18:	8080030d 	sth	r2,12(r16)
  222c1c:	dfc00417 	ldw	ra,16(sp)
  222c20:	dcc00317 	ldw	r19,12(sp)
  222c24:	dc800217 	ldw	r18,8(sp)
  222c28:	dc400117 	ldw	r17,4(sp)
  222c2c:	dc000017 	ldw	r16,0(sp)
  222c30:	dec00504 	addi	sp,sp,20
  222c34:	02251601 	jmpi	225160 <_write_r>

00222c38 <__sseek>:
  222c38:	defffe04 	addi	sp,sp,-8
  222c3c:	dc000015 	stw	r16,0(sp)
  222c40:	2821883a 	mov	r16,r5
  222c44:	2940038f 	ldh	r5,14(r5)
  222c48:	dfc00115 	stw	ra,4(sp)
  222c4c:	02272880 	call	227288 <_lseek_r>
  222c50:	00ffffc4 	movi	r3,-1
  222c54:	10c00826 	beq	r2,r3,222c78 <__sseek+0x40>
  222c58:	80c0030b 	ldhu	r3,12(r16)
  222c5c:	80801415 	stw	r2,80(r16)
  222c60:	18c40014 	ori	r3,r3,4096
  222c64:	80c0030d 	sth	r3,12(r16)
  222c68:	dfc00117 	ldw	ra,4(sp)
  222c6c:	dc000017 	ldw	r16,0(sp)
  222c70:	dec00204 	addi	sp,sp,8
  222c74:	f800283a 	ret
  222c78:	80c0030b 	ldhu	r3,12(r16)
  222c7c:	18fbffcc 	andi	r3,r3,61439
  222c80:	80c0030d 	sth	r3,12(r16)
  222c84:	dfc00117 	ldw	ra,4(sp)
  222c88:	dc000017 	ldw	r16,0(sp)
  222c8c:	dec00204 	addi	sp,sp,8
  222c90:	f800283a 	ret

00222c94 <__sclose>:
  222c94:	2940038f 	ldh	r5,14(r5)
  222c98:	02253141 	jmpi	225314 <_close_r>

00222c9c <strlen>:
  222c9c:	208000cc 	andi	r2,r4,3
  222ca0:	10002026 	beq	r2,zero,222d24 <strlen+0x88>
  222ca4:	20800007 	ldb	r2,0(r4)
  222ca8:	10002026 	beq	r2,zero,222d2c <strlen+0x90>
  222cac:	2005883a 	mov	r2,r4
  222cb0:	00000206 	br	222cbc <strlen+0x20>
  222cb4:	10c00007 	ldb	r3,0(r2)
  222cb8:	18001826 	beq	r3,zero,222d1c <strlen+0x80>
  222cbc:	10800044 	addi	r2,r2,1
  222cc0:	10c000cc 	andi	r3,r2,3
  222cc4:	183ffb1e 	bne	r3,zero,222cb4 <_gp+0xfffe812c>
  222cc8:	10c00017 	ldw	r3,0(r2)
  222ccc:	01ffbff4 	movhi	r7,65279
  222cd0:	39ffbfc4 	addi	r7,r7,-257
  222cd4:	00ca303a 	nor	r5,zero,r3
  222cd8:	01a02074 	movhi	r6,32897
  222cdc:	19c7883a 	add	r3,r3,r7
  222ce0:	31a02004 	addi	r6,r6,-32640
  222ce4:	1946703a 	and	r3,r3,r5
  222ce8:	1986703a 	and	r3,r3,r6
  222cec:	1800091e 	bne	r3,zero,222d14 <strlen+0x78>
  222cf0:	10800104 	addi	r2,r2,4
  222cf4:	10c00017 	ldw	r3,0(r2)
  222cf8:	19cb883a 	add	r5,r3,r7
  222cfc:	00c6303a 	nor	r3,zero,r3
  222d00:	28c6703a 	and	r3,r5,r3
  222d04:	1986703a 	and	r3,r3,r6
  222d08:	183ff926 	beq	r3,zero,222cf0 <_gp+0xfffe8168>
  222d0c:	00000106 	br	222d14 <strlen+0x78>
  222d10:	10800044 	addi	r2,r2,1
  222d14:	10c00007 	ldb	r3,0(r2)
  222d18:	183ffd1e 	bne	r3,zero,222d10 <_gp+0xfffe8188>
  222d1c:	1105c83a 	sub	r2,r2,r4
  222d20:	f800283a 	ret
  222d24:	2005883a 	mov	r2,r4
  222d28:	003fe706 	br	222cc8 <_gp+0xfffe8140>
  222d2c:	0005883a 	mov	r2,zero
  222d30:	f800283a 	ret

00222d34 <__utoa>:
  222d34:	008cccb4 	movhi	r2,13106
  222d38:	defff004 	addi	sp,sp,-64
  222d3c:	108c4c04 	addi	r2,r2,12592
  222d40:	d8800015 	stw	r2,0(sp)
  222d44:	008dcdb4 	movhi	r2,14134
  222d48:	108d4d04 	addi	r2,r2,13620
  222d4c:	d8800115 	stw	r2,4(sp)
  222d50:	00989874 	movhi	r2,25185
  222d54:	108e4e04 	addi	r2,r2,14648
  222d58:	d8800215 	stw	r2,8(sp)
  222d5c:	00999974 	movhi	r2,26213
  222d60:	109918c4 	addi	r2,r2,25699
  222d64:	d8800315 	stw	r2,12(sp)
  222d68:	009a9a74 	movhi	r2,27241
  222d6c:	109a19c4 	addi	r2,r2,26727
  222d70:	d8800415 	stw	r2,16(sp)
  222d74:	009b9b74 	movhi	r2,28269
  222d78:	109b1ac4 	addi	r2,r2,27755
  222d7c:	d8800515 	stw	r2,20(sp)
  222d80:	009c9c74 	movhi	r2,29297
  222d84:	109c1bc4 	addi	r2,r2,28783
  222d88:	d8800615 	stw	r2,24(sp)
  222d8c:	009d9d74 	movhi	r2,30325
  222d90:	109d1cc4 	addi	r2,r2,29811
  222d94:	d8800715 	stw	r2,28(sp)
  222d98:	009e9e74 	movhi	r2,31353
  222d9c:	109e1dc4 	addi	r2,r2,30839
  222da0:	dd000e15 	stw	r20,56(sp)
  222da4:	d8800815 	stw	r2,32(sp)
  222da8:	dfc00f15 	stw	ra,60(sp)
  222dac:	dcc00d15 	stw	r19,52(sp)
  222db0:	dc800c15 	stw	r18,48(sp)
  222db4:	dc400b15 	stw	r17,44(sp)
  222db8:	dc000a15 	stw	r16,40(sp)
  222dbc:	d8000905 	stb	zero,36(sp)
  222dc0:	30bfff84 	addi	r2,r6,-2
  222dc4:	00c00884 	movi	r3,34
  222dc8:	2829883a 	mov	r20,r5
  222dcc:	18802c36 	bltu	r3,r2,222e80 <__utoa+0x14c>
  222dd0:	3027883a 	mov	r19,r6
  222dd4:	2023883a 	mov	r17,r4
  222dd8:	2825883a 	mov	r18,r5
  222ddc:	0021883a 	mov	r16,zero
  222de0:	00000106 	br	222de8 <__utoa+0xb4>
  222de4:	1821883a 	mov	r16,r3
  222de8:	8809883a 	mov	r4,r17
  222dec:	980b883a 	mov	r5,r19
  222df0:	022b5e00 	call	22b5e0 <__umodsi3>
  222df4:	d885883a 	add	r2,sp,r2
  222df8:	10800003 	ldbu	r2,0(r2)
  222dfc:	8809883a 	mov	r4,r17
  222e00:	980b883a 	mov	r5,r19
  222e04:	90800005 	stb	r2,0(r18)
  222e08:	022b57c0 	call	22b57c <__udivsi3>
  222e0c:	1023883a 	mov	r17,r2
  222e10:	80c00044 	addi	r3,r16,1
  222e14:	94800044 	addi	r18,r18,1
  222e18:	103ff21e 	bne	r2,zero,222de4 <_gp+0xfffe825c>
  222e1c:	a0c7883a 	add	r3,r20,r3
  222e20:	18000005 	stb	zero,0(r3)
  222e24:	80000d26 	beq	r16,zero,222e5c <__utoa+0x128>
  222e28:	01c00044 	movi	r7,1
  222e2c:	a409883a 	add	r4,r20,r16
  222e30:	a007883a 	mov	r3,r20
  222e34:	3d0fc83a 	sub	r7,r7,r20
  222e38:	21800003 	ldbu	r6,0(r4)
  222e3c:	19400003 	ldbu	r5,0(r3)
  222e40:	38c5883a 	add	r2,r7,r3
  222e44:	19800005 	stb	r6,0(r3)
  222e48:	21400005 	stb	r5,0(r4)
  222e4c:	843fffc4 	addi	r16,r16,-1
  222e50:	18c00044 	addi	r3,r3,1
  222e54:	213fffc4 	addi	r4,r4,-1
  222e58:	143ff716 	blt	r2,r16,222e38 <_gp+0xfffe82b0>
  222e5c:	a005883a 	mov	r2,r20
  222e60:	dfc00f17 	ldw	ra,60(sp)
  222e64:	dd000e17 	ldw	r20,56(sp)
  222e68:	dcc00d17 	ldw	r19,52(sp)
  222e6c:	dc800c17 	ldw	r18,48(sp)
  222e70:	dc400b17 	ldw	r17,44(sp)
  222e74:	dc000a17 	ldw	r16,40(sp)
  222e78:	dec01004 	addi	sp,sp,64
  222e7c:	f800283a 	ret
  222e80:	28000005 	stb	zero,0(r5)
  222e84:	0005883a 	mov	r2,zero
  222e88:	003ff506 	br	222e60 <_gp+0xfffe82d8>

00222e8c <utoa>:
  222e8c:	0222d341 	jmpi	222d34 <__utoa>

00222e90 <___vfprintf_internal_r>:
  222e90:	deffb804 	addi	sp,sp,-288
  222e94:	dfc04715 	stw	ra,284(sp)
  222e98:	ddc04515 	stw	r23,276(sp)
  222e9c:	dd404315 	stw	r21,268(sp)
  222ea0:	d9002c15 	stw	r4,176(sp)
  222ea4:	282f883a 	mov	r23,r5
  222ea8:	302b883a 	mov	r21,r6
  222eac:	d9c02d15 	stw	r7,180(sp)
  222eb0:	df004615 	stw	fp,280(sp)
  222eb4:	dd804415 	stw	r22,272(sp)
  222eb8:	dd004215 	stw	r20,264(sp)
  222ebc:	dcc04115 	stw	r19,260(sp)
  222ec0:	dc804015 	stw	r18,256(sp)
  222ec4:	dc403f15 	stw	r17,252(sp)
  222ec8:	dc003e15 	stw	r16,248(sp)
  222ecc:	02272580 	call	227258 <_localeconv_r>
  222ed0:	10800017 	ldw	r2,0(r2)
  222ed4:	1009883a 	mov	r4,r2
  222ed8:	d8803415 	stw	r2,208(sp)
  222edc:	0222c9c0 	call	222c9c <strlen>
  222ee0:	d8803715 	stw	r2,220(sp)
  222ee4:	d8802c17 	ldw	r2,176(sp)
  222ee8:	10000226 	beq	r2,zero,222ef4 <___vfprintf_internal_r+0x64>
  222eec:	10800e17 	ldw	r2,56(r2)
  222ef0:	1000f926 	beq	r2,zero,2232d8 <___vfprintf_internal_r+0x448>
  222ef4:	b880030b 	ldhu	r2,12(r23)
  222ef8:	10c8000c 	andi	r3,r2,8192
  222efc:	1800061e 	bne	r3,zero,222f18 <___vfprintf_internal_r+0x88>
  222f00:	b9001917 	ldw	r4,100(r23)
  222f04:	00f7ffc4 	movi	r3,-8193
  222f08:	10880014 	ori	r2,r2,8192
  222f0c:	20c6703a 	and	r3,r4,r3
  222f10:	b880030d 	sth	r2,12(r23)
  222f14:	b8c01915 	stw	r3,100(r23)
  222f18:	10c0020c 	andi	r3,r2,8
  222f1c:	1800c126 	beq	r3,zero,223224 <___vfprintf_internal_r+0x394>
  222f20:	b8c00417 	ldw	r3,16(r23)
  222f24:	1800bf26 	beq	r3,zero,223224 <___vfprintf_internal_r+0x394>
  222f28:	1080068c 	andi	r2,r2,26
  222f2c:	00c00284 	movi	r3,10
  222f30:	10c0c426 	beq	r2,r3,223244 <___vfprintf_internal_r+0x3b4>
  222f34:	d8c00404 	addi	r3,sp,16
  222f38:	050008f4 	movhi	r20,35
  222f3c:	d9001e04 	addi	r4,sp,120
  222f40:	a5035884 	addi	r20,r20,3426
  222f44:	d8c01e15 	stw	r3,120(sp)
  222f48:	d8002015 	stw	zero,128(sp)
  222f4c:	d8001f15 	stw	zero,124(sp)
  222f50:	d8003315 	stw	zero,204(sp)
  222f54:	d8003615 	stw	zero,216(sp)
  222f58:	d8003815 	stw	zero,224(sp)
  222f5c:	1811883a 	mov	r8,r3
  222f60:	d8003915 	stw	zero,228(sp)
  222f64:	d8003a15 	stw	zero,232(sp)
  222f68:	d8002f15 	stw	zero,188(sp)
  222f6c:	d9002815 	stw	r4,160(sp)
  222f70:	a8800007 	ldb	r2,0(r21)
  222f74:	10027b26 	beq	r2,zero,223964 <___vfprintf_internal_r+0xad4>
  222f78:	00c00944 	movi	r3,37
  222f7c:	a821883a 	mov	r16,r21
  222f80:	10c0021e 	bne	r2,r3,222f8c <___vfprintf_internal_r+0xfc>
  222f84:	00001406 	br	222fd8 <___vfprintf_internal_r+0x148>
  222f88:	10c00326 	beq	r2,r3,222f98 <___vfprintf_internal_r+0x108>
  222f8c:	84000044 	addi	r16,r16,1
  222f90:	80800007 	ldb	r2,0(r16)
  222f94:	103ffc1e 	bne	r2,zero,222f88 <_gp+0xfffe8400>
  222f98:	8563c83a 	sub	r17,r16,r21
  222f9c:	88000e26 	beq	r17,zero,222fd8 <___vfprintf_internal_r+0x148>
  222fa0:	d8c02017 	ldw	r3,128(sp)
  222fa4:	d8801f17 	ldw	r2,124(sp)
  222fa8:	45400015 	stw	r21,0(r8)
  222fac:	1c47883a 	add	r3,r3,r17
  222fb0:	10800044 	addi	r2,r2,1
  222fb4:	d8c02015 	stw	r3,128(sp)
  222fb8:	44400115 	stw	r17,4(r8)
  222fbc:	d8801f15 	stw	r2,124(sp)
  222fc0:	00c001c4 	movi	r3,7
  222fc4:	1880a716 	blt	r3,r2,223264 <___vfprintf_internal_r+0x3d4>
  222fc8:	42000204 	addi	r8,r8,8
  222fcc:	d9402f17 	ldw	r5,188(sp)
  222fd0:	2c4b883a 	add	r5,r5,r17
  222fd4:	d9402f15 	stw	r5,188(sp)
  222fd8:	80800007 	ldb	r2,0(r16)
  222fdc:	1000a826 	beq	r2,zero,223280 <___vfprintf_internal_r+0x3f0>
  222fe0:	84400047 	ldb	r17,1(r16)
  222fe4:	00bfffc4 	movi	r2,-1
  222fe8:	85400044 	addi	r21,r16,1
  222fec:	d8002785 	stb	zero,158(sp)
  222ff0:	0007883a 	mov	r3,zero
  222ff4:	000f883a 	mov	r7,zero
  222ff8:	d8802915 	stw	r2,164(sp)
  222ffc:	d8003115 	stw	zero,196(sp)
  223000:	0025883a 	mov	r18,zero
  223004:	01401604 	movi	r5,88
  223008:	01800244 	movi	r6,9
  22300c:	02800a84 	movi	r10,42
  223010:	02401b04 	movi	r9,108
  223014:	ad400044 	addi	r21,r21,1
  223018:	88bff804 	addi	r2,r17,-32
  22301c:	28830436 	bltu	r5,r2,223c30 <___vfprintf_internal_r+0xda0>
  223020:	100490ba 	slli	r2,r2,2
  223024:	010008b4 	movhi	r4,34
  223028:	210c0e04 	addi	r4,r4,12344
  22302c:	1105883a 	add	r2,r2,r4
  223030:	10800017 	ldw	r2,0(r2)
  223034:	1000683a 	jmp	r2
  223038:	00223b50 	cmplti	zero,zero,-30483
  22303c:	00223c30 	cmpltui	zero,zero,35056
  223040:	00223c30 	cmpltui	zero,zero,35056
  223044:	00223b70 	cmpltui	zero,zero,35053
  223048:	00223c30 	cmpltui	zero,zero,35056
  22304c:	00223c30 	cmpltui	zero,zero,35056
  223050:	00223c30 	cmpltui	zero,zero,35056
  223054:	00223c30 	cmpltui	zero,zero,35056
  223058:	00223c30 	cmpltui	zero,zero,35056
  22305c:	00223c30 	cmpltui	zero,zero,35056
  223060:	002232e4 	muli	zero,zero,-30517
  223064:	00223a8c 	andi	zero,zero,35050
  223068:	00223c30 	cmpltui	zero,zero,35056
  22306c:	002231ac 	andhi	zero,zero,35014
  223070:	0022330c 	andi	zero,zero,35020
  223074:	00223c30 	cmpltui	zero,zero,35056
  223078:	0022334c 	andi	zero,zero,35021
  22307c:	00223358 	cmpnei	zero,zero,-30515
  223080:	00223358 	cmpnei	zero,zero,-30515
  223084:	00223358 	cmpnei	zero,zero,-30515
  223088:	00223358 	cmpnei	zero,zero,-30515
  22308c:	00223358 	cmpnei	zero,zero,-30515
  223090:	00223358 	cmpnei	zero,zero,-30515
  223094:	00223358 	cmpnei	zero,zero,-30515
  223098:	00223358 	cmpnei	zero,zero,-30515
  22309c:	00223358 	cmpnei	zero,zero,-30515
  2230a0:	00223c30 	cmpltui	zero,zero,35056
  2230a4:	00223c30 	cmpltui	zero,zero,35056
  2230a8:	00223c30 	cmpltui	zero,zero,35056
  2230ac:	00223c30 	cmpltui	zero,zero,35056
  2230b0:	00223c30 	cmpltui	zero,zero,35056
  2230b4:	00223c30 	cmpltui	zero,zero,35056
  2230b8:	00223c30 	cmpltui	zero,zero,35056
  2230bc:	00223c30 	cmpltui	zero,zero,35056
  2230c0:	00223c30 	cmpltui	zero,zero,35056
  2230c4:	00223c30 	cmpltui	zero,zero,35056
  2230c8:	0022338c 	andi	zero,zero,35022
  2230cc:	00223448 	cmpgei	zero,zero,-30511
  2230d0:	00223c30 	cmpltui	zero,zero,35056
  2230d4:	00223448 	cmpgei	zero,zero,-30511
  2230d8:	00223c30 	cmpltui	zero,zero,35056
  2230dc:	00223c30 	cmpltui	zero,zero,35056
  2230e0:	00223c30 	cmpltui	zero,zero,35056
  2230e4:	00223c30 	cmpltui	zero,zero,35056
  2230e8:	002234e8 	cmpgeui	zero,zero,35027
  2230ec:	00223c30 	cmpltui	zero,zero,35056
  2230f0:	00223c30 	cmpltui	zero,zero,35056
  2230f4:	002234f4 	movhi	zero,35027
  2230f8:	00223c30 	cmpltui	zero,zero,35056
  2230fc:	00223c30 	cmpltui	zero,zero,35056
  223100:	00223c30 	cmpltui	zero,zero,35056
  223104:	00223c30 	cmpltui	zero,zero,35056
  223108:	00223c30 	cmpltui	zero,zero,35056
  22310c:	0022396c 	andhi	zero,zero,35045
  223110:	00223c30 	cmpltui	zero,zero,35056
  223114:	00223c30 	cmpltui	zero,zero,35056
  223118:	002239cc 	andi	zero,zero,35047
  22311c:	00223c30 	cmpltui	zero,zero,35056
  223120:	00223c30 	cmpltui	zero,zero,35056
  223124:	00223c30 	cmpltui	zero,zero,35056
  223128:	00223c30 	cmpltui	zero,zero,35056
  22312c:	00223c30 	cmpltui	zero,zero,35056
  223130:	00223c30 	cmpltui	zero,zero,35056
  223134:	00223c30 	cmpltui	zero,zero,35056
  223138:	00223c30 	cmpltui	zero,zero,35056
  22313c:	00223c30 	cmpltui	zero,zero,35056
  223140:	00223c30 	cmpltui	zero,zero,35056
  223144:	00223bdc 	xori	zero,zero,35055
  223148:	00223b7c 	xorhi	zero,zero,35053
  22314c:	00223448 	cmpgei	zero,zero,-30511
  223150:	00223448 	cmpgei	zero,zero,-30511
  223154:	00223448 	cmpgei	zero,zero,-30511
  223158:	00223b8c 	andi	zero,zero,35054
  22315c:	00223b7c 	xorhi	zero,zero,35053
  223160:	00223c30 	cmpltui	zero,zero,35056
  223164:	00223c30 	cmpltui	zero,zero,35056
  223168:	00223b98 	cmpnei	zero,zero,-30482
  22316c:	00223c30 	cmpltui	zero,zero,35056
  223170:	00223ba8 	cmpgeui	zero,zero,35054
  223174:	00223a7c 	xorhi	zero,zero,35049
  223178:	002231b8 	rdprs	zero,zero,-30522
  22317c:	00223a9c 	xori	zero,zero,35050
  223180:	00223c30 	cmpltui	zero,zero,35056
  223184:	00223aa8 	cmpgeui	zero,zero,35050
  223188:	00223c30 	cmpltui	zero,zero,35056
  22318c:	00223b04 	movi	zero,-30484
  223190:	00223c30 	cmpltui	zero,zero,35056
  223194:	00223c30 	cmpltui	zero,zero,35056
  223198:	00223b14 	movui	zero,35052
  22319c:	d9003117 	ldw	r4,196(sp)
  2231a0:	d8802d15 	stw	r2,180(sp)
  2231a4:	0109c83a 	sub	r4,zero,r4
  2231a8:	d9003115 	stw	r4,196(sp)
  2231ac:	94800114 	ori	r18,r18,4
  2231b0:	ac400007 	ldb	r17,0(r21)
  2231b4:	003f9706 	br	223014 <_gp+0xfffe848c>
  2231b8:	00800c04 	movi	r2,48
  2231bc:	d9002d17 	ldw	r4,180(sp)
  2231c0:	d9402917 	ldw	r5,164(sp)
  2231c4:	d8802705 	stb	r2,156(sp)
  2231c8:	00801e04 	movi	r2,120
  2231cc:	d8802745 	stb	r2,157(sp)
  2231d0:	d8002785 	stb	zero,158(sp)
  2231d4:	20c00104 	addi	r3,r4,4
  2231d8:	24c00017 	ldw	r19,0(r4)
  2231dc:	002d883a 	mov	r22,zero
  2231e0:	90800094 	ori	r2,r18,2
  2231e4:	28029a16 	blt	r5,zero,223c50 <___vfprintf_internal_r+0xdc0>
  2231e8:	00bfdfc4 	movi	r2,-129
  2231ec:	90a4703a 	and	r18,r18,r2
  2231f0:	d8c02d15 	stw	r3,180(sp)
  2231f4:	94800094 	ori	r18,r18,2
  2231f8:	9802871e 	bne	r19,zero,223c18 <___vfprintf_internal_r+0xd88>
  2231fc:	008008f4 	movhi	r2,35
  223200:	10835104 	addi	r2,r2,3396
  223204:	d8803915 	stw	r2,228(sp)
  223208:	04401e04 	movi	r17,120
  22320c:	d8802917 	ldw	r2,164(sp)
  223210:	0039883a 	mov	fp,zero
  223214:	1001e926 	beq	r2,zero,2239bc <___vfprintf_internal_r+0xb2c>
  223218:	0027883a 	mov	r19,zero
  22321c:	002d883a 	mov	r22,zero
  223220:	00020506 	br	223a38 <___vfprintf_internal_r+0xba8>
  223224:	d9002c17 	ldw	r4,176(sp)
  223228:	b80b883a 	mov	r5,r23
  22322c:	02251c00 	call	2251c0 <__swsetup_r>
  223230:	1005ac1e 	bne	r2,zero,2248e4 <___vfprintf_internal_r+0x1a54>
  223234:	b880030b 	ldhu	r2,12(r23)
  223238:	00c00284 	movi	r3,10
  22323c:	1080068c 	andi	r2,r2,26
  223240:	10ff3c1e 	bne	r2,r3,222f34 <_gp+0xfffe83ac>
  223244:	b880038f 	ldh	r2,14(r23)
  223248:	103f3a16 	blt	r2,zero,222f34 <_gp+0xfffe83ac>
  22324c:	d9c02d17 	ldw	r7,180(sp)
  223250:	d9002c17 	ldw	r4,176(sp)
  223254:	a80d883a 	mov	r6,r21
  223258:	b80b883a 	mov	r5,r23
  22325c:	02250a40 	call	2250a4 <__sbprintf>
  223260:	00001106 	br	2232a8 <___vfprintf_internal_r+0x418>
  223264:	d9002c17 	ldw	r4,176(sp)
  223268:	d9801e04 	addi	r6,sp,120
  22326c:	b80b883a 	mov	r5,r23
  223270:	0228e7c0 	call	228e7c <__sprint_r>
  223274:	1000081e 	bne	r2,zero,223298 <___vfprintf_internal_r+0x408>
  223278:	da000404 	addi	r8,sp,16
  22327c:	003f5306 	br	222fcc <_gp+0xfffe8444>
  223280:	d8802017 	ldw	r2,128(sp)
  223284:	10000426 	beq	r2,zero,223298 <___vfprintf_internal_r+0x408>
  223288:	d9002c17 	ldw	r4,176(sp)
  22328c:	d9801e04 	addi	r6,sp,120
  223290:	b80b883a 	mov	r5,r23
  223294:	0228e7c0 	call	228e7c <__sprint_r>
  223298:	b880030b 	ldhu	r2,12(r23)
  22329c:	1080100c 	andi	r2,r2,64
  2232a0:	1005901e 	bne	r2,zero,2248e4 <___vfprintf_internal_r+0x1a54>
  2232a4:	d8802f17 	ldw	r2,188(sp)
  2232a8:	dfc04717 	ldw	ra,284(sp)
  2232ac:	df004617 	ldw	fp,280(sp)
  2232b0:	ddc04517 	ldw	r23,276(sp)
  2232b4:	dd804417 	ldw	r22,272(sp)
  2232b8:	dd404317 	ldw	r21,268(sp)
  2232bc:	dd004217 	ldw	r20,264(sp)
  2232c0:	dcc04117 	ldw	r19,260(sp)
  2232c4:	dc804017 	ldw	r18,256(sp)
  2232c8:	dc403f17 	ldw	r17,252(sp)
  2232cc:	dc003e17 	ldw	r16,248(sp)
  2232d0:	dec04804 	addi	sp,sp,288
  2232d4:	f800283a 	ret
  2232d8:	d9002c17 	ldw	r4,176(sp)
  2232dc:	022104c0 	call	22104c <__sinit>
  2232e0:	003f0406 	br	222ef4 <_gp+0xfffe836c>
  2232e4:	d8802d17 	ldw	r2,180(sp)
  2232e8:	d9002d17 	ldw	r4,180(sp)
  2232ec:	10800017 	ldw	r2,0(r2)
  2232f0:	d8803115 	stw	r2,196(sp)
  2232f4:	20800104 	addi	r2,r4,4
  2232f8:	d9003117 	ldw	r4,196(sp)
  2232fc:	203fa716 	blt	r4,zero,22319c <_gp+0xfffe8614>
  223300:	d8802d15 	stw	r2,180(sp)
  223304:	ac400007 	ldb	r17,0(r21)
  223308:	003f4206 	br	223014 <_gp+0xfffe848c>
  22330c:	ac400007 	ldb	r17,0(r21)
  223310:	aac00044 	addi	r11,r21,1
  223314:	8a872826 	beq	r17,r10,224fb8 <___vfprintf_internal_r+0x2128>
  223318:	88bff404 	addi	r2,r17,-48
  22331c:	0009883a 	mov	r4,zero
  223320:	30867d36 	bltu	r6,r2,224d18 <___vfprintf_internal_r+0x1e88>
  223324:	5c400007 	ldb	r17,0(r11)
  223328:	210002a4 	muli	r4,r4,10
  22332c:	5d400044 	addi	r21,r11,1
  223330:	a817883a 	mov	r11,r21
  223334:	2089883a 	add	r4,r4,r2
  223338:	88bff404 	addi	r2,r17,-48
  22333c:	30bff92e 	bgeu	r6,r2,223324 <_gp+0xfffe879c>
  223340:	2005c916 	blt	r4,zero,224a68 <___vfprintf_internal_r+0x1bd8>
  223344:	d9002915 	stw	r4,164(sp)
  223348:	003f3306 	br	223018 <_gp+0xfffe8490>
  22334c:	94802014 	ori	r18,r18,128
  223350:	ac400007 	ldb	r17,0(r21)
  223354:	003f2f06 	br	223014 <_gp+0xfffe848c>
  223358:	a809883a 	mov	r4,r21
  22335c:	d8003115 	stw	zero,196(sp)
  223360:	88bff404 	addi	r2,r17,-48
  223364:	0017883a 	mov	r11,zero
  223368:	24400007 	ldb	r17,0(r4)
  22336c:	5ac002a4 	muli	r11,r11,10
  223370:	ad400044 	addi	r21,r21,1
  223374:	a809883a 	mov	r4,r21
  223378:	12d7883a 	add	r11,r2,r11
  22337c:	88bff404 	addi	r2,r17,-48
  223380:	30bff92e 	bgeu	r6,r2,223368 <_gp+0xfffe87e0>
  223384:	dac03115 	stw	r11,196(sp)
  223388:	003f2306 	br	223018 <_gp+0xfffe8490>
  22338c:	18c03fcc 	andi	r3,r3,255
  223390:	18072b1e 	bne	r3,zero,225040 <___vfprintf_internal_r+0x21b0>
  223394:	94800414 	ori	r18,r18,16
  223398:	9080080c 	andi	r2,r18,32
  22339c:	10037b26 	beq	r2,zero,22418c <___vfprintf_internal_r+0x12fc>
  2233a0:	d9402d17 	ldw	r5,180(sp)
  2233a4:	28800117 	ldw	r2,4(r5)
  2233a8:	2cc00017 	ldw	r19,0(r5)
  2233ac:	29400204 	addi	r5,r5,8
  2233b0:	d9402d15 	stw	r5,180(sp)
  2233b4:	102d883a 	mov	r22,r2
  2233b8:	10044b16 	blt	r2,zero,2244e8 <___vfprintf_internal_r+0x1658>
  2233bc:	d9402917 	ldw	r5,164(sp)
  2233c0:	df002783 	ldbu	fp,158(sp)
  2233c4:	2803bc16 	blt	r5,zero,2242b8 <___vfprintf_internal_r+0x1428>
  2233c8:	00ffdfc4 	movi	r3,-129
  2233cc:	9d84b03a 	or	r2,r19,r22
  2233d0:	90e4703a 	and	r18,r18,r3
  2233d4:	10017726 	beq	r2,zero,2239b4 <___vfprintf_internal_r+0xb24>
  2233d8:	b0038326 	beq	r22,zero,2241e8 <___vfprintf_internal_r+0x1358>
  2233dc:	dc402a15 	stw	r17,168(sp)
  2233e0:	dc001e04 	addi	r16,sp,120
  2233e4:	b023883a 	mov	r17,r22
  2233e8:	402d883a 	mov	r22,r8
  2233ec:	9809883a 	mov	r4,r19
  2233f0:	880b883a 	mov	r5,r17
  2233f4:	01800284 	movi	r6,10
  2233f8:	000f883a 	mov	r7,zero
  2233fc:	022af4c0 	call	22af4c <__umoddi3>
  223400:	10800c04 	addi	r2,r2,48
  223404:	843fffc4 	addi	r16,r16,-1
  223408:	9809883a 	mov	r4,r19
  22340c:	880b883a 	mov	r5,r17
  223410:	80800005 	stb	r2,0(r16)
  223414:	01800284 	movi	r6,10
  223418:	000f883a 	mov	r7,zero
  22341c:	022a9d40 	call	22a9d4 <__udivdi3>
  223420:	1027883a 	mov	r19,r2
  223424:	10c4b03a 	or	r2,r2,r3
  223428:	1823883a 	mov	r17,r3
  22342c:	103fef1e 	bne	r2,zero,2233ec <_gp+0xfffe8864>
  223430:	d8c02817 	ldw	r3,160(sp)
  223434:	dc402a17 	ldw	r17,168(sp)
  223438:	b011883a 	mov	r8,r22
  22343c:	1c07c83a 	sub	r3,r3,r16
  223440:	d8c02e15 	stw	r3,184(sp)
  223444:	00005906 	br	2235ac <___vfprintf_internal_r+0x71c>
  223448:	18c03fcc 	andi	r3,r3,255
  22344c:	1806fa1e 	bne	r3,zero,225038 <___vfprintf_internal_r+0x21a8>
  223450:	9080020c 	andi	r2,r18,8
  223454:	10048a26 	beq	r2,zero,224680 <___vfprintf_internal_r+0x17f0>
  223458:	d8c02d17 	ldw	r3,180(sp)
  22345c:	d9002d17 	ldw	r4,180(sp)
  223460:	d9402d17 	ldw	r5,180(sp)
  223464:	18c00017 	ldw	r3,0(r3)
  223468:	21000117 	ldw	r4,4(r4)
  22346c:	29400204 	addi	r5,r5,8
  223470:	d8c03615 	stw	r3,216(sp)
  223474:	d9003815 	stw	r4,224(sp)
  223478:	d9402d15 	stw	r5,180(sp)
  22347c:	d9003617 	ldw	r4,216(sp)
  223480:	d9403817 	ldw	r5,224(sp)
  223484:	da003d15 	stw	r8,244(sp)
  223488:	04000044 	movi	r16,1
  22348c:	0228c300 	call	228c30 <__fpclassifyd>
  223490:	da003d17 	ldw	r8,244(sp)
  223494:	14041f1e 	bne	r2,r16,224514 <___vfprintf_internal_r+0x1684>
  223498:	d9003617 	ldw	r4,216(sp)
  22349c:	d9403817 	ldw	r5,224(sp)
  2234a0:	000d883a 	mov	r6,zero
  2234a4:	000f883a 	mov	r7,zero
  2234a8:	022c9300 	call	22c930 <__ledf2>
  2234ac:	da003d17 	ldw	r8,244(sp)
  2234b0:	1005be16 	blt	r2,zero,224bac <___vfprintf_internal_r+0x1d1c>
  2234b4:	df002783 	ldbu	fp,158(sp)
  2234b8:	008011c4 	movi	r2,71
  2234bc:	1445330e 	bge	r2,r17,22498c <___vfprintf_internal_r+0x1afc>
  2234c0:	040008f4 	movhi	r16,35
  2234c4:	84034904 	addi	r16,r16,3364
  2234c8:	00c000c4 	movi	r3,3
  2234cc:	00bfdfc4 	movi	r2,-129
  2234d0:	d8c02a15 	stw	r3,168(sp)
  2234d4:	90a4703a 	and	r18,r18,r2
  2234d8:	d8c02e15 	stw	r3,184(sp)
  2234dc:	d8002915 	stw	zero,164(sp)
  2234e0:	d8003215 	stw	zero,200(sp)
  2234e4:	00003706 	br	2235c4 <___vfprintf_internal_r+0x734>
  2234e8:	94800214 	ori	r18,r18,8
  2234ec:	ac400007 	ldb	r17,0(r21)
  2234f0:	003ec806 	br	223014 <_gp+0xfffe848c>
  2234f4:	18c03fcc 	andi	r3,r3,255
  2234f8:	1806db1e 	bne	r3,zero,225068 <___vfprintf_internal_r+0x21d8>
  2234fc:	94800414 	ori	r18,r18,16
  223500:	9080080c 	andi	r2,r18,32
  223504:	1002d826 	beq	r2,zero,224068 <___vfprintf_internal_r+0x11d8>
  223508:	d9402d17 	ldw	r5,180(sp)
  22350c:	d8c02917 	ldw	r3,164(sp)
  223510:	d8002785 	stb	zero,158(sp)
  223514:	28800204 	addi	r2,r5,8
  223518:	2cc00017 	ldw	r19,0(r5)
  22351c:	2d800117 	ldw	r22,4(r5)
  223520:	18048f16 	blt	r3,zero,224760 <___vfprintf_internal_r+0x18d0>
  223524:	013fdfc4 	movi	r4,-129
  223528:	9d86b03a 	or	r3,r19,r22
  22352c:	d8802d15 	stw	r2,180(sp)
  223530:	9124703a 	and	r18,r18,r4
  223534:	1802d91e 	bne	r3,zero,22409c <___vfprintf_internal_r+0x120c>
  223538:	d8c02917 	ldw	r3,164(sp)
  22353c:	0039883a 	mov	fp,zero
  223540:	1805c326 	beq	r3,zero,224c50 <___vfprintf_internal_r+0x1dc0>
  223544:	0027883a 	mov	r19,zero
  223548:	002d883a 	mov	r22,zero
  22354c:	dc001e04 	addi	r16,sp,120
  223550:	9806d0fa 	srli	r3,r19,3
  223554:	b008977a 	slli	r4,r22,29
  223558:	b02cd0fa 	srli	r22,r22,3
  22355c:	9cc001cc 	andi	r19,r19,7
  223560:	98800c04 	addi	r2,r19,48
  223564:	843fffc4 	addi	r16,r16,-1
  223568:	20e6b03a 	or	r19,r4,r3
  22356c:	80800005 	stb	r2,0(r16)
  223570:	9d86b03a 	or	r3,r19,r22
  223574:	183ff61e 	bne	r3,zero,223550 <_gp+0xfffe89c8>
  223578:	90c0004c 	andi	r3,r18,1
  22357c:	18013b26 	beq	r3,zero,223a6c <___vfprintf_internal_r+0xbdc>
  223580:	10803fcc 	andi	r2,r2,255
  223584:	1080201c 	xori	r2,r2,128
  223588:	10bfe004 	addi	r2,r2,-128
  22358c:	00c00c04 	movi	r3,48
  223590:	10c13626 	beq	r2,r3,223a6c <___vfprintf_internal_r+0xbdc>
  223594:	80ffffc5 	stb	r3,-1(r16)
  223598:	d8c02817 	ldw	r3,160(sp)
  22359c:	80bfffc4 	addi	r2,r16,-1
  2235a0:	1021883a 	mov	r16,r2
  2235a4:	1887c83a 	sub	r3,r3,r2
  2235a8:	d8c02e15 	stw	r3,184(sp)
  2235ac:	d8802e17 	ldw	r2,184(sp)
  2235b0:	d9002917 	ldw	r4,164(sp)
  2235b4:	1100010e 	bge	r2,r4,2235bc <___vfprintf_internal_r+0x72c>
  2235b8:	2005883a 	mov	r2,r4
  2235bc:	d8802a15 	stw	r2,168(sp)
  2235c0:	d8003215 	stw	zero,200(sp)
  2235c4:	e7003fcc 	andi	fp,fp,255
  2235c8:	e700201c 	xori	fp,fp,128
  2235cc:	e73fe004 	addi	fp,fp,-128
  2235d0:	e0000326 	beq	fp,zero,2235e0 <___vfprintf_internal_r+0x750>
  2235d4:	d8c02a17 	ldw	r3,168(sp)
  2235d8:	18c00044 	addi	r3,r3,1
  2235dc:	d8c02a15 	stw	r3,168(sp)
  2235e0:	90c0008c 	andi	r3,r18,2
  2235e4:	d8c02b15 	stw	r3,172(sp)
  2235e8:	18000326 	beq	r3,zero,2235f8 <___vfprintf_internal_r+0x768>
  2235ec:	d8c02a17 	ldw	r3,168(sp)
  2235f0:	18c00084 	addi	r3,r3,2
  2235f4:	d8c02a15 	stw	r3,168(sp)
  2235f8:	90c0210c 	andi	r3,r18,132
  2235fc:	d8c03015 	stw	r3,192(sp)
  223600:	1801a31e 	bne	r3,zero,223c90 <___vfprintf_internal_r+0xe00>
  223604:	d9003117 	ldw	r4,196(sp)
  223608:	d8c02a17 	ldw	r3,168(sp)
  22360c:	20e7c83a 	sub	r19,r4,r3
  223610:	04c19f0e 	bge	zero,r19,223c90 <___vfprintf_internal_r+0xe00>
  223614:	02400404 	movi	r9,16
  223618:	d8c02017 	ldw	r3,128(sp)
  22361c:	d8801f17 	ldw	r2,124(sp)
  223620:	4cc50d0e 	bge	r9,r19,224a58 <___vfprintf_internal_r+0x1bc8>
  223624:	014008f4 	movhi	r5,35
  223628:	29435c84 	addi	r5,r5,3442
  22362c:	dc403b15 	stw	r17,236(sp)
  223630:	d9403515 	stw	r5,212(sp)
  223634:	9823883a 	mov	r17,r19
  223638:	482d883a 	mov	r22,r9
  22363c:	9027883a 	mov	r19,r18
  223640:	070001c4 	movi	fp,7
  223644:	8025883a 	mov	r18,r16
  223648:	dc002c17 	ldw	r16,176(sp)
  22364c:	00000306 	br	22365c <___vfprintf_internal_r+0x7cc>
  223650:	8c7ffc04 	addi	r17,r17,-16
  223654:	42000204 	addi	r8,r8,8
  223658:	b440130e 	bge	r22,r17,2236a8 <___vfprintf_internal_r+0x818>
  22365c:	010008f4 	movhi	r4,35
  223660:	18c00404 	addi	r3,r3,16
  223664:	10800044 	addi	r2,r2,1
  223668:	21035c84 	addi	r4,r4,3442
  22366c:	41000015 	stw	r4,0(r8)
  223670:	45800115 	stw	r22,4(r8)
  223674:	d8c02015 	stw	r3,128(sp)
  223678:	d8801f15 	stw	r2,124(sp)
  22367c:	e0bff40e 	bge	fp,r2,223650 <_gp+0xfffe8ac8>
  223680:	d9801e04 	addi	r6,sp,120
  223684:	b80b883a 	mov	r5,r23
  223688:	8009883a 	mov	r4,r16
  22368c:	0228e7c0 	call	228e7c <__sprint_r>
  223690:	103f011e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  223694:	8c7ffc04 	addi	r17,r17,-16
  223698:	d8c02017 	ldw	r3,128(sp)
  22369c:	d8801f17 	ldw	r2,124(sp)
  2236a0:	da000404 	addi	r8,sp,16
  2236a4:	b47fed16 	blt	r22,r17,22365c <_gp+0xfffe8ad4>
  2236a8:	9021883a 	mov	r16,r18
  2236ac:	9825883a 	mov	r18,r19
  2236b0:	8827883a 	mov	r19,r17
  2236b4:	dc403b17 	ldw	r17,236(sp)
  2236b8:	d9403517 	ldw	r5,212(sp)
  2236bc:	98c7883a 	add	r3,r19,r3
  2236c0:	10800044 	addi	r2,r2,1
  2236c4:	41400015 	stw	r5,0(r8)
  2236c8:	44c00115 	stw	r19,4(r8)
  2236cc:	d8c02015 	stw	r3,128(sp)
  2236d0:	d8801f15 	stw	r2,124(sp)
  2236d4:	010001c4 	movi	r4,7
  2236d8:	2082a316 	blt	r4,r2,224168 <___vfprintf_internal_r+0x12d8>
  2236dc:	df002787 	ldb	fp,158(sp)
  2236e0:	42000204 	addi	r8,r8,8
  2236e4:	e0000c26 	beq	fp,zero,223718 <___vfprintf_internal_r+0x888>
  2236e8:	d8801f17 	ldw	r2,124(sp)
  2236ec:	d9002784 	addi	r4,sp,158
  2236f0:	18c00044 	addi	r3,r3,1
  2236f4:	10800044 	addi	r2,r2,1
  2236f8:	41000015 	stw	r4,0(r8)
  2236fc:	01000044 	movi	r4,1
  223700:	41000115 	stw	r4,4(r8)
  223704:	d8c02015 	stw	r3,128(sp)
  223708:	d8801f15 	stw	r2,124(sp)
  22370c:	010001c4 	movi	r4,7
  223710:	20823c16 	blt	r4,r2,224004 <___vfprintf_internal_r+0x1174>
  223714:	42000204 	addi	r8,r8,8
  223718:	d8802b17 	ldw	r2,172(sp)
  22371c:	10000c26 	beq	r2,zero,223750 <___vfprintf_internal_r+0x8c0>
  223720:	d8801f17 	ldw	r2,124(sp)
  223724:	d9002704 	addi	r4,sp,156
  223728:	18c00084 	addi	r3,r3,2
  22372c:	10800044 	addi	r2,r2,1
  223730:	41000015 	stw	r4,0(r8)
  223734:	01000084 	movi	r4,2
  223738:	41000115 	stw	r4,4(r8)
  22373c:	d8c02015 	stw	r3,128(sp)
  223740:	d8801f15 	stw	r2,124(sp)
  223744:	010001c4 	movi	r4,7
  223748:	20823616 	blt	r4,r2,224024 <___vfprintf_internal_r+0x1194>
  22374c:	42000204 	addi	r8,r8,8
  223750:	d9003017 	ldw	r4,192(sp)
  223754:	00802004 	movi	r2,128
  223758:	20819926 	beq	r4,r2,223dc0 <___vfprintf_internal_r+0xf30>
  22375c:	d9402917 	ldw	r5,164(sp)
  223760:	d8802e17 	ldw	r2,184(sp)
  223764:	28adc83a 	sub	r22,r5,r2
  223768:	0580310e 	bge	zero,r22,223830 <___vfprintf_internal_r+0x9a0>
  22376c:	07000404 	movi	fp,16
  223770:	d8801f17 	ldw	r2,124(sp)
  223774:	e584140e 	bge	fp,r22,2247c8 <___vfprintf_internal_r+0x1938>
  223778:	014008f4 	movhi	r5,35
  22377c:	29435884 	addi	r5,r5,3426
  223780:	dc402915 	stw	r17,164(sp)
  223784:	d9402b15 	stw	r5,172(sp)
  223788:	b023883a 	mov	r17,r22
  22378c:	04c001c4 	movi	r19,7
  223790:	a82d883a 	mov	r22,r21
  223794:	902b883a 	mov	r21,r18
  223798:	8025883a 	mov	r18,r16
  22379c:	dc002c17 	ldw	r16,176(sp)
  2237a0:	00000306 	br	2237b0 <___vfprintf_internal_r+0x920>
  2237a4:	8c7ffc04 	addi	r17,r17,-16
  2237a8:	42000204 	addi	r8,r8,8
  2237ac:	e440110e 	bge	fp,r17,2237f4 <___vfprintf_internal_r+0x964>
  2237b0:	18c00404 	addi	r3,r3,16
  2237b4:	10800044 	addi	r2,r2,1
  2237b8:	45000015 	stw	r20,0(r8)
  2237bc:	47000115 	stw	fp,4(r8)
  2237c0:	d8c02015 	stw	r3,128(sp)
  2237c4:	d8801f15 	stw	r2,124(sp)
  2237c8:	98bff60e 	bge	r19,r2,2237a4 <_gp+0xfffe8c1c>
  2237cc:	d9801e04 	addi	r6,sp,120
  2237d0:	b80b883a 	mov	r5,r23
  2237d4:	8009883a 	mov	r4,r16
  2237d8:	0228e7c0 	call	228e7c <__sprint_r>
  2237dc:	103eae1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2237e0:	8c7ffc04 	addi	r17,r17,-16
  2237e4:	d8c02017 	ldw	r3,128(sp)
  2237e8:	d8801f17 	ldw	r2,124(sp)
  2237ec:	da000404 	addi	r8,sp,16
  2237f0:	e47fef16 	blt	fp,r17,2237b0 <_gp+0xfffe8c28>
  2237f4:	9021883a 	mov	r16,r18
  2237f8:	a825883a 	mov	r18,r21
  2237fc:	b02b883a 	mov	r21,r22
  223800:	882d883a 	mov	r22,r17
  223804:	dc402917 	ldw	r17,164(sp)
  223808:	d9002b17 	ldw	r4,172(sp)
  22380c:	1d87883a 	add	r3,r3,r22
  223810:	10800044 	addi	r2,r2,1
  223814:	41000015 	stw	r4,0(r8)
  223818:	45800115 	stw	r22,4(r8)
  22381c:	d8c02015 	stw	r3,128(sp)
  223820:	d8801f15 	stw	r2,124(sp)
  223824:	010001c4 	movi	r4,7
  223828:	2081ee16 	blt	r4,r2,223fe4 <___vfprintf_internal_r+0x1154>
  22382c:	42000204 	addi	r8,r8,8
  223830:	9080400c 	andi	r2,r18,256
  223834:	1001181e 	bne	r2,zero,223c98 <___vfprintf_internal_r+0xe08>
  223838:	d9402e17 	ldw	r5,184(sp)
  22383c:	d8801f17 	ldw	r2,124(sp)
  223840:	44000015 	stw	r16,0(r8)
  223844:	1947883a 	add	r3,r3,r5
  223848:	10800044 	addi	r2,r2,1
  22384c:	41400115 	stw	r5,4(r8)
  223850:	d8c02015 	stw	r3,128(sp)
  223854:	d8801f15 	stw	r2,124(sp)
  223858:	010001c4 	movi	r4,7
  22385c:	2081d316 	blt	r4,r2,223fac <___vfprintf_internal_r+0x111c>
  223860:	42000204 	addi	r8,r8,8
  223864:	9480010c 	andi	r18,r18,4
  223868:	90003226 	beq	r18,zero,223934 <___vfprintf_internal_r+0xaa4>
  22386c:	d9403117 	ldw	r5,196(sp)
  223870:	d8802a17 	ldw	r2,168(sp)
  223874:	28a1c83a 	sub	r16,r5,r2
  223878:	04002e0e 	bge	zero,r16,223934 <___vfprintf_internal_r+0xaa4>
  22387c:	04400404 	movi	r17,16
  223880:	d8801f17 	ldw	r2,124(sp)
  223884:	8c04a20e 	bge	r17,r16,224b10 <___vfprintf_internal_r+0x1c80>
  223888:	014008f4 	movhi	r5,35
  22388c:	29435c84 	addi	r5,r5,3442
  223890:	d9403515 	stw	r5,212(sp)
  223894:	048001c4 	movi	r18,7
  223898:	dcc02c17 	ldw	r19,176(sp)
  22389c:	00000306 	br	2238ac <___vfprintf_internal_r+0xa1c>
  2238a0:	843ffc04 	addi	r16,r16,-16
  2238a4:	42000204 	addi	r8,r8,8
  2238a8:	8c00130e 	bge	r17,r16,2238f8 <___vfprintf_internal_r+0xa68>
  2238ac:	010008f4 	movhi	r4,35
  2238b0:	18c00404 	addi	r3,r3,16
  2238b4:	10800044 	addi	r2,r2,1
  2238b8:	21035c84 	addi	r4,r4,3442
  2238bc:	41000015 	stw	r4,0(r8)
  2238c0:	44400115 	stw	r17,4(r8)
  2238c4:	d8c02015 	stw	r3,128(sp)
  2238c8:	d8801f15 	stw	r2,124(sp)
  2238cc:	90bff40e 	bge	r18,r2,2238a0 <_gp+0xfffe8d18>
  2238d0:	d9801e04 	addi	r6,sp,120
  2238d4:	b80b883a 	mov	r5,r23
  2238d8:	9809883a 	mov	r4,r19
  2238dc:	0228e7c0 	call	228e7c <__sprint_r>
  2238e0:	103e6d1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2238e4:	843ffc04 	addi	r16,r16,-16
  2238e8:	d8c02017 	ldw	r3,128(sp)
  2238ec:	d8801f17 	ldw	r2,124(sp)
  2238f0:	da000404 	addi	r8,sp,16
  2238f4:	8c3fed16 	blt	r17,r16,2238ac <_gp+0xfffe8d24>
  2238f8:	d9403517 	ldw	r5,212(sp)
  2238fc:	1c07883a 	add	r3,r3,r16
  223900:	10800044 	addi	r2,r2,1
  223904:	41400015 	stw	r5,0(r8)
  223908:	44000115 	stw	r16,4(r8)
  22390c:	d8c02015 	stw	r3,128(sp)
  223910:	d8801f15 	stw	r2,124(sp)
  223914:	010001c4 	movi	r4,7
  223918:	2080060e 	bge	r4,r2,223934 <___vfprintf_internal_r+0xaa4>
  22391c:	d9002c17 	ldw	r4,176(sp)
  223920:	d9801e04 	addi	r6,sp,120
  223924:	b80b883a 	mov	r5,r23
  223928:	0228e7c0 	call	228e7c <__sprint_r>
  22392c:	103e5a1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  223930:	d8c02017 	ldw	r3,128(sp)
  223934:	d8803117 	ldw	r2,196(sp)
  223938:	d9002a17 	ldw	r4,168(sp)
  22393c:	1100010e 	bge	r2,r4,223944 <___vfprintf_internal_r+0xab4>
  223940:	2005883a 	mov	r2,r4
  223944:	d9402f17 	ldw	r5,188(sp)
  223948:	288b883a 	add	r5,r5,r2
  22394c:	d9402f15 	stw	r5,188(sp)
  223950:	18019e1e 	bne	r3,zero,223fcc <___vfprintf_internal_r+0x113c>
  223954:	a8800007 	ldb	r2,0(r21)
  223958:	d8001f15 	stw	zero,124(sp)
  22395c:	da000404 	addi	r8,sp,16
  223960:	103d851e 	bne	r2,zero,222f78 <_gp+0xfffe83f0>
  223964:	a821883a 	mov	r16,r21
  223968:	003d9b06 	br	222fd8 <_gp+0xfffe8450>
  22396c:	18c03fcc 	andi	r3,r3,255
  223970:	1805c11e 	bne	r3,zero,225078 <___vfprintf_internal_r+0x21e8>
  223974:	94800414 	ori	r18,r18,16
  223978:	9080080c 	andi	r2,r18,32
  22397c:	10020c26 	beq	r2,zero,2241b0 <___vfprintf_internal_r+0x1320>
  223980:	d8802d17 	ldw	r2,180(sp)
  223984:	d9002917 	ldw	r4,164(sp)
  223988:	d8002785 	stb	zero,158(sp)
  22398c:	10c00204 	addi	r3,r2,8
  223990:	14c00017 	ldw	r19,0(r2)
  223994:	15800117 	ldw	r22,4(r2)
  223998:	20040f16 	blt	r4,zero,2249d8 <___vfprintf_internal_r+0x1b48>
  22399c:	013fdfc4 	movi	r4,-129
  2239a0:	9d84b03a 	or	r2,r19,r22
  2239a4:	d8c02d15 	stw	r3,180(sp)
  2239a8:	9124703a 	and	r18,r18,r4
  2239ac:	0039883a 	mov	fp,zero
  2239b0:	103e891e 	bne	r2,zero,2233d8 <_gp+0xfffe8850>
  2239b4:	d9002917 	ldw	r4,164(sp)
  2239b8:	2002c11e 	bne	r4,zero,2244c0 <___vfprintf_internal_r+0x1630>
  2239bc:	d8002915 	stw	zero,164(sp)
  2239c0:	d8002e15 	stw	zero,184(sp)
  2239c4:	dc001e04 	addi	r16,sp,120
  2239c8:	003ef806 	br	2235ac <_gp+0xfffe8a24>
  2239cc:	18c03fcc 	andi	r3,r3,255
  2239d0:	18059d1e 	bne	r3,zero,225048 <___vfprintf_internal_r+0x21b8>
  2239d4:	014008f4 	movhi	r5,35
  2239d8:	29434c04 	addi	r5,r5,3376
  2239dc:	d9403915 	stw	r5,228(sp)
  2239e0:	9080080c 	andi	r2,r18,32
  2239e4:	10005226 	beq	r2,zero,223b30 <___vfprintf_internal_r+0xca0>
  2239e8:	d8802d17 	ldw	r2,180(sp)
  2239ec:	14c00017 	ldw	r19,0(r2)
  2239f0:	15800117 	ldw	r22,4(r2)
  2239f4:	10800204 	addi	r2,r2,8
  2239f8:	d8802d15 	stw	r2,180(sp)
  2239fc:	9080004c 	andi	r2,r18,1
  223a00:	10019026 	beq	r2,zero,224044 <___vfprintf_internal_r+0x11b4>
  223a04:	9d84b03a 	or	r2,r19,r22
  223a08:	10036926 	beq	r2,zero,2247b0 <___vfprintf_internal_r+0x1920>
  223a0c:	d8c02917 	ldw	r3,164(sp)
  223a10:	00800c04 	movi	r2,48
  223a14:	d8802705 	stb	r2,156(sp)
  223a18:	dc402745 	stb	r17,157(sp)
  223a1c:	d8002785 	stb	zero,158(sp)
  223a20:	90800094 	ori	r2,r18,2
  223a24:	18045d16 	blt	r3,zero,224b9c <___vfprintf_internal_r+0x1d0c>
  223a28:	00bfdfc4 	movi	r2,-129
  223a2c:	90a4703a 	and	r18,r18,r2
  223a30:	94800094 	ori	r18,r18,2
  223a34:	0039883a 	mov	fp,zero
  223a38:	d9003917 	ldw	r4,228(sp)
  223a3c:	dc001e04 	addi	r16,sp,120
  223a40:	988003cc 	andi	r2,r19,15
  223a44:	b006973a 	slli	r3,r22,28
  223a48:	2085883a 	add	r2,r4,r2
  223a4c:	9826d13a 	srli	r19,r19,4
  223a50:	10800003 	ldbu	r2,0(r2)
  223a54:	b02cd13a 	srli	r22,r22,4
  223a58:	843fffc4 	addi	r16,r16,-1
  223a5c:	1ce6b03a 	or	r19,r3,r19
  223a60:	80800005 	stb	r2,0(r16)
  223a64:	9d84b03a 	or	r2,r19,r22
  223a68:	103ff51e 	bne	r2,zero,223a40 <_gp+0xfffe8eb8>
  223a6c:	d8c02817 	ldw	r3,160(sp)
  223a70:	1c07c83a 	sub	r3,r3,r16
  223a74:	d8c02e15 	stw	r3,184(sp)
  223a78:	003ecc06 	br	2235ac <_gp+0xfffe8a24>
  223a7c:	18c03fcc 	andi	r3,r3,255
  223a80:	183e9f26 	beq	r3,zero,223500 <_gp+0xfffe8978>
  223a84:	d9c02785 	stb	r7,158(sp)
  223a88:	003e9d06 	br	223500 <_gp+0xfffe8978>
  223a8c:	00c00044 	movi	r3,1
  223a90:	01c00ac4 	movi	r7,43
  223a94:	ac400007 	ldb	r17,0(r21)
  223a98:	003d5e06 	br	223014 <_gp+0xfffe848c>
  223a9c:	94800814 	ori	r18,r18,32
  223aa0:	ac400007 	ldb	r17,0(r21)
  223aa4:	003d5b06 	br	223014 <_gp+0xfffe848c>
  223aa8:	d8c02d17 	ldw	r3,180(sp)
  223aac:	d8002785 	stb	zero,158(sp)
  223ab0:	1c000017 	ldw	r16,0(r3)
  223ab4:	1cc00104 	addi	r19,r3,4
  223ab8:	80041926 	beq	r16,zero,224b20 <___vfprintf_internal_r+0x1c90>
  223abc:	d9002917 	ldw	r4,164(sp)
  223ac0:	2003d016 	blt	r4,zero,224a04 <___vfprintf_internal_r+0x1b74>
  223ac4:	200d883a 	mov	r6,r4
  223ac8:	000b883a 	mov	r5,zero
  223acc:	8009883a 	mov	r4,r16
  223ad0:	da003d15 	stw	r8,244(sp)
  223ad4:	02272e80 	call	2272e8 <memchr>
  223ad8:	da003d17 	ldw	r8,244(sp)
  223adc:	10045426 	beq	r2,zero,224c30 <___vfprintf_internal_r+0x1da0>
  223ae0:	1405c83a 	sub	r2,r2,r16
  223ae4:	d8802e15 	stw	r2,184(sp)
  223ae8:	1003cc16 	blt	r2,zero,224a1c <___vfprintf_internal_r+0x1b8c>
  223aec:	df002783 	ldbu	fp,158(sp)
  223af0:	d8802a15 	stw	r2,168(sp)
  223af4:	dcc02d15 	stw	r19,180(sp)
  223af8:	d8002915 	stw	zero,164(sp)
  223afc:	d8003215 	stw	zero,200(sp)
  223b00:	003eb006 	br	2235c4 <_gp+0xfffe8a3c>
  223b04:	18c03fcc 	andi	r3,r3,255
  223b08:	183f9b26 	beq	r3,zero,223978 <_gp+0xfffe8df0>
  223b0c:	d9c02785 	stb	r7,158(sp)
  223b10:	003f9906 	br	223978 <_gp+0xfffe8df0>
  223b14:	18c03fcc 	andi	r3,r3,255
  223b18:	1805551e 	bne	r3,zero,225070 <___vfprintf_internal_r+0x21e0>
  223b1c:	014008f4 	movhi	r5,35
  223b20:	29435104 	addi	r5,r5,3396
  223b24:	d9403915 	stw	r5,228(sp)
  223b28:	9080080c 	andi	r2,r18,32
  223b2c:	103fae1e 	bne	r2,zero,2239e8 <_gp+0xfffe8e60>
  223b30:	9080040c 	andi	r2,r18,16
  223b34:	1002de26 	beq	r2,zero,2246b0 <___vfprintf_internal_r+0x1820>
  223b38:	d8c02d17 	ldw	r3,180(sp)
  223b3c:	002d883a 	mov	r22,zero
  223b40:	1cc00017 	ldw	r19,0(r3)
  223b44:	18c00104 	addi	r3,r3,4
  223b48:	d8c02d15 	stw	r3,180(sp)
  223b4c:	003fab06 	br	2239fc <_gp+0xfffe8e74>
  223b50:	38803fcc 	andi	r2,r7,255
  223b54:	1080201c 	xori	r2,r2,128
  223b58:	10bfe004 	addi	r2,r2,-128
  223b5c:	1002d21e 	bne	r2,zero,2246a8 <___vfprintf_internal_r+0x1818>
  223b60:	00c00044 	movi	r3,1
  223b64:	01c00804 	movi	r7,32
  223b68:	ac400007 	ldb	r17,0(r21)
  223b6c:	003d2906 	br	223014 <_gp+0xfffe848c>
  223b70:	94800054 	ori	r18,r18,1
  223b74:	ac400007 	ldb	r17,0(r21)
  223b78:	003d2606 	br	223014 <_gp+0xfffe848c>
  223b7c:	18c03fcc 	andi	r3,r3,255
  223b80:	183e0526 	beq	r3,zero,223398 <_gp+0xfffe8810>
  223b84:	d9c02785 	stb	r7,158(sp)
  223b88:	003e0306 	br	223398 <_gp+0xfffe8810>
  223b8c:	94801014 	ori	r18,r18,64
  223b90:	ac400007 	ldb	r17,0(r21)
  223b94:	003d1f06 	br	223014 <_gp+0xfffe848c>
  223b98:	ac400007 	ldb	r17,0(r21)
  223b9c:	8a438726 	beq	r17,r9,2249bc <___vfprintf_internal_r+0x1b2c>
  223ba0:	94800414 	ori	r18,r18,16
  223ba4:	003d1b06 	br	223014 <_gp+0xfffe848c>
  223ba8:	18c03fcc 	andi	r3,r3,255
  223bac:	1805341e 	bne	r3,zero,225080 <___vfprintf_internal_r+0x21f0>
  223bb0:	9080080c 	andi	r2,r18,32
  223bb4:	1002cd26 	beq	r2,zero,2246ec <___vfprintf_internal_r+0x185c>
  223bb8:	d9402d17 	ldw	r5,180(sp)
  223bbc:	d9002f17 	ldw	r4,188(sp)
  223bc0:	28800017 	ldw	r2,0(r5)
  223bc4:	2007d7fa 	srai	r3,r4,31
  223bc8:	29400104 	addi	r5,r5,4
  223bcc:	d9402d15 	stw	r5,180(sp)
  223bd0:	11000015 	stw	r4,0(r2)
  223bd4:	10c00115 	stw	r3,4(r2)
  223bd8:	003ce506 	br	222f70 <_gp+0xfffe83e8>
  223bdc:	d8c02d17 	ldw	r3,180(sp)
  223be0:	d9002d17 	ldw	r4,180(sp)
  223be4:	d8002785 	stb	zero,158(sp)
  223be8:	18800017 	ldw	r2,0(r3)
  223bec:	21000104 	addi	r4,r4,4
  223bf0:	00c00044 	movi	r3,1
  223bf4:	d8c02a15 	stw	r3,168(sp)
  223bf8:	d8801405 	stb	r2,80(sp)
  223bfc:	d9002d15 	stw	r4,180(sp)
  223c00:	d8c02e15 	stw	r3,184(sp)
  223c04:	d8002915 	stw	zero,164(sp)
  223c08:	d8003215 	stw	zero,200(sp)
  223c0c:	dc001404 	addi	r16,sp,80
  223c10:	0039883a 	mov	fp,zero
  223c14:	003e7206 	br	2235e0 <_gp+0xfffe8a58>
  223c18:	010008f4 	movhi	r4,35
  223c1c:	21035104 	addi	r4,r4,3396
  223c20:	0039883a 	mov	fp,zero
  223c24:	d9003915 	stw	r4,228(sp)
  223c28:	04401e04 	movi	r17,120
  223c2c:	003f8206 	br	223a38 <_gp+0xfffe8eb0>
  223c30:	18c03fcc 	andi	r3,r3,255
  223c34:	1805061e 	bne	r3,zero,225050 <___vfprintf_internal_r+0x21c0>
  223c38:	883d9126 	beq	r17,zero,223280 <_gp+0xfffe86f8>
  223c3c:	00c00044 	movi	r3,1
  223c40:	d8c02a15 	stw	r3,168(sp)
  223c44:	dc401405 	stb	r17,80(sp)
  223c48:	d8002785 	stb	zero,158(sp)
  223c4c:	003fec06 	br	223c00 <_gp+0xfffe9078>
  223c50:	014008f4 	movhi	r5,35
  223c54:	29435104 	addi	r5,r5,3396
  223c58:	d9403915 	stw	r5,228(sp)
  223c5c:	d8c02d15 	stw	r3,180(sp)
  223c60:	1025883a 	mov	r18,r2
  223c64:	04401e04 	movi	r17,120
  223c68:	9d84b03a 	or	r2,r19,r22
  223c6c:	1000fc1e 	bne	r2,zero,224060 <___vfprintf_internal_r+0x11d0>
  223c70:	0039883a 	mov	fp,zero
  223c74:	00800084 	movi	r2,2
  223c78:	10803fcc 	andi	r2,r2,255
  223c7c:	00c00044 	movi	r3,1
  223c80:	10c20f26 	beq	r2,r3,2244c0 <___vfprintf_internal_r+0x1630>
  223c84:	00c00084 	movi	r3,2
  223c88:	10fd6326 	beq	r2,r3,223218 <_gp+0xfffe8690>
  223c8c:	003e2d06 	br	223544 <_gp+0xfffe89bc>
  223c90:	d8c02017 	ldw	r3,128(sp)
  223c94:	003e9306 	br	2236e4 <_gp+0xfffe8b5c>
  223c98:	00801944 	movi	r2,101
  223c9c:	14407e0e 	bge	r2,r17,223e98 <___vfprintf_internal_r+0x1008>
  223ca0:	d9003617 	ldw	r4,216(sp)
  223ca4:	d9403817 	ldw	r5,224(sp)
  223ca8:	000d883a 	mov	r6,zero
  223cac:	000f883a 	mov	r7,zero
  223cb0:	d8c03c15 	stw	r3,240(sp)
  223cb4:	da003d15 	stw	r8,244(sp)
  223cb8:	022c7cc0 	call	22c7cc <__eqdf2>
  223cbc:	d8c03c17 	ldw	r3,240(sp)
  223cc0:	da003d17 	ldw	r8,244(sp)
  223cc4:	1000f71e 	bne	r2,zero,2240a4 <___vfprintf_internal_r+0x1214>
  223cc8:	d8801f17 	ldw	r2,124(sp)
  223ccc:	010008f4 	movhi	r4,35
  223cd0:	21035804 	addi	r4,r4,3424
  223cd4:	18c00044 	addi	r3,r3,1
  223cd8:	10800044 	addi	r2,r2,1
  223cdc:	41000015 	stw	r4,0(r8)
  223ce0:	01000044 	movi	r4,1
  223ce4:	41000115 	stw	r4,4(r8)
  223ce8:	d8c02015 	stw	r3,128(sp)
  223cec:	d8801f15 	stw	r2,124(sp)
  223cf0:	010001c4 	movi	r4,7
  223cf4:	2082b816 	blt	r4,r2,2247d8 <___vfprintf_internal_r+0x1948>
  223cf8:	42000204 	addi	r8,r8,8
  223cfc:	d8802617 	ldw	r2,152(sp)
  223d00:	d9403317 	ldw	r5,204(sp)
  223d04:	11400216 	blt	r2,r5,223d10 <___vfprintf_internal_r+0xe80>
  223d08:	9080004c 	andi	r2,r18,1
  223d0c:	103ed526 	beq	r2,zero,223864 <_gp+0xfffe8cdc>
  223d10:	d8803717 	ldw	r2,220(sp)
  223d14:	d9003417 	ldw	r4,208(sp)
  223d18:	d9403717 	ldw	r5,220(sp)
  223d1c:	1887883a 	add	r3,r3,r2
  223d20:	d8801f17 	ldw	r2,124(sp)
  223d24:	41000015 	stw	r4,0(r8)
  223d28:	41400115 	stw	r5,4(r8)
  223d2c:	10800044 	addi	r2,r2,1
  223d30:	d8c02015 	stw	r3,128(sp)
  223d34:	d8801f15 	stw	r2,124(sp)
  223d38:	010001c4 	movi	r4,7
  223d3c:	20832916 	blt	r4,r2,2249e4 <___vfprintf_internal_r+0x1b54>
  223d40:	42000204 	addi	r8,r8,8
  223d44:	d8803317 	ldw	r2,204(sp)
  223d48:	143fffc4 	addi	r16,r2,-1
  223d4c:	043ec50e 	bge	zero,r16,223864 <_gp+0xfffe8cdc>
  223d50:	04400404 	movi	r17,16
  223d54:	d8801f17 	ldw	r2,124(sp)
  223d58:	8c00880e 	bge	r17,r16,223f7c <___vfprintf_internal_r+0x10ec>
  223d5c:	014008f4 	movhi	r5,35
  223d60:	29435884 	addi	r5,r5,3426
  223d64:	d9402b15 	stw	r5,172(sp)
  223d68:	058001c4 	movi	r22,7
  223d6c:	dcc02c17 	ldw	r19,176(sp)
  223d70:	00000306 	br	223d80 <___vfprintf_internal_r+0xef0>
  223d74:	42000204 	addi	r8,r8,8
  223d78:	843ffc04 	addi	r16,r16,-16
  223d7c:	8c00820e 	bge	r17,r16,223f88 <___vfprintf_internal_r+0x10f8>
  223d80:	18c00404 	addi	r3,r3,16
  223d84:	10800044 	addi	r2,r2,1
  223d88:	45000015 	stw	r20,0(r8)
  223d8c:	44400115 	stw	r17,4(r8)
  223d90:	d8c02015 	stw	r3,128(sp)
  223d94:	d8801f15 	stw	r2,124(sp)
  223d98:	b0bff60e 	bge	r22,r2,223d74 <_gp+0xfffe91ec>
  223d9c:	d9801e04 	addi	r6,sp,120
  223da0:	b80b883a 	mov	r5,r23
  223da4:	9809883a 	mov	r4,r19
  223da8:	0228e7c0 	call	228e7c <__sprint_r>
  223dac:	103d3a1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  223db0:	d8c02017 	ldw	r3,128(sp)
  223db4:	d8801f17 	ldw	r2,124(sp)
  223db8:	da000404 	addi	r8,sp,16
  223dbc:	003fee06 	br	223d78 <_gp+0xfffe91f0>
  223dc0:	d9403117 	ldw	r5,196(sp)
  223dc4:	d8802a17 	ldw	r2,168(sp)
  223dc8:	28adc83a 	sub	r22,r5,r2
  223dcc:	05be630e 	bge	zero,r22,22375c <_gp+0xfffe8bd4>
  223dd0:	07000404 	movi	fp,16
  223dd4:	d8801f17 	ldw	r2,124(sp)
  223dd8:	e5838f0e 	bge	fp,r22,224c18 <___vfprintf_internal_r+0x1d88>
  223ddc:	014008f4 	movhi	r5,35
  223de0:	29435884 	addi	r5,r5,3426
  223de4:	dc403015 	stw	r17,192(sp)
  223de8:	d9402b15 	stw	r5,172(sp)
  223dec:	b023883a 	mov	r17,r22
  223df0:	04c001c4 	movi	r19,7
  223df4:	a82d883a 	mov	r22,r21
  223df8:	902b883a 	mov	r21,r18
  223dfc:	8025883a 	mov	r18,r16
  223e00:	dc002c17 	ldw	r16,176(sp)
  223e04:	00000306 	br	223e14 <___vfprintf_internal_r+0xf84>
  223e08:	8c7ffc04 	addi	r17,r17,-16
  223e0c:	42000204 	addi	r8,r8,8
  223e10:	e440110e 	bge	fp,r17,223e58 <___vfprintf_internal_r+0xfc8>
  223e14:	18c00404 	addi	r3,r3,16
  223e18:	10800044 	addi	r2,r2,1
  223e1c:	45000015 	stw	r20,0(r8)
  223e20:	47000115 	stw	fp,4(r8)
  223e24:	d8c02015 	stw	r3,128(sp)
  223e28:	d8801f15 	stw	r2,124(sp)
  223e2c:	98bff60e 	bge	r19,r2,223e08 <_gp+0xfffe9280>
  223e30:	d9801e04 	addi	r6,sp,120
  223e34:	b80b883a 	mov	r5,r23
  223e38:	8009883a 	mov	r4,r16
  223e3c:	0228e7c0 	call	228e7c <__sprint_r>
  223e40:	103d151e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  223e44:	8c7ffc04 	addi	r17,r17,-16
  223e48:	d8c02017 	ldw	r3,128(sp)
  223e4c:	d8801f17 	ldw	r2,124(sp)
  223e50:	da000404 	addi	r8,sp,16
  223e54:	e47fef16 	blt	fp,r17,223e14 <_gp+0xfffe928c>
  223e58:	9021883a 	mov	r16,r18
  223e5c:	a825883a 	mov	r18,r21
  223e60:	b02b883a 	mov	r21,r22
  223e64:	882d883a 	mov	r22,r17
  223e68:	dc403017 	ldw	r17,192(sp)
  223e6c:	d9002b17 	ldw	r4,172(sp)
  223e70:	1d87883a 	add	r3,r3,r22
  223e74:	10800044 	addi	r2,r2,1
  223e78:	41000015 	stw	r4,0(r8)
  223e7c:	45800115 	stw	r22,4(r8)
  223e80:	d8c02015 	stw	r3,128(sp)
  223e84:	d8801f15 	stw	r2,124(sp)
  223e88:	010001c4 	movi	r4,7
  223e8c:	20818e16 	blt	r4,r2,2244c8 <___vfprintf_internal_r+0x1638>
  223e90:	42000204 	addi	r8,r8,8
  223e94:	003e3106 	br	22375c <_gp+0xfffe8bd4>
  223e98:	d9403317 	ldw	r5,204(sp)
  223e9c:	00800044 	movi	r2,1
  223ea0:	18c00044 	addi	r3,r3,1
  223ea4:	1141530e 	bge	r2,r5,2243f4 <___vfprintf_internal_r+0x1564>
  223ea8:	dc401f17 	ldw	r17,124(sp)
  223eac:	00800044 	movi	r2,1
  223eb0:	40800115 	stw	r2,4(r8)
  223eb4:	8c400044 	addi	r17,r17,1
  223eb8:	44000015 	stw	r16,0(r8)
  223ebc:	d8c02015 	stw	r3,128(sp)
  223ec0:	dc401f15 	stw	r17,124(sp)
  223ec4:	008001c4 	movi	r2,7
  223ec8:	14416b16 	blt	r2,r17,224478 <___vfprintf_internal_r+0x15e8>
  223ecc:	42000204 	addi	r8,r8,8
  223ed0:	d8803717 	ldw	r2,220(sp)
  223ed4:	d9003417 	ldw	r4,208(sp)
  223ed8:	8c400044 	addi	r17,r17,1
  223edc:	10c7883a 	add	r3,r2,r3
  223ee0:	40800115 	stw	r2,4(r8)
  223ee4:	41000015 	stw	r4,0(r8)
  223ee8:	d8c02015 	stw	r3,128(sp)
  223eec:	dc401f15 	stw	r17,124(sp)
  223ef0:	008001c4 	movi	r2,7
  223ef4:	14416916 	blt	r2,r17,22449c <___vfprintf_internal_r+0x160c>
  223ef8:	45800204 	addi	r22,r8,8
  223efc:	d9003617 	ldw	r4,216(sp)
  223f00:	d9403817 	ldw	r5,224(sp)
  223f04:	000d883a 	mov	r6,zero
  223f08:	000f883a 	mov	r7,zero
  223f0c:	d8c03c15 	stw	r3,240(sp)
  223f10:	022c7cc0 	call	22c7cc <__eqdf2>
  223f14:	d8c03c17 	ldw	r3,240(sp)
  223f18:	1000bc26 	beq	r2,zero,22420c <___vfprintf_internal_r+0x137c>
  223f1c:	d9403317 	ldw	r5,204(sp)
  223f20:	84000044 	addi	r16,r16,1
  223f24:	8c400044 	addi	r17,r17,1
  223f28:	28bfffc4 	addi	r2,r5,-1
  223f2c:	1887883a 	add	r3,r3,r2
  223f30:	b0800115 	stw	r2,4(r22)
  223f34:	b4000015 	stw	r16,0(r22)
  223f38:	d8c02015 	stw	r3,128(sp)
  223f3c:	dc401f15 	stw	r17,124(sp)
  223f40:	008001c4 	movi	r2,7
  223f44:	14414316 	blt	r2,r17,224454 <___vfprintf_internal_r+0x15c4>
  223f48:	b5800204 	addi	r22,r22,8
  223f4c:	d9003a17 	ldw	r4,232(sp)
  223f50:	df0022c4 	addi	fp,sp,139
  223f54:	8c400044 	addi	r17,r17,1
  223f58:	20c7883a 	add	r3,r4,r3
  223f5c:	b7000015 	stw	fp,0(r22)
  223f60:	b1000115 	stw	r4,4(r22)
  223f64:	d8c02015 	stw	r3,128(sp)
  223f68:	dc401f15 	stw	r17,124(sp)
  223f6c:	008001c4 	movi	r2,7
  223f70:	14400e16 	blt	r2,r17,223fac <___vfprintf_internal_r+0x111c>
  223f74:	b2000204 	addi	r8,r22,8
  223f78:	003e3a06 	br	223864 <_gp+0xfffe8cdc>
  223f7c:	010008f4 	movhi	r4,35
  223f80:	21035884 	addi	r4,r4,3426
  223f84:	d9002b15 	stw	r4,172(sp)
  223f88:	d9002b17 	ldw	r4,172(sp)
  223f8c:	1c07883a 	add	r3,r3,r16
  223f90:	44000115 	stw	r16,4(r8)
  223f94:	41000015 	stw	r4,0(r8)
  223f98:	10800044 	addi	r2,r2,1
  223f9c:	d8c02015 	stw	r3,128(sp)
  223fa0:	d8801f15 	stw	r2,124(sp)
  223fa4:	010001c4 	movi	r4,7
  223fa8:	20be2d0e 	bge	r4,r2,223860 <_gp+0xfffe8cd8>
  223fac:	d9002c17 	ldw	r4,176(sp)
  223fb0:	d9801e04 	addi	r6,sp,120
  223fb4:	b80b883a 	mov	r5,r23
  223fb8:	0228e7c0 	call	228e7c <__sprint_r>
  223fbc:	103cb61e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  223fc0:	d8c02017 	ldw	r3,128(sp)
  223fc4:	da000404 	addi	r8,sp,16
  223fc8:	003e2606 	br	223864 <_gp+0xfffe8cdc>
  223fcc:	d9002c17 	ldw	r4,176(sp)
  223fd0:	d9801e04 	addi	r6,sp,120
  223fd4:	b80b883a 	mov	r5,r23
  223fd8:	0228e7c0 	call	228e7c <__sprint_r>
  223fdc:	103e5d26 	beq	r2,zero,223954 <_gp+0xfffe8dcc>
  223fe0:	003cad06 	br	223298 <_gp+0xfffe8710>
  223fe4:	d9002c17 	ldw	r4,176(sp)
  223fe8:	d9801e04 	addi	r6,sp,120
  223fec:	b80b883a 	mov	r5,r23
  223ff0:	0228e7c0 	call	228e7c <__sprint_r>
  223ff4:	103ca81e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  223ff8:	d8c02017 	ldw	r3,128(sp)
  223ffc:	da000404 	addi	r8,sp,16
  224000:	003e0b06 	br	223830 <_gp+0xfffe8ca8>
  224004:	d9002c17 	ldw	r4,176(sp)
  224008:	d9801e04 	addi	r6,sp,120
  22400c:	b80b883a 	mov	r5,r23
  224010:	0228e7c0 	call	228e7c <__sprint_r>
  224014:	103ca01e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224018:	d8c02017 	ldw	r3,128(sp)
  22401c:	da000404 	addi	r8,sp,16
  224020:	003dbd06 	br	223718 <_gp+0xfffe8b90>
  224024:	d9002c17 	ldw	r4,176(sp)
  224028:	d9801e04 	addi	r6,sp,120
  22402c:	b80b883a 	mov	r5,r23
  224030:	0228e7c0 	call	228e7c <__sprint_r>
  224034:	103c981e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224038:	d8c02017 	ldw	r3,128(sp)
  22403c:	da000404 	addi	r8,sp,16
  224040:	003dc306 	br	223750 <_gp+0xfffe8bc8>
  224044:	d8802917 	ldw	r2,164(sp)
  224048:	d8002785 	stb	zero,158(sp)
  22404c:	103f0616 	blt	r2,zero,223c68 <_gp+0xfffe90e0>
  224050:	00ffdfc4 	movi	r3,-129
  224054:	9d84b03a 	or	r2,r19,r22
  224058:	90e4703a 	and	r18,r18,r3
  22405c:	103c6b26 	beq	r2,zero,22320c <_gp+0xfffe8684>
  224060:	0039883a 	mov	fp,zero
  224064:	003e7406 	br	223a38 <_gp+0xfffe8eb0>
  224068:	9080040c 	andi	r2,r18,16
  22406c:	1001b326 	beq	r2,zero,22473c <___vfprintf_internal_r+0x18ac>
  224070:	d9002d17 	ldw	r4,180(sp)
  224074:	d9402917 	ldw	r5,164(sp)
  224078:	d8002785 	stb	zero,158(sp)
  22407c:	20800104 	addi	r2,r4,4
  224080:	24c00017 	ldw	r19,0(r4)
  224084:	002d883a 	mov	r22,zero
  224088:	2801b516 	blt	r5,zero,224760 <___vfprintf_internal_r+0x18d0>
  22408c:	00ffdfc4 	movi	r3,-129
  224090:	d8802d15 	stw	r2,180(sp)
  224094:	90e4703a 	and	r18,r18,r3
  224098:	983d2726 	beq	r19,zero,223538 <_gp+0xfffe89b0>
  22409c:	0039883a 	mov	fp,zero
  2240a0:	003d2a06 	br	22354c <_gp+0xfffe89c4>
  2240a4:	dc402617 	ldw	r17,152(sp)
  2240a8:	0441d30e 	bge	zero,r17,2247f8 <___vfprintf_internal_r+0x1968>
  2240ac:	dc403217 	ldw	r17,200(sp)
  2240b0:	d8803317 	ldw	r2,204(sp)
  2240b4:	1440010e 	bge	r2,r17,2240bc <___vfprintf_internal_r+0x122c>
  2240b8:	1023883a 	mov	r17,r2
  2240bc:	04400a0e 	bge	zero,r17,2240e8 <___vfprintf_internal_r+0x1258>
  2240c0:	d8801f17 	ldw	r2,124(sp)
  2240c4:	1c47883a 	add	r3,r3,r17
  2240c8:	44000015 	stw	r16,0(r8)
  2240cc:	10800044 	addi	r2,r2,1
  2240d0:	44400115 	stw	r17,4(r8)
  2240d4:	d8c02015 	stw	r3,128(sp)
  2240d8:	d8801f15 	stw	r2,124(sp)
  2240dc:	010001c4 	movi	r4,7
  2240e0:	20826516 	blt	r4,r2,224a78 <___vfprintf_internal_r+0x1be8>
  2240e4:	42000204 	addi	r8,r8,8
  2240e8:	88026116 	blt	r17,zero,224a70 <___vfprintf_internal_r+0x1be0>
  2240ec:	d9003217 	ldw	r4,200(sp)
  2240f0:	2463c83a 	sub	r17,r4,r17
  2240f4:	04407b0e 	bge	zero,r17,2242e4 <___vfprintf_internal_r+0x1454>
  2240f8:	05800404 	movi	r22,16
  2240fc:	d8801f17 	ldw	r2,124(sp)
  224100:	b4419d0e 	bge	r22,r17,224778 <___vfprintf_internal_r+0x18e8>
  224104:	010008f4 	movhi	r4,35
  224108:	21035884 	addi	r4,r4,3426
  22410c:	d9002b15 	stw	r4,172(sp)
  224110:	070001c4 	movi	fp,7
  224114:	dcc02c17 	ldw	r19,176(sp)
  224118:	00000306 	br	224128 <___vfprintf_internal_r+0x1298>
  22411c:	42000204 	addi	r8,r8,8
  224120:	8c7ffc04 	addi	r17,r17,-16
  224124:	b441970e 	bge	r22,r17,224784 <___vfprintf_internal_r+0x18f4>
  224128:	18c00404 	addi	r3,r3,16
  22412c:	10800044 	addi	r2,r2,1
  224130:	45000015 	stw	r20,0(r8)
  224134:	45800115 	stw	r22,4(r8)
  224138:	d8c02015 	stw	r3,128(sp)
  22413c:	d8801f15 	stw	r2,124(sp)
  224140:	e0bff60e 	bge	fp,r2,22411c <_gp+0xfffe9594>
  224144:	d9801e04 	addi	r6,sp,120
  224148:	b80b883a 	mov	r5,r23
  22414c:	9809883a 	mov	r4,r19
  224150:	0228e7c0 	call	228e7c <__sprint_r>
  224154:	103c501e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224158:	d8c02017 	ldw	r3,128(sp)
  22415c:	d8801f17 	ldw	r2,124(sp)
  224160:	da000404 	addi	r8,sp,16
  224164:	003fee06 	br	224120 <_gp+0xfffe9598>
  224168:	d9002c17 	ldw	r4,176(sp)
  22416c:	d9801e04 	addi	r6,sp,120
  224170:	b80b883a 	mov	r5,r23
  224174:	0228e7c0 	call	228e7c <__sprint_r>
  224178:	103c471e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  22417c:	d8c02017 	ldw	r3,128(sp)
  224180:	df002787 	ldb	fp,158(sp)
  224184:	da000404 	addi	r8,sp,16
  224188:	003d5606 	br	2236e4 <_gp+0xfffe8b5c>
  22418c:	9080040c 	andi	r2,r18,16
  224190:	10016126 	beq	r2,zero,224718 <___vfprintf_internal_r+0x1888>
  224194:	d8802d17 	ldw	r2,180(sp)
  224198:	14c00017 	ldw	r19,0(r2)
  22419c:	10800104 	addi	r2,r2,4
  2241a0:	d8802d15 	stw	r2,180(sp)
  2241a4:	982dd7fa 	srai	r22,r19,31
  2241a8:	b005883a 	mov	r2,r22
  2241ac:	003c8206 	br	2233b8 <_gp+0xfffe8830>
  2241b0:	9080040c 	andi	r2,r18,16
  2241b4:	10003526 	beq	r2,zero,22428c <___vfprintf_internal_r+0x13fc>
  2241b8:	d9402d17 	ldw	r5,180(sp)
  2241bc:	d8c02917 	ldw	r3,164(sp)
  2241c0:	d8002785 	stb	zero,158(sp)
  2241c4:	28800104 	addi	r2,r5,4
  2241c8:	2cc00017 	ldw	r19,0(r5)
  2241cc:	002d883a 	mov	r22,zero
  2241d0:	18003716 	blt	r3,zero,2242b0 <___vfprintf_internal_r+0x1420>
  2241d4:	00ffdfc4 	movi	r3,-129
  2241d8:	d8802d15 	stw	r2,180(sp)
  2241dc:	90e4703a 	and	r18,r18,r3
  2241e0:	0039883a 	mov	fp,zero
  2241e4:	983df326 	beq	r19,zero,2239b4 <_gp+0xfffe8e2c>
  2241e8:	00800244 	movi	r2,9
  2241ec:	14fc7b36 	bltu	r2,r19,2233dc <_gp+0xfffe8854>
  2241f0:	d8c02817 	ldw	r3,160(sp)
  2241f4:	dc001dc4 	addi	r16,sp,119
  2241f8:	9cc00c04 	addi	r19,r19,48
  2241fc:	1c07c83a 	sub	r3,r3,r16
  224200:	dcc01dc5 	stb	r19,119(sp)
  224204:	d8c02e15 	stw	r3,184(sp)
  224208:	003ce806 	br	2235ac <_gp+0xfffe8a24>
  22420c:	d8803317 	ldw	r2,204(sp)
  224210:	143fffc4 	addi	r16,r2,-1
  224214:	043f4d0e 	bge	zero,r16,223f4c <_gp+0xfffe93c4>
  224218:	07000404 	movi	fp,16
  22421c:	e400810e 	bge	fp,r16,224424 <___vfprintf_internal_r+0x1594>
  224220:	014008f4 	movhi	r5,35
  224224:	29435884 	addi	r5,r5,3426
  224228:	d9402b15 	stw	r5,172(sp)
  22422c:	01c001c4 	movi	r7,7
  224230:	dcc02c17 	ldw	r19,176(sp)
  224234:	00000306 	br	224244 <___vfprintf_internal_r+0x13b4>
  224238:	b5800204 	addi	r22,r22,8
  22423c:	843ffc04 	addi	r16,r16,-16
  224240:	e4007b0e 	bge	fp,r16,224430 <___vfprintf_internal_r+0x15a0>
  224244:	18c00404 	addi	r3,r3,16
  224248:	8c400044 	addi	r17,r17,1
  22424c:	b5000015 	stw	r20,0(r22)
  224250:	b7000115 	stw	fp,4(r22)
  224254:	d8c02015 	stw	r3,128(sp)
  224258:	dc401f15 	stw	r17,124(sp)
  22425c:	3c7ff60e 	bge	r7,r17,224238 <_gp+0xfffe96b0>
  224260:	d9801e04 	addi	r6,sp,120
  224264:	b80b883a 	mov	r5,r23
  224268:	9809883a 	mov	r4,r19
  22426c:	d9c03c15 	stw	r7,240(sp)
  224270:	0228e7c0 	call	228e7c <__sprint_r>
  224274:	d9c03c17 	ldw	r7,240(sp)
  224278:	103c071e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  22427c:	d8c02017 	ldw	r3,128(sp)
  224280:	dc401f17 	ldw	r17,124(sp)
  224284:	dd800404 	addi	r22,sp,16
  224288:	003fec06 	br	22423c <_gp+0xfffe96b4>
  22428c:	9080100c 	andi	r2,r18,64
  224290:	d8002785 	stb	zero,158(sp)
  224294:	10010e26 	beq	r2,zero,2246d0 <___vfprintf_internal_r+0x1840>
  224298:	d9002d17 	ldw	r4,180(sp)
  22429c:	d9402917 	ldw	r5,164(sp)
  2242a0:	002d883a 	mov	r22,zero
  2242a4:	20800104 	addi	r2,r4,4
  2242a8:	24c0000b 	ldhu	r19,0(r4)
  2242ac:	283fc90e 	bge	r5,zero,2241d4 <_gp+0xfffe964c>
  2242b0:	d8802d15 	stw	r2,180(sp)
  2242b4:	0039883a 	mov	fp,zero
  2242b8:	9d84b03a 	or	r2,r19,r22
  2242bc:	103c461e 	bne	r2,zero,2233d8 <_gp+0xfffe8850>
  2242c0:	00800044 	movi	r2,1
  2242c4:	003e6c06 	br	223c78 <_gp+0xfffe90f0>
  2242c8:	d9002c17 	ldw	r4,176(sp)
  2242cc:	d9801e04 	addi	r6,sp,120
  2242d0:	b80b883a 	mov	r5,r23
  2242d4:	0228e7c0 	call	228e7c <__sprint_r>
  2242d8:	103bef1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2242dc:	d8c02017 	ldw	r3,128(sp)
  2242e0:	da000404 	addi	r8,sp,16
  2242e4:	d9003217 	ldw	r4,200(sp)
  2242e8:	d8802617 	ldw	r2,152(sp)
  2242ec:	d9403317 	ldw	r5,204(sp)
  2242f0:	8123883a 	add	r17,r16,r4
  2242f4:	11400216 	blt	r2,r5,224300 <___vfprintf_internal_r+0x1470>
  2242f8:	9100004c 	andi	r4,r18,1
  2242fc:	20000d26 	beq	r4,zero,224334 <___vfprintf_internal_r+0x14a4>
  224300:	d9003717 	ldw	r4,220(sp)
  224304:	d9403417 	ldw	r5,208(sp)
  224308:	1907883a 	add	r3,r3,r4
  22430c:	d9001f17 	ldw	r4,124(sp)
  224310:	41400015 	stw	r5,0(r8)
  224314:	d9403717 	ldw	r5,220(sp)
  224318:	21000044 	addi	r4,r4,1
  22431c:	d8c02015 	stw	r3,128(sp)
  224320:	41400115 	stw	r5,4(r8)
  224324:	d9001f15 	stw	r4,124(sp)
  224328:	014001c4 	movi	r5,7
  22432c:	2901e816 	blt	r5,r4,224ad0 <___vfprintf_internal_r+0x1c40>
  224330:	42000204 	addi	r8,r8,8
  224334:	d9003317 	ldw	r4,204(sp)
  224338:	8121883a 	add	r16,r16,r4
  22433c:	2085c83a 	sub	r2,r4,r2
  224340:	8461c83a 	sub	r16,r16,r17
  224344:	1400010e 	bge	r2,r16,22434c <___vfprintf_internal_r+0x14bc>
  224348:	1021883a 	mov	r16,r2
  22434c:	04000a0e 	bge	zero,r16,224378 <___vfprintf_internal_r+0x14e8>
  224350:	d9001f17 	ldw	r4,124(sp)
  224354:	1c07883a 	add	r3,r3,r16
  224358:	44400015 	stw	r17,0(r8)
  22435c:	21000044 	addi	r4,r4,1
  224360:	44000115 	stw	r16,4(r8)
  224364:	d8c02015 	stw	r3,128(sp)
  224368:	d9001f15 	stw	r4,124(sp)
  22436c:	014001c4 	movi	r5,7
  224370:	2901fb16 	blt	r5,r4,224b60 <___vfprintf_internal_r+0x1cd0>
  224374:	42000204 	addi	r8,r8,8
  224378:	8001f716 	blt	r16,zero,224b58 <___vfprintf_internal_r+0x1cc8>
  22437c:	1421c83a 	sub	r16,r2,r16
  224380:	043d380e 	bge	zero,r16,223864 <_gp+0xfffe8cdc>
  224384:	04400404 	movi	r17,16
  224388:	d8801f17 	ldw	r2,124(sp)
  22438c:	8c3efb0e 	bge	r17,r16,223f7c <_gp+0xfffe93f4>
  224390:	014008f4 	movhi	r5,35
  224394:	29435884 	addi	r5,r5,3426
  224398:	d9402b15 	stw	r5,172(sp)
  22439c:	058001c4 	movi	r22,7
  2243a0:	dcc02c17 	ldw	r19,176(sp)
  2243a4:	00000306 	br	2243b4 <___vfprintf_internal_r+0x1524>
  2243a8:	42000204 	addi	r8,r8,8
  2243ac:	843ffc04 	addi	r16,r16,-16
  2243b0:	8c3ef50e 	bge	r17,r16,223f88 <_gp+0xfffe9400>
  2243b4:	18c00404 	addi	r3,r3,16
  2243b8:	10800044 	addi	r2,r2,1
  2243bc:	45000015 	stw	r20,0(r8)
  2243c0:	44400115 	stw	r17,4(r8)
  2243c4:	d8c02015 	stw	r3,128(sp)
  2243c8:	d8801f15 	stw	r2,124(sp)
  2243cc:	b0bff60e 	bge	r22,r2,2243a8 <_gp+0xfffe9820>
  2243d0:	d9801e04 	addi	r6,sp,120
  2243d4:	b80b883a 	mov	r5,r23
  2243d8:	9809883a 	mov	r4,r19
  2243dc:	0228e7c0 	call	228e7c <__sprint_r>
  2243e0:	103bad1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2243e4:	d8c02017 	ldw	r3,128(sp)
  2243e8:	d8801f17 	ldw	r2,124(sp)
  2243ec:	da000404 	addi	r8,sp,16
  2243f0:	003fee06 	br	2243ac <_gp+0xfffe9824>
  2243f4:	9088703a 	and	r4,r18,r2
  2243f8:	203eab1e 	bne	r4,zero,223ea8 <_gp+0xfffe9320>
  2243fc:	dc401f17 	ldw	r17,124(sp)
  224400:	40800115 	stw	r2,4(r8)
  224404:	44000015 	stw	r16,0(r8)
  224408:	8c400044 	addi	r17,r17,1
  22440c:	d8c02015 	stw	r3,128(sp)
  224410:	dc401f15 	stw	r17,124(sp)
  224414:	008001c4 	movi	r2,7
  224418:	14400e16 	blt	r2,r17,224454 <___vfprintf_internal_r+0x15c4>
  22441c:	45800204 	addi	r22,r8,8
  224420:	003eca06 	br	223f4c <_gp+0xfffe93c4>
  224424:	010008f4 	movhi	r4,35
  224428:	21035884 	addi	r4,r4,3426
  22442c:	d9002b15 	stw	r4,172(sp)
  224430:	d8802b17 	ldw	r2,172(sp)
  224434:	1c07883a 	add	r3,r3,r16
  224438:	8c400044 	addi	r17,r17,1
  22443c:	b0800015 	stw	r2,0(r22)
  224440:	b4000115 	stw	r16,4(r22)
  224444:	d8c02015 	stw	r3,128(sp)
  224448:	dc401f15 	stw	r17,124(sp)
  22444c:	008001c4 	movi	r2,7
  224450:	147ebd0e 	bge	r2,r17,223f48 <_gp+0xfffe93c0>
  224454:	d9002c17 	ldw	r4,176(sp)
  224458:	d9801e04 	addi	r6,sp,120
  22445c:	b80b883a 	mov	r5,r23
  224460:	0228e7c0 	call	228e7c <__sprint_r>
  224464:	103b8c1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224468:	d8c02017 	ldw	r3,128(sp)
  22446c:	dc401f17 	ldw	r17,124(sp)
  224470:	dd800404 	addi	r22,sp,16
  224474:	003eb506 	br	223f4c <_gp+0xfffe93c4>
  224478:	d9002c17 	ldw	r4,176(sp)
  22447c:	d9801e04 	addi	r6,sp,120
  224480:	b80b883a 	mov	r5,r23
  224484:	0228e7c0 	call	228e7c <__sprint_r>
  224488:	103b831e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  22448c:	d8c02017 	ldw	r3,128(sp)
  224490:	dc401f17 	ldw	r17,124(sp)
  224494:	da000404 	addi	r8,sp,16
  224498:	003e8d06 	br	223ed0 <_gp+0xfffe9348>
  22449c:	d9002c17 	ldw	r4,176(sp)
  2244a0:	d9801e04 	addi	r6,sp,120
  2244a4:	b80b883a 	mov	r5,r23
  2244a8:	0228e7c0 	call	228e7c <__sprint_r>
  2244ac:	103b7a1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2244b0:	d8c02017 	ldw	r3,128(sp)
  2244b4:	dc401f17 	ldw	r17,124(sp)
  2244b8:	dd800404 	addi	r22,sp,16
  2244bc:	003e8f06 	br	223efc <_gp+0xfffe9374>
  2244c0:	0027883a 	mov	r19,zero
  2244c4:	003f4a06 	br	2241f0 <_gp+0xfffe9668>
  2244c8:	d9002c17 	ldw	r4,176(sp)
  2244cc:	d9801e04 	addi	r6,sp,120
  2244d0:	b80b883a 	mov	r5,r23
  2244d4:	0228e7c0 	call	228e7c <__sprint_r>
  2244d8:	103b6f1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2244dc:	d8c02017 	ldw	r3,128(sp)
  2244e0:	da000404 	addi	r8,sp,16
  2244e4:	003c9d06 	br	22375c <_gp+0xfffe8bd4>
  2244e8:	04e7c83a 	sub	r19,zero,r19
  2244ec:	9804c03a 	cmpne	r2,r19,zero
  2244f0:	05adc83a 	sub	r22,zero,r22
  2244f4:	b0adc83a 	sub	r22,r22,r2
  2244f8:	d8802917 	ldw	r2,164(sp)
  2244fc:	07000b44 	movi	fp,45
  224500:	df002785 	stb	fp,158(sp)
  224504:	10017b16 	blt	r2,zero,224af4 <___vfprintf_internal_r+0x1c64>
  224508:	00bfdfc4 	movi	r2,-129
  22450c:	90a4703a 	and	r18,r18,r2
  224510:	003bb106 	br	2233d8 <_gp+0xfffe8850>
  224514:	d9003617 	ldw	r4,216(sp)
  224518:	d9403817 	ldw	r5,224(sp)
  22451c:	da003d15 	stw	r8,244(sp)
  224520:	0228c300 	call	228c30 <__fpclassifyd>
  224524:	da003d17 	ldw	r8,244(sp)
  224528:	1000f026 	beq	r2,zero,2248ec <___vfprintf_internal_r+0x1a5c>
  22452c:	d9002917 	ldw	r4,164(sp)
  224530:	05bff7c4 	movi	r22,-33
  224534:	00bfffc4 	movi	r2,-1
  224538:	8dac703a 	and	r22,r17,r22
  22453c:	20820026 	beq	r4,r2,224d40 <___vfprintf_internal_r+0x1eb0>
  224540:	008011c4 	movi	r2,71
  224544:	b081f726 	beq	r22,r2,224d24 <___vfprintf_internal_r+0x1e94>
  224548:	d9003817 	ldw	r4,224(sp)
  22454c:	90c04014 	ori	r3,r18,256
  224550:	d8c02b15 	stw	r3,172(sp)
  224554:	20021516 	blt	r4,zero,224dac <___vfprintf_internal_r+0x1f1c>
  224558:	dcc03817 	ldw	r19,224(sp)
  22455c:	d8002a05 	stb	zero,168(sp)
  224560:	00801984 	movi	r2,102
  224564:	8881f926 	beq	r17,r2,224d4c <___vfprintf_internal_r+0x1ebc>
  224568:	00801184 	movi	r2,70
  22456c:	88821c26 	beq	r17,r2,224de0 <___vfprintf_internal_r+0x1f50>
  224570:	00801144 	movi	r2,69
  224574:	b081ef26 	beq	r22,r2,224d34 <___vfprintf_internal_r+0x1ea4>
  224578:	d8c02917 	ldw	r3,164(sp)
  22457c:	d8802104 	addi	r2,sp,132
  224580:	d8800315 	stw	r2,12(sp)
  224584:	d9403617 	ldw	r5,216(sp)
  224588:	d8802504 	addi	r2,sp,148
  22458c:	d9002c17 	ldw	r4,176(sp)
  224590:	d8800215 	stw	r2,8(sp)
  224594:	d8802604 	addi	r2,sp,152
  224598:	d8c00015 	stw	r3,0(sp)
  22459c:	d8800115 	stw	r2,4(sp)
  2245a0:	01c00084 	movi	r7,2
  2245a4:	980d883a 	mov	r6,r19
  2245a8:	d8c03c15 	stw	r3,240(sp)
  2245ac:	da003d15 	stw	r8,244(sp)
  2245b0:	02255680 	call	225568 <_dtoa_r>
  2245b4:	1021883a 	mov	r16,r2
  2245b8:	008019c4 	movi	r2,103
  2245bc:	d8c03c17 	ldw	r3,240(sp)
  2245c0:	da003d17 	ldw	r8,244(sp)
  2245c4:	88817126 	beq	r17,r2,224b8c <___vfprintf_internal_r+0x1cfc>
  2245c8:	008011c4 	movi	r2,71
  2245cc:	88829226 	beq	r17,r2,225018 <___vfprintf_internal_r+0x2188>
  2245d0:	80f9883a 	add	fp,r16,r3
  2245d4:	d9003617 	ldw	r4,216(sp)
  2245d8:	000d883a 	mov	r6,zero
  2245dc:	000f883a 	mov	r7,zero
  2245e0:	980b883a 	mov	r5,r19
  2245e4:	da003d15 	stw	r8,244(sp)
  2245e8:	022c7cc0 	call	22c7cc <__eqdf2>
  2245ec:	da003d17 	ldw	r8,244(sp)
  2245f0:	10018d26 	beq	r2,zero,224c28 <___vfprintf_internal_r+0x1d98>
  2245f4:	d8802117 	ldw	r2,132(sp)
  2245f8:	1700062e 	bgeu	r2,fp,224614 <___vfprintf_internal_r+0x1784>
  2245fc:	01000c04 	movi	r4,48
  224600:	10c00044 	addi	r3,r2,1
  224604:	d8c02115 	stw	r3,132(sp)
  224608:	11000005 	stb	r4,0(r2)
  22460c:	d8802117 	ldw	r2,132(sp)
  224610:	173ffb36 	bltu	r2,fp,224600 <_gp+0xfffe9a78>
  224614:	1405c83a 	sub	r2,r2,r16
  224618:	d8803315 	stw	r2,204(sp)
  22461c:	008011c4 	movi	r2,71
  224620:	b0817626 	beq	r22,r2,224bfc <___vfprintf_internal_r+0x1d6c>
  224624:	00801944 	movi	r2,101
  224628:	1442810e 	bge	r2,r17,225030 <___vfprintf_internal_r+0x21a0>
  22462c:	d8c02617 	ldw	r3,152(sp)
  224630:	00801984 	movi	r2,102
  224634:	d8c03215 	stw	r3,200(sp)
  224638:	8881fe26 	beq	r17,r2,224e34 <___vfprintf_internal_r+0x1fa4>
  22463c:	d8c03217 	ldw	r3,200(sp)
  224640:	d9003317 	ldw	r4,204(sp)
  224644:	1901dd16 	blt	r3,r4,224dbc <___vfprintf_internal_r+0x1f2c>
  224648:	9480004c 	andi	r18,r18,1
  22464c:	90022b1e 	bne	r18,zero,224efc <___vfprintf_internal_r+0x206c>
  224650:	1805883a 	mov	r2,r3
  224654:	18028016 	blt	r3,zero,225058 <___vfprintf_internal_r+0x21c8>
  224658:	d8c03217 	ldw	r3,200(sp)
  22465c:	044019c4 	movi	r17,103
  224660:	d8c02e15 	stw	r3,184(sp)
  224664:	df002a07 	ldb	fp,168(sp)
  224668:	e001531e 	bne	fp,zero,224bb8 <___vfprintf_internal_r+0x1d28>
  22466c:	df002783 	ldbu	fp,158(sp)
  224670:	d8802a15 	stw	r2,168(sp)
  224674:	dc802b17 	ldw	r18,172(sp)
  224678:	d8002915 	stw	zero,164(sp)
  22467c:	003bd106 	br	2235c4 <_gp+0xfffe8a3c>
  224680:	d8802d17 	ldw	r2,180(sp)
  224684:	d8c02d17 	ldw	r3,180(sp)
  224688:	d9002d17 	ldw	r4,180(sp)
  22468c:	10800017 	ldw	r2,0(r2)
  224690:	18c00117 	ldw	r3,4(r3)
  224694:	21000204 	addi	r4,r4,8
  224698:	d8803615 	stw	r2,216(sp)
  22469c:	d8c03815 	stw	r3,224(sp)
  2246a0:	d9002d15 	stw	r4,180(sp)
  2246a4:	003b7506 	br	22347c <_gp+0xfffe88f4>
  2246a8:	ac400007 	ldb	r17,0(r21)
  2246ac:	003a5906 	br	223014 <_gp+0xfffe848c>
  2246b0:	9080100c 	andi	r2,r18,64
  2246b4:	1000a826 	beq	r2,zero,224958 <___vfprintf_internal_r+0x1ac8>
  2246b8:	d9002d17 	ldw	r4,180(sp)
  2246bc:	002d883a 	mov	r22,zero
  2246c0:	24c0000b 	ldhu	r19,0(r4)
  2246c4:	21000104 	addi	r4,r4,4
  2246c8:	d9002d15 	stw	r4,180(sp)
  2246cc:	003ccb06 	br	2239fc <_gp+0xfffe8e74>
  2246d0:	d8c02d17 	ldw	r3,180(sp)
  2246d4:	d9002917 	ldw	r4,164(sp)
  2246d8:	002d883a 	mov	r22,zero
  2246dc:	18800104 	addi	r2,r3,4
  2246e0:	1cc00017 	ldw	r19,0(r3)
  2246e4:	203ebb0e 	bge	r4,zero,2241d4 <_gp+0xfffe964c>
  2246e8:	003ef106 	br	2242b0 <_gp+0xfffe9728>
  2246ec:	9080040c 	andi	r2,r18,16
  2246f0:	1000921e 	bne	r2,zero,22493c <___vfprintf_internal_r+0x1aac>
  2246f4:	9480100c 	andi	r18,r18,64
  2246f8:	90013926 	beq	r18,zero,224be0 <___vfprintf_internal_r+0x1d50>
  2246fc:	d9002d17 	ldw	r4,180(sp)
  224700:	d9402f17 	ldw	r5,188(sp)
  224704:	20800017 	ldw	r2,0(r4)
  224708:	21000104 	addi	r4,r4,4
  22470c:	d9002d15 	stw	r4,180(sp)
  224710:	1140000d 	sth	r5,0(r2)
  224714:	003a1606 	br	222f70 <_gp+0xfffe83e8>
  224718:	9080100c 	andi	r2,r18,64
  22471c:	10008026 	beq	r2,zero,224920 <___vfprintf_internal_r+0x1a90>
  224720:	d8c02d17 	ldw	r3,180(sp)
  224724:	1cc0000f 	ldh	r19,0(r3)
  224728:	18c00104 	addi	r3,r3,4
  22472c:	d8c02d15 	stw	r3,180(sp)
  224730:	982dd7fa 	srai	r22,r19,31
  224734:	b005883a 	mov	r2,r22
  224738:	003b1f06 	br	2233b8 <_gp+0xfffe8830>
  22473c:	9080100c 	andi	r2,r18,64
  224740:	d8002785 	stb	zero,158(sp)
  224744:	10008a1e 	bne	r2,zero,224970 <___vfprintf_internal_r+0x1ae0>
  224748:	d9402d17 	ldw	r5,180(sp)
  22474c:	d8c02917 	ldw	r3,164(sp)
  224750:	002d883a 	mov	r22,zero
  224754:	28800104 	addi	r2,r5,4
  224758:	2cc00017 	ldw	r19,0(r5)
  22475c:	183e4b0e 	bge	r3,zero,22408c <_gp+0xfffe9504>
  224760:	9d86b03a 	or	r3,r19,r22
  224764:	d8802d15 	stw	r2,180(sp)
  224768:	183e4c1e 	bne	r3,zero,22409c <_gp+0xfffe9514>
  22476c:	0039883a 	mov	fp,zero
  224770:	0005883a 	mov	r2,zero
  224774:	003d4006 	br	223c78 <_gp+0xfffe90f0>
  224778:	014008f4 	movhi	r5,35
  22477c:	29435884 	addi	r5,r5,3426
  224780:	d9402b15 	stw	r5,172(sp)
  224784:	d9402b17 	ldw	r5,172(sp)
  224788:	1c47883a 	add	r3,r3,r17
  22478c:	10800044 	addi	r2,r2,1
  224790:	41400015 	stw	r5,0(r8)
  224794:	44400115 	stw	r17,4(r8)
  224798:	d8c02015 	stw	r3,128(sp)
  22479c:	d8801f15 	stw	r2,124(sp)
  2247a0:	010001c4 	movi	r4,7
  2247a4:	20bec816 	blt	r4,r2,2242c8 <_gp+0xfffe9740>
  2247a8:	42000204 	addi	r8,r8,8
  2247ac:	003ecd06 	br	2242e4 <_gp+0xfffe975c>
  2247b0:	d9002917 	ldw	r4,164(sp)
  2247b4:	d8002785 	stb	zero,158(sp)
  2247b8:	203d2d16 	blt	r4,zero,223c70 <_gp+0xfffe90e8>
  2247bc:	00bfdfc4 	movi	r2,-129
  2247c0:	90a4703a 	and	r18,r18,r2
  2247c4:	003a9106 	br	22320c <_gp+0xfffe8684>
  2247c8:	010008f4 	movhi	r4,35
  2247cc:	21035884 	addi	r4,r4,3426
  2247d0:	d9002b15 	stw	r4,172(sp)
  2247d4:	003c0c06 	br	223808 <_gp+0xfffe8c80>
  2247d8:	d9002c17 	ldw	r4,176(sp)
  2247dc:	d9801e04 	addi	r6,sp,120
  2247e0:	b80b883a 	mov	r5,r23
  2247e4:	0228e7c0 	call	228e7c <__sprint_r>
  2247e8:	103aab1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2247ec:	d8c02017 	ldw	r3,128(sp)
  2247f0:	da000404 	addi	r8,sp,16
  2247f4:	003d4106 	br	223cfc <_gp+0xfffe9174>
  2247f8:	d8801f17 	ldw	r2,124(sp)
  2247fc:	014008f4 	movhi	r5,35
  224800:	01000044 	movi	r4,1
  224804:	18c00044 	addi	r3,r3,1
  224808:	10800044 	addi	r2,r2,1
  22480c:	29435804 	addi	r5,r5,3424
  224810:	41000115 	stw	r4,4(r8)
  224814:	41400015 	stw	r5,0(r8)
  224818:	d8c02015 	stw	r3,128(sp)
  22481c:	d8801f15 	stw	r2,124(sp)
  224820:	010001c4 	movi	r4,7
  224824:	20805c16 	blt	r4,r2,224998 <___vfprintf_internal_r+0x1b08>
  224828:	42000204 	addi	r8,r8,8
  22482c:	8800041e 	bne	r17,zero,224840 <___vfprintf_internal_r+0x19b0>
  224830:	d8803317 	ldw	r2,204(sp)
  224834:	1000021e 	bne	r2,zero,224840 <___vfprintf_internal_r+0x19b0>
  224838:	9080004c 	andi	r2,r18,1
  22483c:	103c0926 	beq	r2,zero,223864 <_gp+0xfffe8cdc>
  224840:	d9003717 	ldw	r4,220(sp)
  224844:	d8801f17 	ldw	r2,124(sp)
  224848:	d9403417 	ldw	r5,208(sp)
  22484c:	20c7883a 	add	r3,r4,r3
  224850:	10800044 	addi	r2,r2,1
  224854:	41000115 	stw	r4,4(r8)
  224858:	41400015 	stw	r5,0(r8)
  22485c:	d8c02015 	stw	r3,128(sp)
  224860:	d8801f15 	stw	r2,124(sp)
  224864:	010001c4 	movi	r4,7
  224868:	20812116 	blt	r4,r2,224cf0 <___vfprintf_internal_r+0x1e60>
  22486c:	42000204 	addi	r8,r8,8
  224870:	0463c83a 	sub	r17,zero,r17
  224874:	0440730e 	bge	zero,r17,224a44 <___vfprintf_internal_r+0x1bb4>
  224878:	05800404 	movi	r22,16
  22487c:	b440860e 	bge	r22,r17,224a98 <___vfprintf_internal_r+0x1c08>
  224880:	014008f4 	movhi	r5,35
  224884:	29435884 	addi	r5,r5,3426
  224888:	d9402b15 	stw	r5,172(sp)
  22488c:	070001c4 	movi	fp,7
  224890:	dcc02c17 	ldw	r19,176(sp)
  224894:	00000306 	br	2248a4 <___vfprintf_internal_r+0x1a14>
  224898:	42000204 	addi	r8,r8,8
  22489c:	8c7ffc04 	addi	r17,r17,-16
  2248a0:	b440800e 	bge	r22,r17,224aa4 <___vfprintf_internal_r+0x1c14>
  2248a4:	18c00404 	addi	r3,r3,16
  2248a8:	10800044 	addi	r2,r2,1
  2248ac:	45000015 	stw	r20,0(r8)
  2248b0:	45800115 	stw	r22,4(r8)
  2248b4:	d8c02015 	stw	r3,128(sp)
  2248b8:	d8801f15 	stw	r2,124(sp)
  2248bc:	e0bff60e 	bge	fp,r2,224898 <_gp+0xfffe9d10>
  2248c0:	d9801e04 	addi	r6,sp,120
  2248c4:	b80b883a 	mov	r5,r23
  2248c8:	9809883a 	mov	r4,r19
  2248cc:	0228e7c0 	call	228e7c <__sprint_r>
  2248d0:	103a711e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2248d4:	d8c02017 	ldw	r3,128(sp)
  2248d8:	d8801f17 	ldw	r2,124(sp)
  2248dc:	da000404 	addi	r8,sp,16
  2248e0:	003fee06 	br	22489c <_gp+0xfffe9d14>
  2248e4:	00bfffc4 	movi	r2,-1
  2248e8:	003a6f06 	br	2232a8 <_gp+0xfffe8720>
  2248ec:	008011c4 	movi	r2,71
  2248f0:	1440b816 	blt	r2,r17,224bd4 <___vfprintf_internal_r+0x1d44>
  2248f4:	040008f4 	movhi	r16,35
  2248f8:	84034a04 	addi	r16,r16,3368
  2248fc:	00c000c4 	movi	r3,3
  224900:	00bfdfc4 	movi	r2,-129
  224904:	d8c02a15 	stw	r3,168(sp)
  224908:	90a4703a 	and	r18,r18,r2
  22490c:	df002783 	ldbu	fp,158(sp)
  224910:	d8c02e15 	stw	r3,184(sp)
  224914:	d8002915 	stw	zero,164(sp)
  224918:	d8003215 	stw	zero,200(sp)
  22491c:	003b2906 	br	2235c4 <_gp+0xfffe8a3c>
  224920:	d9002d17 	ldw	r4,180(sp)
  224924:	24c00017 	ldw	r19,0(r4)
  224928:	21000104 	addi	r4,r4,4
  22492c:	d9002d15 	stw	r4,180(sp)
  224930:	982dd7fa 	srai	r22,r19,31
  224934:	b005883a 	mov	r2,r22
  224938:	003a9f06 	br	2233b8 <_gp+0xfffe8830>
  22493c:	d9402d17 	ldw	r5,180(sp)
  224940:	d8c02f17 	ldw	r3,188(sp)
  224944:	28800017 	ldw	r2,0(r5)
  224948:	29400104 	addi	r5,r5,4
  22494c:	d9402d15 	stw	r5,180(sp)
  224950:	10c00015 	stw	r3,0(r2)
  224954:	00398606 	br	222f70 <_gp+0xfffe83e8>
  224958:	d9402d17 	ldw	r5,180(sp)
  22495c:	002d883a 	mov	r22,zero
  224960:	2cc00017 	ldw	r19,0(r5)
  224964:	29400104 	addi	r5,r5,4
  224968:	d9402d15 	stw	r5,180(sp)
  22496c:	003c2306 	br	2239fc <_gp+0xfffe8e74>
  224970:	d8c02d17 	ldw	r3,180(sp)
  224974:	d9002917 	ldw	r4,164(sp)
  224978:	002d883a 	mov	r22,zero
  22497c:	18800104 	addi	r2,r3,4
  224980:	1cc0000b 	ldhu	r19,0(r3)
  224984:	203dc10e 	bge	r4,zero,22408c <_gp+0xfffe9504>
  224988:	003f7506 	br	224760 <_gp+0xfffe9bd8>
  22498c:	040008f4 	movhi	r16,35
  224990:	84034804 	addi	r16,r16,3360
  224994:	003acc06 	br	2234c8 <_gp+0xfffe8940>
  224998:	d9002c17 	ldw	r4,176(sp)
  22499c:	d9801e04 	addi	r6,sp,120
  2249a0:	b80b883a 	mov	r5,r23
  2249a4:	0228e7c0 	call	228e7c <__sprint_r>
  2249a8:	103a3b1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2249ac:	dc402617 	ldw	r17,152(sp)
  2249b0:	d8c02017 	ldw	r3,128(sp)
  2249b4:	da000404 	addi	r8,sp,16
  2249b8:	003f9c06 	br	22482c <_gp+0xfffe9ca4>
  2249bc:	ac400043 	ldbu	r17,1(r21)
  2249c0:	94800814 	ori	r18,r18,32
  2249c4:	ad400044 	addi	r21,r21,1
  2249c8:	8c403fcc 	andi	r17,r17,255
  2249cc:	8c40201c 	xori	r17,r17,128
  2249d0:	8c7fe004 	addi	r17,r17,-128
  2249d4:	00398f06 	br	223014 <_gp+0xfffe848c>
  2249d8:	d8c02d15 	stw	r3,180(sp)
  2249dc:	0039883a 	mov	fp,zero
  2249e0:	003e3506 	br	2242b8 <_gp+0xfffe9730>
  2249e4:	d9002c17 	ldw	r4,176(sp)
  2249e8:	d9801e04 	addi	r6,sp,120
  2249ec:	b80b883a 	mov	r5,r23
  2249f0:	0228e7c0 	call	228e7c <__sprint_r>
  2249f4:	103a281e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  2249f8:	d8c02017 	ldw	r3,128(sp)
  2249fc:	da000404 	addi	r8,sp,16
  224a00:	003cd006 	br	223d44 <_gp+0xfffe91bc>
  224a04:	8009883a 	mov	r4,r16
  224a08:	da003d15 	stw	r8,244(sp)
  224a0c:	0222c9c0 	call	222c9c <strlen>
  224a10:	d8802e15 	stw	r2,184(sp)
  224a14:	da003d17 	ldw	r8,244(sp)
  224a18:	103c340e 	bge	r2,zero,223aec <_gp+0xfffe8f64>
  224a1c:	0005883a 	mov	r2,zero
  224a20:	003c3206 	br	223aec <_gp+0xfffe8f64>
  224a24:	d9002c17 	ldw	r4,176(sp)
  224a28:	d9801e04 	addi	r6,sp,120
  224a2c:	b80b883a 	mov	r5,r23
  224a30:	0228e7c0 	call	228e7c <__sprint_r>
  224a34:	103a181e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224a38:	d8c02017 	ldw	r3,128(sp)
  224a3c:	d8801f17 	ldw	r2,124(sp)
  224a40:	da000404 	addi	r8,sp,16
  224a44:	d9403317 	ldw	r5,204(sp)
  224a48:	10800044 	addi	r2,r2,1
  224a4c:	44000015 	stw	r16,0(r8)
  224a50:	28c7883a 	add	r3,r5,r3
  224a54:	003b7d06 	br	22384c <_gp+0xfffe8cc4>
  224a58:	010008f4 	movhi	r4,35
  224a5c:	21035c84 	addi	r4,r4,3442
  224a60:	d9003515 	stw	r4,212(sp)
  224a64:	003b1406 	br	2236b8 <_gp+0xfffe8b30>
  224a68:	013fffc4 	movi	r4,-1
  224a6c:	003a3506 	br	223344 <_gp+0xfffe87bc>
  224a70:	0023883a 	mov	r17,zero
  224a74:	003d9d06 	br	2240ec <_gp+0xfffe9564>
  224a78:	d9002c17 	ldw	r4,176(sp)
  224a7c:	d9801e04 	addi	r6,sp,120
  224a80:	b80b883a 	mov	r5,r23
  224a84:	0228e7c0 	call	228e7c <__sprint_r>
  224a88:	103a031e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224a8c:	d8c02017 	ldw	r3,128(sp)
  224a90:	da000404 	addi	r8,sp,16
  224a94:	003d9406 	br	2240e8 <_gp+0xfffe9560>
  224a98:	010008f4 	movhi	r4,35
  224a9c:	21035884 	addi	r4,r4,3426
  224aa0:	d9002b15 	stw	r4,172(sp)
  224aa4:	d9002b17 	ldw	r4,172(sp)
  224aa8:	1c47883a 	add	r3,r3,r17
  224aac:	10800044 	addi	r2,r2,1
  224ab0:	41000015 	stw	r4,0(r8)
  224ab4:	44400115 	stw	r17,4(r8)
  224ab8:	d8c02015 	stw	r3,128(sp)
  224abc:	d8801f15 	stw	r2,124(sp)
  224ac0:	010001c4 	movi	r4,7
  224ac4:	20bfd716 	blt	r4,r2,224a24 <_gp+0xfffe9e9c>
  224ac8:	42000204 	addi	r8,r8,8
  224acc:	003fdd06 	br	224a44 <_gp+0xfffe9ebc>
  224ad0:	d9002c17 	ldw	r4,176(sp)
  224ad4:	d9801e04 	addi	r6,sp,120
  224ad8:	b80b883a 	mov	r5,r23
  224adc:	0228e7c0 	call	228e7c <__sprint_r>
  224ae0:	1039ed1e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224ae4:	d8802617 	ldw	r2,152(sp)
  224ae8:	d8c02017 	ldw	r3,128(sp)
  224aec:	da000404 	addi	r8,sp,16
  224af0:	003e1006 	br	224334 <_gp+0xfffe97ac>
  224af4:	00800044 	movi	r2,1
  224af8:	10803fcc 	andi	r2,r2,255
  224afc:	00c00044 	movi	r3,1
  224b00:	10fa3526 	beq	r2,r3,2233d8 <_gp+0xfffe8850>
  224b04:	00c00084 	movi	r3,2
  224b08:	10fbcb26 	beq	r2,r3,223a38 <_gp+0xfffe8eb0>
  224b0c:	003a8f06 	br	22354c <_gp+0xfffe89c4>
  224b10:	010008f4 	movhi	r4,35
  224b14:	21035c84 	addi	r4,r4,3442
  224b18:	d9003515 	stw	r4,212(sp)
  224b1c:	003b7606 	br	2238f8 <_gp+0xfffe8d70>
  224b20:	d8802917 	ldw	r2,164(sp)
  224b24:	00c00184 	movi	r3,6
  224b28:	1880012e 	bgeu	r3,r2,224b30 <___vfprintf_internal_r+0x1ca0>
  224b2c:	1805883a 	mov	r2,r3
  224b30:	d8802e15 	stw	r2,184(sp)
  224b34:	1000ef16 	blt	r2,zero,224ef4 <___vfprintf_internal_r+0x2064>
  224b38:	040008f4 	movhi	r16,35
  224b3c:	d8802a15 	stw	r2,168(sp)
  224b40:	dcc02d15 	stw	r19,180(sp)
  224b44:	d8002915 	stw	zero,164(sp)
  224b48:	d8003215 	stw	zero,200(sp)
  224b4c:	84035604 	addi	r16,r16,3416
  224b50:	0039883a 	mov	fp,zero
  224b54:	003aa206 	br	2235e0 <_gp+0xfffe8a58>
  224b58:	0021883a 	mov	r16,zero
  224b5c:	003e0706 	br	22437c <_gp+0xfffe97f4>
  224b60:	d9002c17 	ldw	r4,176(sp)
  224b64:	d9801e04 	addi	r6,sp,120
  224b68:	b80b883a 	mov	r5,r23
  224b6c:	0228e7c0 	call	228e7c <__sprint_r>
  224b70:	1039c91e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224b74:	d8802617 	ldw	r2,152(sp)
  224b78:	d9403317 	ldw	r5,204(sp)
  224b7c:	d8c02017 	ldw	r3,128(sp)
  224b80:	da000404 	addi	r8,sp,16
  224b84:	2885c83a 	sub	r2,r5,r2
  224b88:	003dfb06 	br	224378 <_gp+0xfffe97f0>
  224b8c:	9080004c 	andi	r2,r18,1
  224b90:	103e8f1e 	bne	r2,zero,2245d0 <_gp+0xfffe9a48>
  224b94:	d8802117 	ldw	r2,132(sp)
  224b98:	003e9e06 	br	224614 <_gp+0xfffe9a8c>
  224b9c:	1025883a 	mov	r18,r2
  224ba0:	0039883a 	mov	fp,zero
  224ba4:	00800084 	movi	r2,2
  224ba8:	003fd306 	br	224af8 <_gp+0xfffe9f70>
  224bac:	07000b44 	movi	fp,45
  224bb0:	df002785 	stb	fp,158(sp)
  224bb4:	003a4006 	br	2234b8 <_gp+0xfffe8930>
  224bb8:	00c00b44 	movi	r3,45
  224bbc:	d8c02785 	stb	r3,158(sp)
  224bc0:	d8802a15 	stw	r2,168(sp)
  224bc4:	dc802b17 	ldw	r18,172(sp)
  224bc8:	d8002915 	stw	zero,164(sp)
  224bcc:	07000b44 	movi	fp,45
  224bd0:	003a8006 	br	2235d4 <_gp+0xfffe8a4c>
  224bd4:	040008f4 	movhi	r16,35
  224bd8:	84034b04 	addi	r16,r16,3372
  224bdc:	003f4706 	br	2248fc <_gp+0xfffe9d74>
  224be0:	d8c02d17 	ldw	r3,180(sp)
  224be4:	d9002f17 	ldw	r4,188(sp)
  224be8:	18800017 	ldw	r2,0(r3)
  224bec:	18c00104 	addi	r3,r3,4
  224bf0:	d8c02d15 	stw	r3,180(sp)
  224bf4:	11000015 	stw	r4,0(r2)
  224bf8:	0038dd06 	br	222f70 <_gp+0xfffe83e8>
  224bfc:	dd802617 	ldw	r22,152(sp)
  224c00:	00bfff44 	movi	r2,-3
  224c04:	b0801c16 	blt	r22,r2,224c78 <___vfprintf_internal_r+0x1de8>
  224c08:	d9402917 	ldw	r5,164(sp)
  224c0c:	2d801a16 	blt	r5,r22,224c78 <___vfprintf_internal_r+0x1de8>
  224c10:	dd803215 	stw	r22,200(sp)
  224c14:	003e8906 	br	22463c <_gp+0xfffe9ab4>
  224c18:	010008f4 	movhi	r4,35
  224c1c:	21035884 	addi	r4,r4,3426
  224c20:	d9002b15 	stw	r4,172(sp)
  224c24:	003c9106 	br	223e6c <_gp+0xfffe92e4>
  224c28:	e005883a 	mov	r2,fp
  224c2c:	003e7906 	br	224614 <_gp+0xfffe9a8c>
  224c30:	d9402917 	ldw	r5,164(sp)
  224c34:	df002783 	ldbu	fp,158(sp)
  224c38:	dcc02d15 	stw	r19,180(sp)
  224c3c:	d9402a15 	stw	r5,168(sp)
  224c40:	d9402e15 	stw	r5,184(sp)
  224c44:	d8002915 	stw	zero,164(sp)
  224c48:	d8003215 	stw	zero,200(sp)
  224c4c:	003a5d06 	br	2235c4 <_gp+0xfffe8a3c>
  224c50:	9080004c 	andi	r2,r18,1
  224c54:	0039883a 	mov	fp,zero
  224c58:	10000426 	beq	r2,zero,224c6c <___vfprintf_internal_r+0x1ddc>
  224c5c:	00800c04 	movi	r2,48
  224c60:	dc001dc4 	addi	r16,sp,119
  224c64:	d8801dc5 	stb	r2,119(sp)
  224c68:	003b8006 	br	223a6c <_gp+0xfffe8ee4>
  224c6c:	d8002e15 	stw	zero,184(sp)
  224c70:	dc001e04 	addi	r16,sp,120
  224c74:	003a4d06 	br	2235ac <_gp+0xfffe8a24>
  224c78:	8c7fff84 	addi	r17,r17,-2
  224c7c:	b5bfffc4 	addi	r22,r22,-1
  224c80:	dd802615 	stw	r22,152(sp)
  224c84:	dc4022c5 	stb	r17,139(sp)
  224c88:	b000bf16 	blt	r22,zero,224f88 <___vfprintf_internal_r+0x20f8>
  224c8c:	00800ac4 	movi	r2,43
  224c90:	d8802305 	stb	r2,140(sp)
  224c94:	00800244 	movi	r2,9
  224c98:	15807016 	blt	r2,r22,224e5c <___vfprintf_internal_r+0x1fcc>
  224c9c:	00800c04 	movi	r2,48
  224ca0:	b5800c04 	addi	r22,r22,48
  224ca4:	d8802345 	stb	r2,141(sp)
  224ca8:	dd802385 	stb	r22,142(sp)
  224cac:	d88023c4 	addi	r2,sp,143
  224cb0:	df0022c4 	addi	fp,sp,139
  224cb4:	d8c03317 	ldw	r3,204(sp)
  224cb8:	1739c83a 	sub	fp,r2,fp
  224cbc:	d9003317 	ldw	r4,204(sp)
  224cc0:	e0c7883a 	add	r3,fp,r3
  224cc4:	df003a15 	stw	fp,232(sp)
  224cc8:	d8c02e15 	stw	r3,184(sp)
  224ccc:	00800044 	movi	r2,1
  224cd0:	1100b30e 	bge	r2,r4,224fa0 <___vfprintf_internal_r+0x2110>
  224cd4:	d8c02e17 	ldw	r3,184(sp)
  224cd8:	18c00044 	addi	r3,r3,1
  224cdc:	d8c02e15 	stw	r3,184(sp)
  224ce0:	1805883a 	mov	r2,r3
  224ce4:	1800ac16 	blt	r3,zero,224f98 <___vfprintf_internal_r+0x2108>
  224ce8:	d8003215 	stw	zero,200(sp)
  224cec:	003e5d06 	br	224664 <_gp+0xfffe9adc>
  224cf0:	d9002c17 	ldw	r4,176(sp)
  224cf4:	d9801e04 	addi	r6,sp,120
  224cf8:	b80b883a 	mov	r5,r23
  224cfc:	0228e7c0 	call	228e7c <__sprint_r>
  224d00:	1039651e 	bne	r2,zero,223298 <_gp+0xfffe8710>
  224d04:	dc402617 	ldw	r17,152(sp)
  224d08:	d8c02017 	ldw	r3,128(sp)
  224d0c:	d8801f17 	ldw	r2,124(sp)
  224d10:	da000404 	addi	r8,sp,16
  224d14:	003ed606 	br	224870 <_gp+0xfffe9ce8>
  224d18:	582b883a 	mov	r21,r11
  224d1c:	d8002915 	stw	zero,164(sp)
  224d20:	0038bd06 	br	223018 <_gp+0xfffe8490>
  224d24:	d8802917 	ldw	r2,164(sp)
  224d28:	103e071e 	bne	r2,zero,224548 <_gp+0xfffe99c0>
  224d2c:	dc002915 	stw	r16,164(sp)
  224d30:	003e0506 	br	224548 <_gp+0xfffe99c0>
  224d34:	d9002917 	ldw	r4,164(sp)
  224d38:	20c00044 	addi	r3,r4,1
  224d3c:	003e0f06 	br	22457c <_gp+0xfffe99f4>
  224d40:	01400184 	movi	r5,6
  224d44:	d9402915 	stw	r5,164(sp)
  224d48:	003dff06 	br	224548 <_gp+0xfffe99c0>
  224d4c:	d8802104 	addi	r2,sp,132
  224d50:	d8800315 	stw	r2,12(sp)
  224d54:	d8802504 	addi	r2,sp,148
  224d58:	d8800215 	stw	r2,8(sp)
  224d5c:	d8802604 	addi	r2,sp,152
  224d60:	d8800115 	stw	r2,4(sp)
  224d64:	d8802917 	ldw	r2,164(sp)
  224d68:	d9403617 	ldw	r5,216(sp)
  224d6c:	d9002c17 	ldw	r4,176(sp)
  224d70:	d8800015 	stw	r2,0(sp)
  224d74:	01c000c4 	movi	r7,3
  224d78:	980d883a 	mov	r6,r19
  224d7c:	da003d15 	stw	r8,244(sp)
  224d80:	02255680 	call	225568 <_dtoa_r>
  224d84:	d8c02917 	ldw	r3,164(sp)
  224d88:	da003d17 	ldw	r8,244(sp)
  224d8c:	1021883a 	mov	r16,r2
  224d90:	10f9883a 	add	fp,r2,r3
  224d94:	81000007 	ldb	r4,0(r16)
  224d98:	00800c04 	movi	r2,48
  224d9c:	20805e26 	beq	r4,r2,224f18 <___vfprintf_internal_r+0x2088>
  224da0:	d8c02617 	ldw	r3,152(sp)
  224da4:	e0f9883a 	add	fp,fp,r3
  224da8:	003e0a06 	br	2245d4 <_gp+0xfffe9a4c>
  224dac:	00c00b44 	movi	r3,45
  224db0:	24e0003c 	xorhi	r19,r4,32768
  224db4:	d8c02a05 	stb	r3,168(sp)
  224db8:	003de906 	br	224560 <_gp+0xfffe99d8>
  224dbc:	d8c03217 	ldw	r3,200(sp)
  224dc0:	00c07a0e 	bge	zero,r3,224fac <___vfprintf_internal_r+0x211c>
  224dc4:	00800044 	movi	r2,1
  224dc8:	d9003317 	ldw	r4,204(sp)
  224dcc:	1105883a 	add	r2,r2,r4
  224dd0:	d8802e15 	stw	r2,184(sp)
  224dd4:	10004e16 	blt	r2,zero,224f10 <___vfprintf_internal_r+0x2080>
  224dd8:	044019c4 	movi	r17,103
  224ddc:	003e2106 	br	224664 <_gp+0xfffe9adc>
  224de0:	d9002917 	ldw	r4,164(sp)
  224de4:	d8802104 	addi	r2,sp,132
  224de8:	d8800315 	stw	r2,12(sp)
  224dec:	d9000015 	stw	r4,0(sp)
  224df0:	d8802504 	addi	r2,sp,148
  224df4:	d9403617 	ldw	r5,216(sp)
  224df8:	d9002c17 	ldw	r4,176(sp)
  224dfc:	d8800215 	stw	r2,8(sp)
  224e00:	d8802604 	addi	r2,sp,152
  224e04:	d8800115 	stw	r2,4(sp)
  224e08:	01c000c4 	movi	r7,3
  224e0c:	980d883a 	mov	r6,r19
  224e10:	da003d15 	stw	r8,244(sp)
  224e14:	02255680 	call	225568 <_dtoa_r>
  224e18:	d8c02917 	ldw	r3,164(sp)
  224e1c:	da003d17 	ldw	r8,244(sp)
  224e20:	1021883a 	mov	r16,r2
  224e24:	00801184 	movi	r2,70
  224e28:	80f9883a 	add	fp,r16,r3
  224e2c:	88bfd926 	beq	r17,r2,224d94 <_gp+0xfffea20c>
  224e30:	003de806 	br	2245d4 <_gp+0xfffe9a4c>
  224e34:	d9002917 	ldw	r4,164(sp)
  224e38:	00c04d0e 	bge	zero,r3,224f70 <___vfprintf_internal_r+0x20e0>
  224e3c:	2000441e 	bne	r4,zero,224f50 <___vfprintf_internal_r+0x20c0>
  224e40:	9480004c 	andi	r18,r18,1
  224e44:	9000421e 	bne	r18,zero,224f50 <___vfprintf_internal_r+0x20c0>
  224e48:	1805883a 	mov	r2,r3
  224e4c:	18007016 	blt	r3,zero,225010 <___vfprintf_internal_r+0x2180>
  224e50:	d8c03217 	ldw	r3,200(sp)
  224e54:	d8c02e15 	stw	r3,184(sp)
  224e58:	003e0206 	br	224664 <_gp+0xfffe9adc>
  224e5c:	df0022c4 	addi	fp,sp,139
  224e60:	dc002915 	stw	r16,164(sp)
  224e64:	4027883a 	mov	r19,r8
  224e68:	e021883a 	mov	r16,fp
  224e6c:	b009883a 	mov	r4,r22
  224e70:	01400284 	movi	r5,10
  224e74:	022b5080 	call	22b508 <__modsi3>
  224e78:	10800c04 	addi	r2,r2,48
  224e7c:	843fffc4 	addi	r16,r16,-1
  224e80:	b009883a 	mov	r4,r22
  224e84:	01400284 	movi	r5,10
  224e88:	80800005 	stb	r2,0(r16)
  224e8c:	022b4840 	call	22b484 <__divsi3>
  224e90:	102d883a 	mov	r22,r2
  224e94:	00800244 	movi	r2,9
  224e98:	15bff416 	blt	r2,r22,224e6c <_gp+0xfffea2e4>
  224e9c:	9811883a 	mov	r8,r19
  224ea0:	b0800c04 	addi	r2,r22,48
  224ea4:	8027883a 	mov	r19,r16
  224ea8:	997fffc4 	addi	r5,r19,-1
  224eac:	98bfffc5 	stb	r2,-1(r19)
  224eb0:	dc002917 	ldw	r16,164(sp)
  224eb4:	2f006a2e 	bgeu	r5,fp,225060 <___vfprintf_internal_r+0x21d0>
  224eb8:	d9c02384 	addi	r7,sp,142
  224ebc:	3ccfc83a 	sub	r7,r7,r19
  224ec0:	d9002344 	addi	r4,sp,141
  224ec4:	e1cf883a 	add	r7,fp,r7
  224ec8:	00000106 	br	224ed0 <___vfprintf_internal_r+0x2040>
  224ecc:	28800003 	ldbu	r2,0(r5)
  224ed0:	20800005 	stb	r2,0(r4)
  224ed4:	21000044 	addi	r4,r4,1
  224ed8:	29400044 	addi	r5,r5,1
  224edc:	393ffb1e 	bne	r7,r4,224ecc <_gp+0xfffea344>
  224ee0:	d8802304 	addi	r2,sp,140
  224ee4:	14c5c83a 	sub	r2,r2,r19
  224ee8:	d8c02344 	addi	r3,sp,141
  224eec:	1885883a 	add	r2,r3,r2
  224ef0:	003f7006 	br	224cb4 <_gp+0xfffea12c>
  224ef4:	0005883a 	mov	r2,zero
  224ef8:	003f0f06 	br	224b38 <_gp+0xfffe9fb0>
  224efc:	d8c03217 	ldw	r3,200(sp)
  224f00:	18c00044 	addi	r3,r3,1
  224f04:	d8c02e15 	stw	r3,184(sp)
  224f08:	1805883a 	mov	r2,r3
  224f0c:	183fb20e 	bge	r3,zero,224dd8 <_gp+0xfffea250>
  224f10:	0005883a 	mov	r2,zero
  224f14:	003fb006 	br	224dd8 <_gp+0xfffea250>
  224f18:	d9003617 	ldw	r4,216(sp)
  224f1c:	000d883a 	mov	r6,zero
  224f20:	000f883a 	mov	r7,zero
  224f24:	980b883a 	mov	r5,r19
  224f28:	d8c03c15 	stw	r3,240(sp)
  224f2c:	da003d15 	stw	r8,244(sp)
  224f30:	022c7cc0 	call	22c7cc <__eqdf2>
  224f34:	d8c03c17 	ldw	r3,240(sp)
  224f38:	da003d17 	ldw	r8,244(sp)
  224f3c:	103f9826 	beq	r2,zero,224da0 <_gp+0xfffea218>
  224f40:	00800044 	movi	r2,1
  224f44:	10c7c83a 	sub	r3,r2,r3
  224f48:	d8c02615 	stw	r3,152(sp)
  224f4c:	003f9506 	br	224da4 <_gp+0xfffea21c>
  224f50:	d9002917 	ldw	r4,164(sp)
  224f54:	d8c03217 	ldw	r3,200(sp)
  224f58:	20800044 	addi	r2,r4,1
  224f5c:	1885883a 	add	r2,r3,r2
  224f60:	d8802e15 	stw	r2,184(sp)
  224f64:	103dbf0e 	bge	r2,zero,224664 <_gp+0xfffe9adc>
  224f68:	0005883a 	mov	r2,zero
  224f6c:	003dbd06 	br	224664 <_gp+0xfffe9adc>
  224f70:	2000211e 	bne	r4,zero,224ff8 <___vfprintf_internal_r+0x2168>
  224f74:	9480004c 	andi	r18,r18,1
  224f78:	90001f1e 	bne	r18,zero,224ff8 <___vfprintf_internal_r+0x2168>
  224f7c:	00800044 	movi	r2,1
  224f80:	d8802e15 	stw	r2,184(sp)
  224f84:	003db706 	br	224664 <_gp+0xfffe9adc>
  224f88:	00800b44 	movi	r2,45
  224f8c:	05adc83a 	sub	r22,zero,r22
  224f90:	d8802305 	stb	r2,140(sp)
  224f94:	003f3f06 	br	224c94 <_gp+0xfffea10c>
  224f98:	0005883a 	mov	r2,zero
  224f9c:	003f5206 	br	224ce8 <_gp+0xfffea160>
  224fa0:	90a4703a 	and	r18,r18,r2
  224fa4:	903f4e26 	beq	r18,zero,224ce0 <_gp+0xfffea158>
  224fa8:	003f4a06 	br	224cd4 <_gp+0xfffea14c>
  224fac:	00800084 	movi	r2,2
  224fb0:	10c5c83a 	sub	r2,r2,r3
  224fb4:	003f8406 	br	224dc8 <_gp+0xfffea240>
  224fb8:	d8802d17 	ldw	r2,180(sp)
  224fbc:	d9002d17 	ldw	r4,180(sp)
  224fc0:	ac400043 	ldbu	r17,1(r21)
  224fc4:	10800017 	ldw	r2,0(r2)
  224fc8:	582b883a 	mov	r21,r11
  224fcc:	d8802915 	stw	r2,164(sp)
  224fd0:	20800104 	addi	r2,r4,4
  224fd4:	d9002917 	ldw	r4,164(sp)
  224fd8:	d8802d15 	stw	r2,180(sp)
  224fdc:	203e7a0e 	bge	r4,zero,2249c8 <_gp+0xfffe9e40>
  224fe0:	8c403fcc 	andi	r17,r17,255
  224fe4:	00bfffc4 	movi	r2,-1
  224fe8:	8c40201c 	xori	r17,r17,128
  224fec:	d8802915 	stw	r2,164(sp)
  224ff0:	8c7fe004 	addi	r17,r17,-128
  224ff4:	00380706 	br	223014 <_gp+0xfffe848c>
  224ff8:	d8c02917 	ldw	r3,164(sp)
  224ffc:	18c00084 	addi	r3,r3,2
  225000:	d8c02e15 	stw	r3,184(sp)
  225004:	1805883a 	mov	r2,r3
  225008:	183d960e 	bge	r3,zero,224664 <_gp+0xfffe9adc>
  22500c:	003fd606 	br	224f68 <_gp+0xfffea3e0>
  225010:	0005883a 	mov	r2,zero
  225014:	003f8e06 	br	224e50 <_gp+0xfffea2c8>
  225018:	9080004c 	andi	r2,r18,1
  22501c:	103f811e 	bne	r2,zero,224e24 <_gp+0xfffea29c>
  225020:	d8802117 	ldw	r2,132(sp)
  225024:	1405c83a 	sub	r2,r2,r16
  225028:	d8803315 	stw	r2,204(sp)
  22502c:	b47ef326 	beq	r22,r17,224bfc <_gp+0xfffea074>
  225030:	dd802617 	ldw	r22,152(sp)
  225034:	003f1106 	br	224c7c <_gp+0xfffea0f4>
  225038:	d9c02785 	stb	r7,158(sp)
  22503c:	00390406 	br	223450 <_gp+0xfffe88c8>
  225040:	d9c02785 	stb	r7,158(sp)
  225044:	0038d306 	br	223394 <_gp+0xfffe880c>
  225048:	d9c02785 	stb	r7,158(sp)
  22504c:	003a6106 	br	2239d4 <_gp+0xfffe8e4c>
  225050:	d9c02785 	stb	r7,158(sp)
  225054:	003af806 	br	223c38 <_gp+0xfffe90b0>
  225058:	0005883a 	mov	r2,zero
  22505c:	003d7e06 	br	224658 <_gp+0xfffe9ad0>
  225060:	d8802344 	addi	r2,sp,141
  225064:	003f1306 	br	224cb4 <_gp+0xfffea12c>
  225068:	d9c02785 	stb	r7,158(sp)
  22506c:	00392306 	br	2234fc <_gp+0xfffe8974>
  225070:	d9c02785 	stb	r7,158(sp)
  225074:	003aa906 	br	223b1c <_gp+0xfffe8f94>
  225078:	d9c02785 	stb	r7,158(sp)
  22507c:	003a3d06 	br	223974 <_gp+0xfffe8dec>
  225080:	d9c02785 	stb	r7,158(sp)
  225084:	003aca06 	br	223bb0 <_gp+0xfffe9028>

00225088 <__vfprintf_internal>:
  225088:	008008f4 	movhi	r2,35
  22508c:	108ae304 	addi	r2,r2,11148
  225090:	300f883a 	mov	r7,r6
  225094:	280d883a 	mov	r6,r5
  225098:	200b883a 	mov	r5,r4
  22509c:	11000017 	ldw	r4,0(r2)
  2250a0:	0222e901 	jmpi	222e90 <___vfprintf_internal_r>

002250a4 <__sbprintf>:
  2250a4:	2880030b 	ldhu	r2,12(r5)
  2250a8:	2ac01917 	ldw	r11,100(r5)
  2250ac:	2a80038b 	ldhu	r10,14(r5)
  2250b0:	2a400717 	ldw	r9,28(r5)
  2250b4:	2a000917 	ldw	r8,36(r5)
  2250b8:	defee204 	addi	sp,sp,-1144
  2250bc:	00c10004 	movi	r3,1024
  2250c0:	dc011a15 	stw	r16,1128(sp)
  2250c4:	10bfff4c 	andi	r2,r2,65533
  2250c8:	2821883a 	mov	r16,r5
  2250cc:	d8cb883a 	add	r5,sp,r3
  2250d0:	dc811c15 	stw	r18,1136(sp)
  2250d4:	dc411b15 	stw	r17,1132(sp)
  2250d8:	dfc11d15 	stw	ra,1140(sp)
  2250dc:	2025883a 	mov	r18,r4
  2250e0:	d881030d 	sth	r2,1036(sp)
  2250e4:	dac11915 	stw	r11,1124(sp)
  2250e8:	da81038d 	sth	r10,1038(sp)
  2250ec:	da410715 	stw	r9,1052(sp)
  2250f0:	da010915 	stw	r8,1060(sp)
  2250f4:	dec10015 	stw	sp,1024(sp)
  2250f8:	dec10415 	stw	sp,1040(sp)
  2250fc:	d8c10215 	stw	r3,1032(sp)
  225100:	d8c10515 	stw	r3,1044(sp)
  225104:	d8010615 	stw	zero,1048(sp)
  225108:	0222e900 	call	222e90 <___vfprintf_internal_r>
  22510c:	1023883a 	mov	r17,r2
  225110:	10000416 	blt	r2,zero,225124 <__sbprintf+0x80>
  225114:	d9410004 	addi	r5,sp,1024
  225118:	9009883a 	mov	r4,r18
  22511c:	0220c700 	call	220c70 <_fflush_r>
  225120:	10000d1e 	bne	r2,zero,225158 <__sbprintf+0xb4>
  225124:	d881030b 	ldhu	r2,1036(sp)
  225128:	1080100c 	andi	r2,r2,64
  22512c:	10000326 	beq	r2,zero,22513c <__sbprintf+0x98>
  225130:	8080030b 	ldhu	r2,12(r16)
  225134:	10801014 	ori	r2,r2,64
  225138:	8080030d 	sth	r2,12(r16)
  22513c:	8805883a 	mov	r2,r17
  225140:	dfc11d17 	ldw	ra,1140(sp)
  225144:	dc811c17 	ldw	r18,1136(sp)
  225148:	dc411b17 	ldw	r17,1132(sp)
  22514c:	dc011a17 	ldw	r16,1128(sp)
  225150:	dec11e04 	addi	sp,sp,1144
  225154:	f800283a 	ret
  225158:	047fffc4 	movi	r17,-1
  22515c:	003ff106 	br	225124 <_gp+0xfffea59c>

00225160 <_write_r>:
  225160:	defffd04 	addi	sp,sp,-12
  225164:	2805883a 	mov	r2,r5
  225168:	dc000015 	stw	r16,0(sp)
  22516c:	040008f4 	movhi	r16,35
  225170:	dc400115 	stw	r17,4(sp)
  225174:	300b883a 	mov	r5,r6
  225178:	84120204 	addi	r16,r16,18440
  22517c:	2023883a 	mov	r17,r4
  225180:	380d883a 	mov	r6,r7
  225184:	1009883a 	mov	r4,r2
  225188:	dfc00215 	stw	ra,8(sp)
  22518c:	80000015 	stw	zero,0(r16)
  225190:	022e8a00 	call	22e8a0 <write>
  225194:	00ffffc4 	movi	r3,-1
  225198:	10c00526 	beq	r2,r3,2251b0 <_write_r+0x50>
  22519c:	dfc00217 	ldw	ra,8(sp)
  2251a0:	dc400117 	ldw	r17,4(sp)
  2251a4:	dc000017 	ldw	r16,0(sp)
  2251a8:	dec00304 	addi	sp,sp,12
  2251ac:	f800283a 	ret
  2251b0:	80c00017 	ldw	r3,0(r16)
  2251b4:	183ff926 	beq	r3,zero,22519c <_gp+0xfffea614>
  2251b8:	88c00015 	stw	r3,0(r17)
  2251bc:	003ff706 	br	22519c <_gp+0xfffea614>

002251c0 <__swsetup_r>:
  2251c0:	008008f4 	movhi	r2,35
  2251c4:	defffd04 	addi	sp,sp,-12
  2251c8:	108ae304 	addi	r2,r2,11148
  2251cc:	dc400115 	stw	r17,4(sp)
  2251d0:	2023883a 	mov	r17,r4
  2251d4:	11000017 	ldw	r4,0(r2)
  2251d8:	dc000015 	stw	r16,0(sp)
  2251dc:	dfc00215 	stw	ra,8(sp)
  2251e0:	2821883a 	mov	r16,r5
  2251e4:	20000226 	beq	r4,zero,2251f0 <__swsetup_r+0x30>
  2251e8:	20800e17 	ldw	r2,56(r4)
  2251ec:	10003126 	beq	r2,zero,2252b4 <__swsetup_r+0xf4>
  2251f0:	8080030b 	ldhu	r2,12(r16)
  2251f4:	10c0020c 	andi	r3,r2,8
  2251f8:	1009883a 	mov	r4,r2
  2251fc:	18000f26 	beq	r3,zero,22523c <__swsetup_r+0x7c>
  225200:	80c00417 	ldw	r3,16(r16)
  225204:	18001526 	beq	r3,zero,22525c <__swsetup_r+0x9c>
  225208:	1100004c 	andi	r4,r2,1
  22520c:	20001c1e 	bne	r4,zero,225280 <__swsetup_r+0xc0>
  225210:	1080008c 	andi	r2,r2,2
  225214:	1000291e 	bne	r2,zero,2252bc <__swsetup_r+0xfc>
  225218:	80800517 	ldw	r2,20(r16)
  22521c:	80800215 	stw	r2,8(r16)
  225220:	18001c26 	beq	r3,zero,225294 <__swsetup_r+0xd4>
  225224:	0005883a 	mov	r2,zero
  225228:	dfc00217 	ldw	ra,8(sp)
  22522c:	dc400117 	ldw	r17,4(sp)
  225230:	dc000017 	ldw	r16,0(sp)
  225234:	dec00304 	addi	sp,sp,12
  225238:	f800283a 	ret
  22523c:	2080040c 	andi	r2,r4,16
  225240:	10002e26 	beq	r2,zero,2252fc <__swsetup_r+0x13c>
  225244:	2080010c 	andi	r2,r4,4
  225248:	10001e1e 	bne	r2,zero,2252c4 <__swsetup_r+0x104>
  22524c:	80c00417 	ldw	r3,16(r16)
  225250:	20800214 	ori	r2,r4,8
  225254:	8080030d 	sth	r2,12(r16)
  225258:	183feb1e 	bne	r3,zero,225208 <_gp+0xfffea680>
  22525c:	1100a00c 	andi	r4,r2,640
  225260:	01408004 	movi	r5,512
  225264:	217fe826 	beq	r4,r5,225208 <_gp+0xfffea680>
  225268:	800b883a 	mov	r5,r16
  22526c:	8809883a 	mov	r4,r17
  225270:	0221cf80 	call	221cf8 <__smakebuf_r>
  225274:	8080030b 	ldhu	r2,12(r16)
  225278:	80c00417 	ldw	r3,16(r16)
  22527c:	003fe206 	br	225208 <_gp+0xfffea680>
  225280:	80800517 	ldw	r2,20(r16)
  225284:	80000215 	stw	zero,8(r16)
  225288:	0085c83a 	sub	r2,zero,r2
  22528c:	80800615 	stw	r2,24(r16)
  225290:	183fe41e 	bne	r3,zero,225224 <_gp+0xfffea69c>
  225294:	80c0030b 	ldhu	r3,12(r16)
  225298:	0005883a 	mov	r2,zero
  22529c:	1900200c 	andi	r4,r3,128
  2252a0:	203fe126 	beq	r4,zero,225228 <_gp+0xfffea6a0>
  2252a4:	18c01014 	ori	r3,r3,64
  2252a8:	80c0030d 	sth	r3,12(r16)
  2252ac:	00bfffc4 	movi	r2,-1
  2252b0:	003fdd06 	br	225228 <_gp+0xfffea6a0>
  2252b4:	022104c0 	call	22104c <__sinit>
  2252b8:	003fcd06 	br	2251f0 <_gp+0xfffea668>
  2252bc:	0005883a 	mov	r2,zero
  2252c0:	003fd606 	br	22521c <_gp+0xfffea694>
  2252c4:	81400c17 	ldw	r5,48(r16)
  2252c8:	28000626 	beq	r5,zero,2252e4 <__swsetup_r+0x124>
  2252cc:	80801004 	addi	r2,r16,64
  2252d0:	28800326 	beq	r5,r2,2252e0 <__swsetup_r+0x120>
  2252d4:	8809883a 	mov	r4,r17
  2252d8:	02213180 	call	221318 <_free_r>
  2252dc:	8100030b 	ldhu	r4,12(r16)
  2252e0:	80000c15 	stw	zero,48(r16)
  2252e4:	80c00417 	ldw	r3,16(r16)
  2252e8:	00bff6c4 	movi	r2,-37
  2252ec:	1108703a 	and	r4,r2,r4
  2252f0:	80000115 	stw	zero,4(r16)
  2252f4:	80c00015 	stw	r3,0(r16)
  2252f8:	003fd506 	br	225250 <_gp+0xfffea6c8>
  2252fc:	00800244 	movi	r2,9
  225300:	88800015 	stw	r2,0(r17)
  225304:	20801014 	ori	r2,r4,64
  225308:	8080030d 	sth	r2,12(r16)
  22530c:	00bfffc4 	movi	r2,-1
  225310:	003fc506 	br	225228 <_gp+0xfffea6a0>

00225314 <_close_r>:
  225314:	defffd04 	addi	sp,sp,-12
  225318:	dc000015 	stw	r16,0(sp)
  22531c:	040008f4 	movhi	r16,35
  225320:	dc400115 	stw	r17,4(sp)
  225324:	84120204 	addi	r16,r16,18440
  225328:	2023883a 	mov	r17,r4
  22532c:	2809883a 	mov	r4,r5
  225330:	dfc00215 	stw	ra,8(sp)
  225334:	80000015 	stw	zero,0(r16)
  225338:	022dcdc0 	call	22dcdc <close>
  22533c:	00ffffc4 	movi	r3,-1
  225340:	10c00526 	beq	r2,r3,225358 <_close_r+0x44>
  225344:	dfc00217 	ldw	ra,8(sp)
  225348:	dc400117 	ldw	r17,4(sp)
  22534c:	dc000017 	ldw	r16,0(sp)
  225350:	dec00304 	addi	sp,sp,12
  225354:	f800283a 	ret
  225358:	80c00017 	ldw	r3,0(r16)
  22535c:	183ff926 	beq	r3,zero,225344 <_gp+0xfffea7bc>
  225360:	88c00015 	stw	r3,0(r17)
  225364:	003ff706 	br	225344 <_gp+0xfffea7bc>

00225368 <quorem>:
  225368:	defff704 	addi	sp,sp,-36
  22536c:	dc800215 	stw	r18,8(sp)
  225370:	20800417 	ldw	r2,16(r4)
  225374:	2c800417 	ldw	r18,16(r5)
  225378:	dfc00815 	stw	ra,32(sp)
  22537c:	ddc00715 	stw	r23,28(sp)
  225380:	dd800615 	stw	r22,24(sp)
  225384:	dd400515 	stw	r21,20(sp)
  225388:	dd000415 	stw	r20,16(sp)
  22538c:	dcc00315 	stw	r19,12(sp)
  225390:	dc400115 	stw	r17,4(sp)
  225394:	dc000015 	stw	r16,0(sp)
  225398:	14807116 	blt	r2,r18,225560 <quorem+0x1f8>
  22539c:	94bfffc4 	addi	r18,r18,-1
  2253a0:	94ad883a 	add	r22,r18,r18
  2253a4:	b5ad883a 	add	r22,r22,r22
  2253a8:	2c400504 	addi	r17,r5,20
  2253ac:	8da9883a 	add	r20,r17,r22
  2253b0:	25400504 	addi	r21,r4,20
  2253b4:	282f883a 	mov	r23,r5
  2253b8:	adad883a 	add	r22,r21,r22
  2253bc:	a1400017 	ldw	r5,0(r20)
  2253c0:	2021883a 	mov	r16,r4
  2253c4:	b1000017 	ldw	r4,0(r22)
  2253c8:	29400044 	addi	r5,r5,1
  2253cc:	022b57c0 	call	22b57c <__udivsi3>
  2253d0:	1027883a 	mov	r19,r2
  2253d4:	10002c26 	beq	r2,zero,225488 <quorem+0x120>
  2253d8:	a813883a 	mov	r9,r21
  2253dc:	880b883a 	mov	r5,r17
  2253e0:	0009883a 	mov	r4,zero
  2253e4:	000d883a 	mov	r6,zero
  2253e8:	2a000017 	ldw	r8,0(r5)
  2253ec:	49c00017 	ldw	r7,0(r9)
  2253f0:	29400104 	addi	r5,r5,4
  2253f4:	40bfffcc 	andi	r2,r8,65535
  2253f8:	14c5383a 	mul	r2,r2,r19
  2253fc:	4010d43a 	srli	r8,r8,16
  225400:	38ffffcc 	andi	r3,r7,65535
  225404:	1105883a 	add	r2,r2,r4
  225408:	1008d43a 	srli	r4,r2,16
  22540c:	44d1383a 	mul	r8,r8,r19
  225410:	198d883a 	add	r6,r3,r6
  225414:	10ffffcc 	andi	r3,r2,65535
  225418:	30c7c83a 	sub	r3,r6,r3
  22541c:	380ed43a 	srli	r7,r7,16
  225420:	4105883a 	add	r2,r8,r4
  225424:	180dd43a 	srai	r6,r3,16
  225428:	113fffcc 	andi	r4,r2,65535
  22542c:	390fc83a 	sub	r7,r7,r4
  225430:	398d883a 	add	r6,r7,r6
  225434:	300e943a 	slli	r7,r6,16
  225438:	18ffffcc 	andi	r3,r3,65535
  22543c:	1008d43a 	srli	r4,r2,16
  225440:	38ceb03a 	or	r7,r7,r3
  225444:	49c00015 	stw	r7,0(r9)
  225448:	300dd43a 	srai	r6,r6,16
  22544c:	4a400104 	addi	r9,r9,4
  225450:	a17fe52e 	bgeu	r20,r5,2253e8 <_gp+0xfffea860>
  225454:	b0800017 	ldw	r2,0(r22)
  225458:	10000b1e 	bne	r2,zero,225488 <quorem+0x120>
  22545c:	b0bfff04 	addi	r2,r22,-4
  225460:	a880082e 	bgeu	r21,r2,225484 <quorem+0x11c>
  225464:	b0ffff17 	ldw	r3,-4(r22)
  225468:	18000326 	beq	r3,zero,225478 <quorem+0x110>
  22546c:	00000506 	br	225484 <quorem+0x11c>
  225470:	10c00017 	ldw	r3,0(r2)
  225474:	1800031e 	bne	r3,zero,225484 <quorem+0x11c>
  225478:	10bfff04 	addi	r2,r2,-4
  22547c:	94bfffc4 	addi	r18,r18,-1
  225480:	a8bffb36 	bltu	r21,r2,225470 <_gp+0xfffea8e8>
  225484:	84800415 	stw	r18,16(r16)
  225488:	b80b883a 	mov	r5,r23
  22548c:	8009883a 	mov	r4,r16
  225490:	0227f380 	call	227f38 <__mcmp>
  225494:	10002616 	blt	r2,zero,225530 <quorem+0x1c8>
  225498:	9cc00044 	addi	r19,r19,1
  22549c:	a805883a 	mov	r2,r21
  2254a0:	000b883a 	mov	r5,zero
  2254a4:	11000017 	ldw	r4,0(r2)
  2254a8:	89800017 	ldw	r6,0(r17)
  2254ac:	10800104 	addi	r2,r2,4
  2254b0:	20ffffcc 	andi	r3,r4,65535
  2254b4:	194b883a 	add	r5,r3,r5
  2254b8:	30ffffcc 	andi	r3,r6,65535
  2254bc:	28c7c83a 	sub	r3,r5,r3
  2254c0:	300cd43a 	srli	r6,r6,16
  2254c4:	2008d43a 	srli	r4,r4,16
  2254c8:	180bd43a 	srai	r5,r3,16
  2254cc:	18ffffcc 	andi	r3,r3,65535
  2254d0:	2189c83a 	sub	r4,r4,r6
  2254d4:	2149883a 	add	r4,r4,r5
  2254d8:	200c943a 	slli	r6,r4,16
  2254dc:	8c400104 	addi	r17,r17,4
  2254e0:	200bd43a 	srai	r5,r4,16
  2254e4:	30c6b03a 	or	r3,r6,r3
  2254e8:	10ffff15 	stw	r3,-4(r2)
  2254ec:	a47fed2e 	bgeu	r20,r17,2254a4 <_gp+0xfffea91c>
  2254f0:	9485883a 	add	r2,r18,r18
  2254f4:	1085883a 	add	r2,r2,r2
  2254f8:	a887883a 	add	r3,r21,r2
  2254fc:	18800017 	ldw	r2,0(r3)
  225500:	10000b1e 	bne	r2,zero,225530 <quorem+0x1c8>
  225504:	18bfff04 	addi	r2,r3,-4
  225508:	a880082e 	bgeu	r21,r2,22552c <quorem+0x1c4>
  22550c:	18ffff17 	ldw	r3,-4(r3)
  225510:	18000326 	beq	r3,zero,225520 <quorem+0x1b8>
  225514:	00000506 	br	22552c <quorem+0x1c4>
  225518:	10c00017 	ldw	r3,0(r2)
  22551c:	1800031e 	bne	r3,zero,22552c <quorem+0x1c4>
  225520:	10bfff04 	addi	r2,r2,-4
  225524:	94bfffc4 	addi	r18,r18,-1
  225528:	a8bffb36 	bltu	r21,r2,225518 <_gp+0xfffea990>
  22552c:	84800415 	stw	r18,16(r16)
  225530:	9805883a 	mov	r2,r19
  225534:	dfc00817 	ldw	ra,32(sp)
  225538:	ddc00717 	ldw	r23,28(sp)
  22553c:	dd800617 	ldw	r22,24(sp)
  225540:	dd400517 	ldw	r21,20(sp)
  225544:	dd000417 	ldw	r20,16(sp)
  225548:	dcc00317 	ldw	r19,12(sp)
  22554c:	dc800217 	ldw	r18,8(sp)
  225550:	dc400117 	ldw	r17,4(sp)
  225554:	dc000017 	ldw	r16,0(sp)
  225558:	dec00904 	addi	sp,sp,36
  22555c:	f800283a 	ret
  225560:	0005883a 	mov	r2,zero
  225564:	003ff306 	br	225534 <_gp+0xfffea9ac>

00225568 <_dtoa_r>:
  225568:	20801017 	ldw	r2,64(r4)
  22556c:	deffde04 	addi	sp,sp,-136
  225570:	df002015 	stw	fp,128(sp)
  225574:	dcc01b15 	stw	r19,108(sp)
  225578:	dc801a15 	stw	r18,104(sp)
  22557c:	dc401915 	stw	r17,100(sp)
  225580:	dc001815 	stw	r16,96(sp)
  225584:	dfc02115 	stw	ra,132(sp)
  225588:	ddc01f15 	stw	r23,124(sp)
  22558c:	dd801e15 	stw	r22,120(sp)
  225590:	dd401d15 	stw	r21,116(sp)
  225594:	dd001c15 	stw	r20,112(sp)
  225598:	d9c00315 	stw	r7,12(sp)
  22559c:	2039883a 	mov	fp,r4
  2255a0:	3023883a 	mov	r17,r6
  2255a4:	2825883a 	mov	r18,r5
  2255a8:	dc002417 	ldw	r16,144(sp)
  2255ac:	3027883a 	mov	r19,r6
  2255b0:	10000826 	beq	r2,zero,2255d4 <_dtoa_r+0x6c>
  2255b4:	21801117 	ldw	r6,68(r4)
  2255b8:	00c00044 	movi	r3,1
  2255bc:	100b883a 	mov	r5,r2
  2255c0:	1986983a 	sll	r3,r3,r6
  2255c4:	11800115 	stw	r6,4(r2)
  2255c8:	10c00215 	stw	r3,8(r2)
  2255cc:	02277180 	call	227718 <_Bfree>
  2255d0:	e0001015 	stw	zero,64(fp)
  2255d4:	88002e16 	blt	r17,zero,225690 <_dtoa_r+0x128>
  2255d8:	80000015 	stw	zero,0(r16)
  2255dc:	889ffc2c 	andhi	r2,r17,32752
  2255e0:	00dffc34 	movhi	r3,32752
  2255e4:	10c01c26 	beq	r2,r3,225658 <_dtoa_r+0xf0>
  2255e8:	000d883a 	mov	r6,zero
  2255ec:	000f883a 	mov	r7,zero
  2255f0:	9009883a 	mov	r4,r18
  2255f4:	980b883a 	mov	r5,r19
  2255f8:	022c7cc0 	call	22c7cc <__eqdf2>
  2255fc:	10002b1e 	bne	r2,zero,2256ac <_dtoa_r+0x144>
  225600:	d9c02317 	ldw	r7,140(sp)
  225604:	00800044 	movi	r2,1
  225608:	38800015 	stw	r2,0(r7)
  22560c:	d8802517 	ldw	r2,148(sp)
  225610:	10019e26 	beq	r2,zero,225c8c <_dtoa_r+0x724>
  225614:	d8c02517 	ldw	r3,148(sp)
  225618:	008008f4 	movhi	r2,35
  22561c:	10835844 	addi	r2,r2,3425
  225620:	18800015 	stw	r2,0(r3)
  225624:	10bfffc4 	addi	r2,r2,-1
  225628:	dfc02117 	ldw	ra,132(sp)
  22562c:	df002017 	ldw	fp,128(sp)
  225630:	ddc01f17 	ldw	r23,124(sp)
  225634:	dd801e17 	ldw	r22,120(sp)
  225638:	dd401d17 	ldw	r21,116(sp)
  22563c:	dd001c17 	ldw	r20,112(sp)
  225640:	dcc01b17 	ldw	r19,108(sp)
  225644:	dc801a17 	ldw	r18,104(sp)
  225648:	dc401917 	ldw	r17,100(sp)
  22564c:	dc001817 	ldw	r16,96(sp)
  225650:	dec02204 	addi	sp,sp,136
  225654:	f800283a 	ret
  225658:	d8c02317 	ldw	r3,140(sp)
  22565c:	0089c3c4 	movi	r2,9999
  225660:	18800015 	stw	r2,0(r3)
  225664:	90017726 	beq	r18,zero,225c44 <_dtoa_r+0x6dc>
  225668:	008008f4 	movhi	r2,35
  22566c:	10836404 	addi	r2,r2,3472
  225670:	d9002517 	ldw	r4,148(sp)
  225674:	203fec26 	beq	r4,zero,225628 <_gp+0xfffeaaa0>
  225678:	10c000c7 	ldb	r3,3(r2)
  22567c:	1801781e 	bne	r3,zero,225c60 <_dtoa_r+0x6f8>
  225680:	10c000c4 	addi	r3,r2,3
  225684:	d9802517 	ldw	r6,148(sp)
  225688:	30c00015 	stw	r3,0(r6)
  22568c:	003fe606 	br	225628 <_gp+0xfffeaaa0>
  225690:	04e00034 	movhi	r19,32768
  225694:	9cffffc4 	addi	r19,r19,-1
  225698:	00800044 	movi	r2,1
  22569c:	8ce6703a 	and	r19,r17,r19
  2256a0:	80800015 	stw	r2,0(r16)
  2256a4:	9823883a 	mov	r17,r19
  2256a8:	003fcc06 	br	2255dc <_gp+0xfffeaa54>
  2256ac:	d8800204 	addi	r2,sp,8
  2256b0:	d8800015 	stw	r2,0(sp)
  2256b4:	d9c00104 	addi	r7,sp,4
  2256b8:	900b883a 	mov	r5,r18
  2256bc:	980d883a 	mov	r6,r19
  2256c0:	e009883a 	mov	r4,fp
  2256c4:	8820d53a 	srli	r16,r17,20
  2256c8:	02283040 	call	228304 <__d2b>
  2256cc:	d8800915 	stw	r2,36(sp)
  2256d0:	8001651e 	bne	r16,zero,225c68 <_dtoa_r+0x700>
  2256d4:	dd800217 	ldw	r22,8(sp)
  2256d8:	dc000117 	ldw	r16,4(sp)
  2256dc:	00800804 	movi	r2,32
  2256e0:	b421883a 	add	r16,r22,r16
  2256e4:	80c10c84 	addi	r3,r16,1074
  2256e8:	10c2d10e 	bge	r2,r3,226230 <_dtoa_r+0xcc8>
  2256ec:	00801004 	movi	r2,64
  2256f0:	81010484 	addi	r4,r16,1042
  2256f4:	10c7c83a 	sub	r3,r2,r3
  2256f8:	9108d83a 	srl	r4,r18,r4
  2256fc:	88e2983a 	sll	r17,r17,r3
  225700:	2448b03a 	or	r4,r4,r17
  225704:	022db940 	call	22db94 <__floatunsidf>
  225708:	017f8434 	movhi	r5,65040
  22570c:	01800044 	movi	r6,1
  225710:	1009883a 	mov	r4,r2
  225714:	194b883a 	add	r5,r3,r5
  225718:	843fffc4 	addi	r16,r16,-1
  22571c:	d9801115 	stw	r6,68(sp)
  225720:	000d883a 	mov	r6,zero
  225724:	01cffe34 	movhi	r7,16376
  225728:	022d13c0 	call	22d13c <__subdf3>
  22572c:	0198dbf4 	movhi	r6,25455
  225730:	01cff4f4 	movhi	r7,16339
  225734:	3190d844 	addi	r6,r6,17249
  225738:	39e1e9c4 	addi	r7,r7,-30809
  22573c:	1009883a 	mov	r4,r2
  225740:	180b883a 	mov	r5,r3
  225744:	022ca240 	call	22ca24 <__muldf3>
  225748:	01a2d874 	movhi	r6,35681
  22574c:	01cff1f4 	movhi	r7,16327
  225750:	31b22cc4 	addi	r6,r6,-14157
  225754:	39e28a04 	addi	r7,r7,-30168
  225758:	180b883a 	mov	r5,r3
  22575c:	1009883a 	mov	r4,r2
  225760:	022b6380 	call	22b638 <__adddf3>
  225764:	8009883a 	mov	r4,r16
  225768:	1029883a 	mov	r20,r2
  22576c:	1823883a 	mov	r17,r3
  225770:	022dab80 	call	22dab8 <__floatsidf>
  225774:	019427f4 	movhi	r6,20639
  225778:	01cff4f4 	movhi	r7,16339
  22577c:	319e7ec4 	addi	r6,r6,31227
  225780:	39d104c4 	addi	r7,r7,17427
  225784:	1009883a 	mov	r4,r2
  225788:	180b883a 	mov	r5,r3
  22578c:	022ca240 	call	22ca24 <__muldf3>
  225790:	100d883a 	mov	r6,r2
  225794:	180f883a 	mov	r7,r3
  225798:	a009883a 	mov	r4,r20
  22579c:	880b883a 	mov	r5,r17
  2257a0:	022b6380 	call	22b638 <__adddf3>
  2257a4:	1009883a 	mov	r4,r2
  2257a8:	180b883a 	mov	r5,r3
  2257ac:	1029883a 	mov	r20,r2
  2257b0:	1823883a 	mov	r17,r3
  2257b4:	022da380 	call	22da38 <__fixdfsi>
  2257b8:	000d883a 	mov	r6,zero
  2257bc:	000f883a 	mov	r7,zero
  2257c0:	a009883a 	mov	r4,r20
  2257c4:	880b883a 	mov	r5,r17
  2257c8:	d8800515 	stw	r2,20(sp)
  2257cc:	022c9300 	call	22c930 <__ledf2>
  2257d0:	10028716 	blt	r2,zero,2261f0 <_dtoa_r+0xc88>
  2257d4:	d8c00517 	ldw	r3,20(sp)
  2257d8:	00800584 	movi	r2,22
  2257dc:	10c27536 	bltu	r2,r3,2261b4 <_dtoa_r+0xc4c>
  2257e0:	180490fa 	slli	r2,r3,3
  2257e4:	00c008f4 	movhi	r3,35
  2257e8:	18c37f04 	addi	r3,r3,3580
  2257ec:	1885883a 	add	r2,r3,r2
  2257f0:	11000017 	ldw	r4,0(r2)
  2257f4:	11400117 	ldw	r5,4(r2)
  2257f8:	900d883a 	mov	r6,r18
  2257fc:	980f883a 	mov	r7,r19
  225800:	022c8540 	call	22c854 <__gedf2>
  225804:	00828d0e 	bge	zero,r2,22623c <_dtoa_r+0xcd4>
  225808:	d9000517 	ldw	r4,20(sp)
  22580c:	d8000e15 	stw	zero,56(sp)
  225810:	213fffc4 	addi	r4,r4,-1
  225814:	d9000515 	stw	r4,20(sp)
  225818:	b42dc83a 	sub	r22,r22,r16
  22581c:	b5bfffc4 	addi	r22,r22,-1
  225820:	b0026f16 	blt	r22,zero,2261e0 <_dtoa_r+0xc78>
  225824:	d8000815 	stw	zero,32(sp)
  225828:	d9c00517 	ldw	r7,20(sp)
  22582c:	38026416 	blt	r7,zero,2261c0 <_dtoa_r+0xc58>
  225830:	b1ed883a 	add	r22,r22,r7
  225834:	d9c00d15 	stw	r7,52(sp)
  225838:	d8000a15 	stw	zero,40(sp)
  22583c:	d9800317 	ldw	r6,12(sp)
  225840:	00800244 	movi	r2,9
  225844:	11811436 	bltu	r2,r6,225c98 <_dtoa_r+0x730>
  225848:	00800144 	movi	r2,5
  22584c:	1184e10e 	bge	r2,r6,226bd4 <_dtoa_r+0x166c>
  225850:	31bfff04 	addi	r6,r6,-4
  225854:	d9800315 	stw	r6,12(sp)
  225858:	0023883a 	mov	r17,zero
  22585c:	d9800317 	ldw	r6,12(sp)
  225860:	008000c4 	movi	r2,3
  225864:	30836726 	beq	r6,r2,226604 <_dtoa_r+0x109c>
  225868:	1183410e 	bge	r2,r6,226570 <_dtoa_r+0x1008>
  22586c:	d9c00317 	ldw	r7,12(sp)
  225870:	00800104 	movi	r2,4
  225874:	38827c26 	beq	r7,r2,226268 <_dtoa_r+0xd00>
  225878:	00800144 	movi	r2,5
  22587c:	3884c41e 	bne	r7,r2,226b90 <_dtoa_r+0x1628>
  225880:	00800044 	movi	r2,1
  225884:	d8800b15 	stw	r2,44(sp)
  225888:	d8c00517 	ldw	r3,20(sp)
  22588c:	d9002217 	ldw	r4,136(sp)
  225890:	1907883a 	add	r3,r3,r4
  225894:	19800044 	addi	r6,r3,1
  225898:	d8c00c15 	stw	r3,48(sp)
  22589c:	d9800615 	stw	r6,24(sp)
  2258a0:	0183a40e 	bge	zero,r6,226734 <_dtoa_r+0x11cc>
  2258a4:	d9800617 	ldw	r6,24(sp)
  2258a8:	3021883a 	mov	r16,r6
  2258ac:	e0001115 	stw	zero,68(fp)
  2258b0:	008005c4 	movi	r2,23
  2258b4:	1184c92e 	bgeu	r2,r6,226bdc <_dtoa_r+0x1674>
  2258b8:	00c00044 	movi	r3,1
  2258bc:	00800104 	movi	r2,4
  2258c0:	1085883a 	add	r2,r2,r2
  2258c4:	11000504 	addi	r4,r2,20
  2258c8:	180b883a 	mov	r5,r3
  2258cc:	18c00044 	addi	r3,r3,1
  2258d0:	313ffb2e 	bgeu	r6,r4,2258c0 <_gp+0xfffead38>
  2258d4:	e1401115 	stw	r5,68(fp)
  2258d8:	e009883a 	mov	r4,fp
  2258dc:	02276700 	call	227670 <_Balloc>
  2258e0:	d8800715 	stw	r2,28(sp)
  2258e4:	e0801015 	stw	r2,64(fp)
  2258e8:	00800384 	movi	r2,14
  2258ec:	1400f736 	bltu	r2,r16,225ccc <_dtoa_r+0x764>
  2258f0:	8800f626 	beq	r17,zero,225ccc <_dtoa_r+0x764>
  2258f4:	d9c00517 	ldw	r7,20(sp)
  2258f8:	01c39a0e 	bge	zero,r7,226764 <_dtoa_r+0x11fc>
  2258fc:	388003cc 	andi	r2,r7,15
  225900:	100490fa 	slli	r2,r2,3
  225904:	382bd13a 	srai	r21,r7,4
  225908:	00c008f4 	movhi	r3,35
  22590c:	18c37f04 	addi	r3,r3,3580
  225910:	1885883a 	add	r2,r3,r2
  225914:	a8c0040c 	andi	r3,r21,16
  225918:	12400017 	ldw	r9,0(r2)
  22591c:	12000117 	ldw	r8,4(r2)
  225920:	18037926 	beq	r3,zero,226708 <_dtoa_r+0x11a0>
  225924:	008008f4 	movhi	r2,35
  225928:	10837504 	addi	r2,r2,3540
  22592c:	11800817 	ldw	r6,32(r2)
  225930:	11c00917 	ldw	r7,36(r2)
  225934:	9009883a 	mov	r4,r18
  225938:	980b883a 	mov	r5,r19
  22593c:	da001715 	stw	r8,92(sp)
  225940:	da401615 	stw	r9,88(sp)
  225944:	022bee40 	call	22bee4 <__divdf3>
  225948:	da001717 	ldw	r8,92(sp)
  22594c:	da401617 	ldw	r9,88(sp)
  225950:	ad4003cc 	andi	r21,r21,15
  225954:	040000c4 	movi	r16,3
  225958:	1023883a 	mov	r17,r2
  22595c:	1829883a 	mov	r20,r3
  225960:	a8001126 	beq	r21,zero,2259a8 <_dtoa_r+0x440>
  225964:	05c008f4 	movhi	r23,35
  225968:	bdc37504 	addi	r23,r23,3540
  22596c:	4805883a 	mov	r2,r9
  225970:	4007883a 	mov	r3,r8
  225974:	a980004c 	andi	r6,r21,1
  225978:	1009883a 	mov	r4,r2
  22597c:	a82bd07a 	srai	r21,r21,1
  225980:	180b883a 	mov	r5,r3
  225984:	30000426 	beq	r6,zero,225998 <_dtoa_r+0x430>
  225988:	b9800017 	ldw	r6,0(r23)
  22598c:	b9c00117 	ldw	r7,4(r23)
  225990:	84000044 	addi	r16,r16,1
  225994:	022ca240 	call	22ca24 <__muldf3>
  225998:	bdc00204 	addi	r23,r23,8
  22599c:	a83ff51e 	bne	r21,zero,225974 <_gp+0xfffeadec>
  2259a0:	1013883a 	mov	r9,r2
  2259a4:	1811883a 	mov	r8,r3
  2259a8:	480d883a 	mov	r6,r9
  2259ac:	400f883a 	mov	r7,r8
  2259b0:	8809883a 	mov	r4,r17
  2259b4:	a00b883a 	mov	r5,r20
  2259b8:	022bee40 	call	22bee4 <__divdf3>
  2259bc:	d8800f15 	stw	r2,60(sp)
  2259c0:	d8c01015 	stw	r3,64(sp)
  2259c4:	d8c00e17 	ldw	r3,56(sp)
  2259c8:	18000626 	beq	r3,zero,2259e4 <_dtoa_r+0x47c>
  2259cc:	d9000f17 	ldw	r4,60(sp)
  2259d0:	d9401017 	ldw	r5,64(sp)
  2259d4:	000d883a 	mov	r6,zero
  2259d8:	01cffc34 	movhi	r7,16368
  2259dc:	022c9300 	call	22c930 <__ledf2>
  2259e0:	10040b16 	blt	r2,zero,226a10 <_dtoa_r+0x14a8>
  2259e4:	8009883a 	mov	r4,r16
  2259e8:	022dab80 	call	22dab8 <__floatsidf>
  2259ec:	d9800f17 	ldw	r6,60(sp)
  2259f0:	d9c01017 	ldw	r7,64(sp)
  2259f4:	1009883a 	mov	r4,r2
  2259f8:	180b883a 	mov	r5,r3
  2259fc:	022ca240 	call	22ca24 <__muldf3>
  225a00:	000d883a 	mov	r6,zero
  225a04:	01d00734 	movhi	r7,16412
  225a08:	1009883a 	mov	r4,r2
  225a0c:	180b883a 	mov	r5,r3
  225a10:	022b6380 	call	22b638 <__adddf3>
  225a14:	1021883a 	mov	r16,r2
  225a18:	d8800617 	ldw	r2,24(sp)
  225a1c:	047f3034 	movhi	r17,64704
  225a20:	1c63883a 	add	r17,r3,r17
  225a24:	10031826 	beq	r2,zero,226688 <_dtoa_r+0x1120>
  225a28:	d8c00517 	ldw	r3,20(sp)
  225a2c:	db000617 	ldw	r12,24(sp)
  225a30:	d8c01315 	stw	r3,76(sp)
  225a34:	d9000b17 	ldw	r4,44(sp)
  225a38:	20038f26 	beq	r4,zero,226878 <_dtoa_r+0x1310>
  225a3c:	60bfffc4 	addi	r2,r12,-1
  225a40:	100490fa 	slli	r2,r2,3
  225a44:	00c008f4 	movhi	r3,35
  225a48:	18c37f04 	addi	r3,r3,3580
  225a4c:	1885883a 	add	r2,r3,r2
  225a50:	11800017 	ldw	r6,0(r2)
  225a54:	11c00117 	ldw	r7,4(r2)
  225a58:	d8800717 	ldw	r2,28(sp)
  225a5c:	0009883a 	mov	r4,zero
  225a60:	014ff834 	movhi	r5,16352
  225a64:	db001615 	stw	r12,88(sp)
  225a68:	15c00044 	addi	r23,r2,1
  225a6c:	022bee40 	call	22bee4 <__divdf3>
  225a70:	800d883a 	mov	r6,r16
  225a74:	880f883a 	mov	r7,r17
  225a78:	1009883a 	mov	r4,r2
  225a7c:	180b883a 	mov	r5,r3
  225a80:	022d13c0 	call	22d13c <__subdf3>
  225a84:	d9401017 	ldw	r5,64(sp)
  225a88:	d9000f17 	ldw	r4,60(sp)
  225a8c:	102b883a 	mov	r21,r2
  225a90:	d8c01215 	stw	r3,72(sp)
  225a94:	022da380 	call	22da38 <__fixdfsi>
  225a98:	1009883a 	mov	r4,r2
  225a9c:	1029883a 	mov	r20,r2
  225aa0:	022dab80 	call	22dab8 <__floatsidf>
  225aa4:	d9000f17 	ldw	r4,60(sp)
  225aa8:	d9401017 	ldw	r5,64(sp)
  225aac:	100d883a 	mov	r6,r2
  225ab0:	180f883a 	mov	r7,r3
  225ab4:	022d13c0 	call	22d13c <__subdf3>
  225ab8:	1823883a 	mov	r17,r3
  225abc:	d8c00717 	ldw	r3,28(sp)
  225ac0:	d9401217 	ldw	r5,72(sp)
  225ac4:	a2000c04 	addi	r8,r20,48
  225ac8:	1021883a 	mov	r16,r2
  225acc:	1a000005 	stb	r8,0(r3)
  225ad0:	800d883a 	mov	r6,r16
  225ad4:	880f883a 	mov	r7,r17
  225ad8:	a809883a 	mov	r4,r21
  225adc:	4029883a 	mov	r20,r8
  225ae0:	022c8540 	call	22c854 <__gedf2>
  225ae4:	00841d16 	blt	zero,r2,226b5c <_dtoa_r+0x15f4>
  225ae8:	800d883a 	mov	r6,r16
  225aec:	880f883a 	mov	r7,r17
  225af0:	0009883a 	mov	r4,zero
  225af4:	014ffc34 	movhi	r5,16368
  225af8:	022d13c0 	call	22d13c <__subdf3>
  225afc:	d9401217 	ldw	r5,72(sp)
  225b00:	100d883a 	mov	r6,r2
  225b04:	180f883a 	mov	r7,r3
  225b08:	a809883a 	mov	r4,r21
  225b0c:	022c8540 	call	22c854 <__gedf2>
  225b10:	db001617 	ldw	r12,88(sp)
  225b14:	00840e16 	blt	zero,r2,226b50 <_dtoa_r+0x15e8>
  225b18:	00800044 	movi	r2,1
  225b1c:	13006b0e 	bge	r2,r12,225ccc <_dtoa_r+0x764>
  225b20:	d9000717 	ldw	r4,28(sp)
  225b24:	dd800f15 	stw	r22,60(sp)
  225b28:	dcc01015 	stw	r19,64(sp)
  225b2c:	2319883a 	add	r12,r4,r12
  225b30:	dcc01217 	ldw	r19,72(sp)
  225b34:	602d883a 	mov	r22,r12
  225b38:	dc801215 	stw	r18,72(sp)
  225b3c:	b825883a 	mov	r18,r23
  225b40:	00000906 	br	225b68 <_dtoa_r+0x600>
  225b44:	022d13c0 	call	22d13c <__subdf3>
  225b48:	a80d883a 	mov	r6,r21
  225b4c:	980f883a 	mov	r7,r19
  225b50:	1009883a 	mov	r4,r2
  225b54:	180b883a 	mov	r5,r3
  225b58:	022c9300 	call	22c930 <__ledf2>
  225b5c:	1003e816 	blt	r2,zero,226b00 <_dtoa_r+0x1598>
  225b60:	b825883a 	mov	r18,r23
  225b64:	bd83e926 	beq	r23,r22,226b0c <_dtoa_r+0x15a4>
  225b68:	a809883a 	mov	r4,r21
  225b6c:	980b883a 	mov	r5,r19
  225b70:	000d883a 	mov	r6,zero
  225b74:	01d00934 	movhi	r7,16420
  225b78:	022ca240 	call	22ca24 <__muldf3>
  225b7c:	000d883a 	mov	r6,zero
  225b80:	01d00934 	movhi	r7,16420
  225b84:	8009883a 	mov	r4,r16
  225b88:	880b883a 	mov	r5,r17
  225b8c:	102b883a 	mov	r21,r2
  225b90:	1827883a 	mov	r19,r3
  225b94:	022ca240 	call	22ca24 <__muldf3>
  225b98:	180b883a 	mov	r5,r3
  225b9c:	1009883a 	mov	r4,r2
  225ba0:	1821883a 	mov	r16,r3
  225ba4:	1023883a 	mov	r17,r2
  225ba8:	022da380 	call	22da38 <__fixdfsi>
  225bac:	1009883a 	mov	r4,r2
  225bb0:	1029883a 	mov	r20,r2
  225bb4:	022dab80 	call	22dab8 <__floatsidf>
  225bb8:	8809883a 	mov	r4,r17
  225bbc:	800b883a 	mov	r5,r16
  225bc0:	100d883a 	mov	r6,r2
  225bc4:	180f883a 	mov	r7,r3
  225bc8:	022d13c0 	call	22d13c <__subdf3>
  225bcc:	a5000c04 	addi	r20,r20,48
  225bd0:	a80d883a 	mov	r6,r21
  225bd4:	980f883a 	mov	r7,r19
  225bd8:	1009883a 	mov	r4,r2
  225bdc:	180b883a 	mov	r5,r3
  225be0:	95000005 	stb	r20,0(r18)
  225be4:	1021883a 	mov	r16,r2
  225be8:	1823883a 	mov	r17,r3
  225bec:	022c9300 	call	22c930 <__ledf2>
  225bf0:	bdc00044 	addi	r23,r23,1
  225bf4:	800d883a 	mov	r6,r16
  225bf8:	880f883a 	mov	r7,r17
  225bfc:	0009883a 	mov	r4,zero
  225c00:	014ffc34 	movhi	r5,16368
  225c04:	103fcf0e 	bge	r2,zero,225b44 <_gp+0xfffeafbc>
  225c08:	d8c01317 	ldw	r3,76(sp)
  225c0c:	d8c00515 	stw	r3,20(sp)
  225c10:	d9400917 	ldw	r5,36(sp)
  225c14:	e009883a 	mov	r4,fp
  225c18:	02277180 	call	227718 <_Bfree>
  225c1c:	d9000517 	ldw	r4,20(sp)
  225c20:	d9802317 	ldw	r6,140(sp)
  225c24:	d9c02517 	ldw	r7,148(sp)
  225c28:	b8000005 	stb	zero,0(r23)
  225c2c:	20800044 	addi	r2,r4,1
  225c30:	30800015 	stw	r2,0(r6)
  225c34:	3802aa26 	beq	r7,zero,2266e0 <_dtoa_r+0x1178>
  225c38:	3dc00015 	stw	r23,0(r7)
  225c3c:	d8800717 	ldw	r2,28(sp)
  225c40:	003e7906 	br	225628 <_gp+0xfffeaaa0>
  225c44:	00800434 	movhi	r2,16
  225c48:	10bfffc4 	addi	r2,r2,-1
  225c4c:	88a2703a 	and	r17,r17,r2
  225c50:	883e851e 	bne	r17,zero,225668 <_gp+0xfffeaae0>
  225c54:	008008f4 	movhi	r2,35
  225c58:	10836104 	addi	r2,r2,3460
  225c5c:	003e8406 	br	225670 <_gp+0xfffeaae8>
  225c60:	10c00204 	addi	r3,r2,8
  225c64:	003e8706 	br	225684 <_gp+0xfffeaafc>
  225c68:	01400434 	movhi	r5,16
  225c6c:	297fffc4 	addi	r5,r5,-1
  225c70:	994a703a 	and	r5,r19,r5
  225c74:	9009883a 	mov	r4,r18
  225c78:	843f0044 	addi	r16,r16,-1023
  225c7c:	294ffc34 	orhi	r5,r5,16368
  225c80:	dd800217 	ldw	r22,8(sp)
  225c84:	d8001115 	stw	zero,68(sp)
  225c88:	003ea506 	br	225720 <_gp+0xfffeab98>
  225c8c:	008008f4 	movhi	r2,35
  225c90:	10835804 	addi	r2,r2,3424
  225c94:	003e6406 	br	225628 <_gp+0xfffeaaa0>
  225c98:	e0001115 	stw	zero,68(fp)
  225c9c:	000b883a 	mov	r5,zero
  225ca0:	e009883a 	mov	r4,fp
  225ca4:	02276700 	call	227670 <_Balloc>
  225ca8:	01bfffc4 	movi	r6,-1
  225cac:	01c00044 	movi	r7,1
  225cb0:	d8800715 	stw	r2,28(sp)
  225cb4:	d9800c15 	stw	r6,48(sp)
  225cb8:	e0801015 	stw	r2,64(fp)
  225cbc:	d8000315 	stw	zero,12(sp)
  225cc0:	d9c00b15 	stw	r7,44(sp)
  225cc4:	d9800615 	stw	r6,24(sp)
  225cc8:	d8002215 	stw	zero,136(sp)
  225ccc:	d8800117 	ldw	r2,4(sp)
  225cd0:	10008916 	blt	r2,zero,225ef8 <_dtoa_r+0x990>
  225cd4:	d9000517 	ldw	r4,20(sp)
  225cd8:	00c00384 	movi	r3,14
  225cdc:	19008616 	blt	r3,r4,225ef8 <_dtoa_r+0x990>
  225ce0:	200490fa 	slli	r2,r4,3
  225ce4:	00c008f4 	movhi	r3,35
  225ce8:	d9802217 	ldw	r6,136(sp)
  225cec:	18c37f04 	addi	r3,r3,3580
  225cf0:	1885883a 	add	r2,r3,r2
  225cf4:	14000017 	ldw	r16,0(r2)
  225cf8:	14400117 	ldw	r17,4(r2)
  225cfc:	30016316 	blt	r6,zero,22628c <_dtoa_r+0xd24>
  225d00:	800d883a 	mov	r6,r16
  225d04:	880f883a 	mov	r7,r17
  225d08:	9009883a 	mov	r4,r18
  225d0c:	980b883a 	mov	r5,r19
  225d10:	022bee40 	call	22bee4 <__divdf3>
  225d14:	180b883a 	mov	r5,r3
  225d18:	1009883a 	mov	r4,r2
  225d1c:	022da380 	call	22da38 <__fixdfsi>
  225d20:	1009883a 	mov	r4,r2
  225d24:	102b883a 	mov	r21,r2
  225d28:	022dab80 	call	22dab8 <__floatsidf>
  225d2c:	800d883a 	mov	r6,r16
  225d30:	880f883a 	mov	r7,r17
  225d34:	1009883a 	mov	r4,r2
  225d38:	180b883a 	mov	r5,r3
  225d3c:	022ca240 	call	22ca24 <__muldf3>
  225d40:	100d883a 	mov	r6,r2
  225d44:	180f883a 	mov	r7,r3
  225d48:	9009883a 	mov	r4,r18
  225d4c:	980b883a 	mov	r5,r19
  225d50:	022d13c0 	call	22d13c <__subdf3>
  225d54:	d9c00717 	ldw	r7,28(sp)
  225d58:	1009883a 	mov	r4,r2
  225d5c:	a8800c04 	addi	r2,r21,48
  225d60:	38800005 	stb	r2,0(r7)
  225d64:	3dc00044 	addi	r23,r7,1
  225d68:	d9c00617 	ldw	r7,24(sp)
  225d6c:	01800044 	movi	r6,1
  225d70:	180b883a 	mov	r5,r3
  225d74:	2005883a 	mov	r2,r4
  225d78:	39803826 	beq	r7,r6,225e5c <_dtoa_r+0x8f4>
  225d7c:	000d883a 	mov	r6,zero
  225d80:	01d00934 	movhi	r7,16420
  225d84:	022ca240 	call	22ca24 <__muldf3>
  225d88:	000d883a 	mov	r6,zero
  225d8c:	000f883a 	mov	r7,zero
  225d90:	1009883a 	mov	r4,r2
  225d94:	180b883a 	mov	r5,r3
  225d98:	1025883a 	mov	r18,r2
  225d9c:	1827883a 	mov	r19,r3
  225da0:	022c7cc0 	call	22c7cc <__eqdf2>
  225da4:	103f9a26 	beq	r2,zero,225c10 <_gp+0xfffeb088>
  225da8:	d9c00617 	ldw	r7,24(sp)
  225dac:	d8c00717 	ldw	r3,28(sp)
  225db0:	b829883a 	mov	r20,r23
  225db4:	38bfffc4 	addi	r2,r7,-1
  225db8:	18ad883a 	add	r22,r3,r2
  225dbc:	00000a06 	br	225de8 <_dtoa_r+0x880>
  225dc0:	022ca240 	call	22ca24 <__muldf3>
  225dc4:	000d883a 	mov	r6,zero
  225dc8:	000f883a 	mov	r7,zero
  225dcc:	1009883a 	mov	r4,r2
  225dd0:	180b883a 	mov	r5,r3
  225dd4:	1025883a 	mov	r18,r2
  225dd8:	1827883a 	mov	r19,r3
  225ddc:	b829883a 	mov	r20,r23
  225de0:	022c7cc0 	call	22c7cc <__eqdf2>
  225de4:	103f8a26 	beq	r2,zero,225c10 <_gp+0xfffeb088>
  225de8:	800d883a 	mov	r6,r16
  225dec:	880f883a 	mov	r7,r17
  225df0:	9009883a 	mov	r4,r18
  225df4:	980b883a 	mov	r5,r19
  225df8:	022bee40 	call	22bee4 <__divdf3>
  225dfc:	180b883a 	mov	r5,r3
  225e00:	1009883a 	mov	r4,r2
  225e04:	022da380 	call	22da38 <__fixdfsi>
  225e08:	1009883a 	mov	r4,r2
  225e0c:	102b883a 	mov	r21,r2
  225e10:	022dab80 	call	22dab8 <__floatsidf>
  225e14:	800d883a 	mov	r6,r16
  225e18:	880f883a 	mov	r7,r17
  225e1c:	1009883a 	mov	r4,r2
  225e20:	180b883a 	mov	r5,r3
  225e24:	022ca240 	call	22ca24 <__muldf3>
  225e28:	100d883a 	mov	r6,r2
  225e2c:	180f883a 	mov	r7,r3
  225e30:	9009883a 	mov	r4,r18
  225e34:	980b883a 	mov	r5,r19
  225e38:	022d13c0 	call	22d13c <__subdf3>
  225e3c:	aa000c04 	addi	r8,r21,48
  225e40:	a2000005 	stb	r8,0(r20)
  225e44:	000d883a 	mov	r6,zero
  225e48:	01d00934 	movhi	r7,16420
  225e4c:	1009883a 	mov	r4,r2
  225e50:	180b883a 	mov	r5,r3
  225e54:	a5c00044 	addi	r23,r20,1
  225e58:	b53fd91e 	bne	r22,r20,225dc0 <_gp+0xfffeb238>
  225e5c:	100d883a 	mov	r6,r2
  225e60:	180f883a 	mov	r7,r3
  225e64:	1009883a 	mov	r4,r2
  225e68:	180b883a 	mov	r5,r3
  225e6c:	022b6380 	call	22b638 <__adddf3>
  225e70:	100d883a 	mov	r6,r2
  225e74:	180f883a 	mov	r7,r3
  225e78:	8009883a 	mov	r4,r16
  225e7c:	880b883a 	mov	r5,r17
  225e80:	1027883a 	mov	r19,r2
  225e84:	1825883a 	mov	r18,r3
  225e88:	022c9300 	call	22c930 <__ledf2>
  225e8c:	10000816 	blt	r2,zero,225eb0 <_dtoa_r+0x948>
  225e90:	980d883a 	mov	r6,r19
  225e94:	900f883a 	mov	r7,r18
  225e98:	8009883a 	mov	r4,r16
  225e9c:	880b883a 	mov	r5,r17
  225ea0:	022c7cc0 	call	22c7cc <__eqdf2>
  225ea4:	103f5a1e 	bne	r2,zero,225c10 <_gp+0xfffeb088>
  225ea8:	ad40004c 	andi	r21,r21,1
  225eac:	a83f5826 	beq	r21,zero,225c10 <_gp+0xfffeb088>
  225eb0:	bd3fffc3 	ldbu	r20,-1(r23)
  225eb4:	b8bfffc4 	addi	r2,r23,-1
  225eb8:	1007883a 	mov	r3,r2
  225ebc:	01400e44 	movi	r5,57
  225ec0:	d9800717 	ldw	r6,28(sp)
  225ec4:	00000506 	br	225edc <_dtoa_r+0x974>
  225ec8:	18ffffc4 	addi	r3,r3,-1
  225ecc:	11824726 	beq	r2,r6,2267ec <_dtoa_r+0x1284>
  225ed0:	1d000003 	ldbu	r20,0(r3)
  225ed4:	102f883a 	mov	r23,r2
  225ed8:	10bfffc4 	addi	r2,r2,-1
  225edc:	a1003fcc 	andi	r4,r20,255
  225ee0:	2100201c 	xori	r4,r4,128
  225ee4:	213fe004 	addi	r4,r4,-128
  225ee8:	217ff726 	beq	r4,r5,225ec8 <_gp+0xfffeb340>
  225eec:	a2000044 	addi	r8,r20,1
  225ef0:	12000005 	stb	r8,0(r2)
  225ef4:	003f4606 	br	225c10 <_gp+0xfffeb088>
  225ef8:	d9000b17 	ldw	r4,44(sp)
  225efc:	2000c826 	beq	r4,zero,226220 <_dtoa_r+0xcb8>
  225f00:	d9800317 	ldw	r6,12(sp)
  225f04:	00c00044 	movi	r3,1
  225f08:	1980f90e 	bge	r3,r6,2262f0 <_dtoa_r+0xd88>
  225f0c:	d8800617 	ldw	r2,24(sp)
  225f10:	d8c00a17 	ldw	r3,40(sp)
  225f14:	157fffc4 	addi	r21,r2,-1
  225f18:	1d41f316 	blt	r3,r21,2266e8 <_dtoa_r+0x1180>
  225f1c:	1d6bc83a 	sub	r21,r3,r21
  225f20:	d9c00617 	ldw	r7,24(sp)
  225f24:	3802aa16 	blt	r7,zero,2269d0 <_dtoa_r+0x1468>
  225f28:	dd000817 	ldw	r20,32(sp)
  225f2c:	d8800617 	ldw	r2,24(sp)
  225f30:	d8c00817 	ldw	r3,32(sp)
  225f34:	01400044 	movi	r5,1
  225f38:	e009883a 	mov	r4,fp
  225f3c:	1887883a 	add	r3,r3,r2
  225f40:	d8c00815 	stw	r3,32(sp)
  225f44:	b0ad883a 	add	r22,r22,r2
  225f48:	0227a7c0 	call	227a7c <__i2b>
  225f4c:	1023883a 	mov	r17,r2
  225f50:	a0000826 	beq	r20,zero,225f74 <_dtoa_r+0xa0c>
  225f54:	0580070e 	bge	zero,r22,225f74 <_dtoa_r+0xa0c>
  225f58:	a005883a 	mov	r2,r20
  225f5c:	b500b916 	blt	r22,r20,226244 <_dtoa_r+0xcdc>
  225f60:	d9000817 	ldw	r4,32(sp)
  225f64:	a0a9c83a 	sub	r20,r20,r2
  225f68:	b0adc83a 	sub	r22,r22,r2
  225f6c:	2089c83a 	sub	r4,r4,r2
  225f70:	d9000815 	stw	r4,32(sp)
  225f74:	d9800a17 	ldw	r6,40(sp)
  225f78:	0181810e 	bge	zero,r6,226580 <_dtoa_r+0x1018>
  225f7c:	d9c00b17 	ldw	r7,44(sp)
  225f80:	3800b326 	beq	r7,zero,226250 <_dtoa_r+0xce8>
  225f84:	a800b226 	beq	r21,zero,226250 <_dtoa_r+0xce8>
  225f88:	880b883a 	mov	r5,r17
  225f8c:	a80d883a 	mov	r6,r21
  225f90:	e009883a 	mov	r4,fp
  225f94:	0227cb00 	call	227cb0 <__pow5mult>
  225f98:	d9800917 	ldw	r6,36(sp)
  225f9c:	100b883a 	mov	r5,r2
  225fa0:	e009883a 	mov	r4,fp
  225fa4:	1023883a 	mov	r17,r2
  225fa8:	0227ab80 	call	227ab8 <__multiply>
  225fac:	1021883a 	mov	r16,r2
  225fb0:	d8800a17 	ldw	r2,40(sp)
  225fb4:	d9400917 	ldw	r5,36(sp)
  225fb8:	e009883a 	mov	r4,fp
  225fbc:	1545c83a 	sub	r2,r2,r21
  225fc0:	d8800a15 	stw	r2,40(sp)
  225fc4:	02277180 	call	227718 <_Bfree>
  225fc8:	d8c00a17 	ldw	r3,40(sp)
  225fcc:	18009f1e 	bne	r3,zero,22624c <_dtoa_r+0xce4>
  225fd0:	05c00044 	movi	r23,1
  225fd4:	e009883a 	mov	r4,fp
  225fd8:	b80b883a 	mov	r5,r23
  225fdc:	0227a7c0 	call	227a7c <__i2b>
  225fe0:	d9000d17 	ldw	r4,52(sp)
  225fe4:	102b883a 	mov	r21,r2
  225fe8:	2000ce26 	beq	r4,zero,226324 <_dtoa_r+0xdbc>
  225fec:	200d883a 	mov	r6,r4
  225ff0:	100b883a 	mov	r5,r2
  225ff4:	e009883a 	mov	r4,fp
  225ff8:	0227cb00 	call	227cb0 <__pow5mult>
  225ffc:	d9800317 	ldw	r6,12(sp)
  226000:	102b883a 	mov	r21,r2
  226004:	b981810e 	bge	r23,r6,22660c <_dtoa_r+0x10a4>
  226008:	0027883a 	mov	r19,zero
  22600c:	a8800417 	ldw	r2,16(r21)
  226010:	05c00804 	movi	r23,32
  226014:	10800104 	addi	r2,r2,4
  226018:	1085883a 	add	r2,r2,r2
  22601c:	1085883a 	add	r2,r2,r2
  226020:	a885883a 	add	r2,r21,r2
  226024:	11000017 	ldw	r4,0(r2)
  226028:	02279640 	call	227964 <__hi0bits>
  22602c:	b885c83a 	sub	r2,r23,r2
  226030:	1585883a 	add	r2,r2,r22
  226034:	108007cc 	andi	r2,r2,31
  226038:	1000b326 	beq	r2,zero,226308 <_dtoa_r+0xda0>
  22603c:	00c00804 	movi	r3,32
  226040:	1887c83a 	sub	r3,r3,r2
  226044:	01000104 	movi	r4,4
  226048:	20c2cd0e 	bge	r4,r3,226b80 <_dtoa_r+0x1618>
  22604c:	00c00704 	movi	r3,28
  226050:	1885c83a 	sub	r2,r3,r2
  226054:	d8c00817 	ldw	r3,32(sp)
  226058:	a0a9883a 	add	r20,r20,r2
  22605c:	b0ad883a 	add	r22,r22,r2
  226060:	1887883a 	add	r3,r3,r2
  226064:	d8c00815 	stw	r3,32(sp)
  226068:	d9800817 	ldw	r6,32(sp)
  22606c:	0180040e 	bge	zero,r6,226080 <_dtoa_r+0xb18>
  226070:	800b883a 	mov	r5,r16
  226074:	e009883a 	mov	r4,fp
  226078:	0227df00 	call	227df0 <__lshift>
  22607c:	1021883a 	mov	r16,r2
  226080:	0580050e 	bge	zero,r22,226098 <_dtoa_r+0xb30>
  226084:	a80b883a 	mov	r5,r21
  226088:	b00d883a 	mov	r6,r22
  22608c:	e009883a 	mov	r4,fp
  226090:	0227df00 	call	227df0 <__lshift>
  226094:	102b883a 	mov	r21,r2
  226098:	d9c00e17 	ldw	r7,56(sp)
  22609c:	3801211e 	bne	r7,zero,226524 <_dtoa_r+0xfbc>
  2260a0:	d9800617 	ldw	r6,24(sp)
  2260a4:	0181380e 	bge	zero,r6,226588 <_dtoa_r+0x1020>
  2260a8:	d8c00b17 	ldw	r3,44(sp)
  2260ac:	1800ab1e 	bne	r3,zero,22635c <_dtoa_r+0xdf4>
  2260b0:	dc800717 	ldw	r18,28(sp)
  2260b4:	dcc00617 	ldw	r19,24(sp)
  2260b8:	9029883a 	mov	r20,r18
  2260bc:	00000206 	br	2260c8 <_dtoa_r+0xb60>
  2260c0:	02277400 	call	227740 <__multadd>
  2260c4:	1021883a 	mov	r16,r2
  2260c8:	a80b883a 	mov	r5,r21
  2260cc:	8009883a 	mov	r4,r16
  2260d0:	02253680 	call	225368 <quorem>
  2260d4:	10800c04 	addi	r2,r2,48
  2260d8:	90800005 	stb	r2,0(r18)
  2260dc:	94800044 	addi	r18,r18,1
  2260e0:	9507c83a 	sub	r3,r18,r20
  2260e4:	000f883a 	mov	r7,zero
  2260e8:	01800284 	movi	r6,10
  2260ec:	800b883a 	mov	r5,r16
  2260f0:	e009883a 	mov	r4,fp
  2260f4:	1cfff216 	blt	r3,r19,2260c0 <_gp+0xfffeb538>
  2260f8:	1011883a 	mov	r8,r2
  2260fc:	d8800617 	ldw	r2,24(sp)
  226100:	0082370e 	bge	zero,r2,2269e0 <_dtoa_r+0x1478>
  226104:	d9000717 	ldw	r4,28(sp)
  226108:	0025883a 	mov	r18,zero
  22610c:	20af883a 	add	r23,r4,r2
  226110:	01800044 	movi	r6,1
  226114:	800b883a 	mov	r5,r16
  226118:	e009883a 	mov	r4,fp
  22611c:	da001715 	stw	r8,92(sp)
  226120:	0227df00 	call	227df0 <__lshift>
  226124:	a80b883a 	mov	r5,r21
  226128:	1009883a 	mov	r4,r2
  22612c:	d8800915 	stw	r2,36(sp)
  226130:	0227f380 	call	227f38 <__mcmp>
  226134:	da001717 	ldw	r8,92(sp)
  226138:	0081800e 	bge	zero,r2,22673c <_dtoa_r+0x11d4>
  22613c:	b93fffc3 	ldbu	r4,-1(r23)
  226140:	b8bfffc4 	addi	r2,r23,-1
  226144:	1007883a 	mov	r3,r2
  226148:	01800e44 	movi	r6,57
  22614c:	d9c00717 	ldw	r7,28(sp)
  226150:	00000506 	br	226168 <_dtoa_r+0xc00>
  226154:	18ffffc4 	addi	r3,r3,-1
  226158:	11c12326 	beq	r2,r7,2265e8 <_dtoa_r+0x1080>
  22615c:	19000003 	ldbu	r4,0(r3)
  226160:	102f883a 	mov	r23,r2
  226164:	10bfffc4 	addi	r2,r2,-1
  226168:	21403fcc 	andi	r5,r4,255
  22616c:	2940201c 	xori	r5,r5,128
  226170:	297fe004 	addi	r5,r5,-128
  226174:	29bff726 	beq	r5,r6,226154 <_gp+0xfffeb5cc>
  226178:	21000044 	addi	r4,r4,1
  22617c:	11000005 	stb	r4,0(r2)
  226180:	a80b883a 	mov	r5,r21
  226184:	e009883a 	mov	r4,fp
  226188:	02277180 	call	227718 <_Bfree>
  22618c:	883ea026 	beq	r17,zero,225c10 <_gp+0xfffeb088>
  226190:	90000426 	beq	r18,zero,2261a4 <_dtoa_r+0xc3c>
  226194:	94400326 	beq	r18,r17,2261a4 <_dtoa_r+0xc3c>
  226198:	900b883a 	mov	r5,r18
  22619c:	e009883a 	mov	r4,fp
  2261a0:	02277180 	call	227718 <_Bfree>
  2261a4:	880b883a 	mov	r5,r17
  2261a8:	e009883a 	mov	r4,fp
  2261ac:	02277180 	call	227718 <_Bfree>
  2261b0:	003e9706 	br	225c10 <_gp+0xfffeb088>
  2261b4:	01800044 	movi	r6,1
  2261b8:	d9800e15 	stw	r6,56(sp)
  2261bc:	003d9606 	br	225818 <_gp+0xfffeac90>
  2261c0:	d8800817 	ldw	r2,32(sp)
  2261c4:	d8c00517 	ldw	r3,20(sp)
  2261c8:	d8000d15 	stw	zero,52(sp)
  2261cc:	10c5c83a 	sub	r2,r2,r3
  2261d0:	00c9c83a 	sub	r4,zero,r3
  2261d4:	d8800815 	stw	r2,32(sp)
  2261d8:	d9000a15 	stw	r4,40(sp)
  2261dc:	003d9706 	br	22583c <_gp+0xfffeacb4>
  2261e0:	05adc83a 	sub	r22,zero,r22
  2261e4:	dd800815 	stw	r22,32(sp)
  2261e8:	002d883a 	mov	r22,zero
  2261ec:	003d8e06 	br	225828 <_gp+0xfffeaca0>
  2261f0:	d9000517 	ldw	r4,20(sp)
  2261f4:	022dab80 	call	22dab8 <__floatsidf>
  2261f8:	100d883a 	mov	r6,r2
  2261fc:	180f883a 	mov	r7,r3
  226200:	a009883a 	mov	r4,r20
  226204:	880b883a 	mov	r5,r17
  226208:	022c7cc0 	call	22c7cc <__eqdf2>
  22620c:	103d7126 	beq	r2,zero,2257d4 <_gp+0xfffeac4c>
  226210:	d9c00517 	ldw	r7,20(sp)
  226214:	39ffffc4 	addi	r7,r7,-1
  226218:	d9c00515 	stw	r7,20(sp)
  22621c:	003d6d06 	br	2257d4 <_gp+0xfffeac4c>
  226220:	dd400a17 	ldw	r21,40(sp)
  226224:	dd000817 	ldw	r20,32(sp)
  226228:	0023883a 	mov	r17,zero
  22622c:	003f4806 	br	225f50 <_gp+0xfffeb3c8>
  226230:	10e3c83a 	sub	r17,r2,r3
  226234:	9448983a 	sll	r4,r18,r17
  226238:	003d3206 	br	225704 <_gp+0xfffeab7c>
  22623c:	d8000e15 	stw	zero,56(sp)
  226240:	003d7506 	br	225818 <_gp+0xfffeac90>
  226244:	b005883a 	mov	r2,r22
  226248:	003f4506 	br	225f60 <_gp+0xfffeb3d8>
  22624c:	dc000915 	stw	r16,36(sp)
  226250:	d9800a17 	ldw	r6,40(sp)
  226254:	d9400917 	ldw	r5,36(sp)
  226258:	e009883a 	mov	r4,fp
  22625c:	0227cb00 	call	227cb0 <__pow5mult>
  226260:	1021883a 	mov	r16,r2
  226264:	003f5a06 	br	225fd0 <_gp+0xfffeb448>
  226268:	01c00044 	movi	r7,1
  22626c:	d9c00b15 	stw	r7,44(sp)
  226270:	d8802217 	ldw	r2,136(sp)
  226274:	0081280e 	bge	zero,r2,226718 <_dtoa_r+0x11b0>
  226278:	100d883a 	mov	r6,r2
  22627c:	1021883a 	mov	r16,r2
  226280:	d8800c15 	stw	r2,48(sp)
  226284:	d8800615 	stw	r2,24(sp)
  226288:	003d8806 	br	2258ac <_gp+0xfffead24>
  22628c:	d8800617 	ldw	r2,24(sp)
  226290:	00be9b16 	blt	zero,r2,225d00 <_gp+0xfffeb178>
  226294:	10010f1e 	bne	r2,zero,2266d4 <_dtoa_r+0x116c>
  226298:	880b883a 	mov	r5,r17
  22629c:	000d883a 	mov	r6,zero
  2262a0:	01d00534 	movhi	r7,16404
  2262a4:	8009883a 	mov	r4,r16
  2262a8:	022ca240 	call	22ca24 <__muldf3>
  2262ac:	900d883a 	mov	r6,r18
  2262b0:	980f883a 	mov	r7,r19
  2262b4:	1009883a 	mov	r4,r2
  2262b8:	180b883a 	mov	r5,r3
  2262bc:	022c8540 	call	22c854 <__gedf2>
  2262c0:	002b883a 	mov	r21,zero
  2262c4:	0023883a 	mov	r17,zero
  2262c8:	1000bf16 	blt	r2,zero,2265c8 <_dtoa_r+0x1060>
  2262cc:	d9802217 	ldw	r6,136(sp)
  2262d0:	ddc00717 	ldw	r23,28(sp)
  2262d4:	018c303a 	nor	r6,zero,r6
  2262d8:	d9800515 	stw	r6,20(sp)
  2262dc:	a80b883a 	mov	r5,r21
  2262e0:	e009883a 	mov	r4,fp
  2262e4:	02277180 	call	227718 <_Bfree>
  2262e8:	883e4926 	beq	r17,zero,225c10 <_gp+0xfffeb088>
  2262ec:	003fad06 	br	2261a4 <_gp+0xfffeb61c>
  2262f0:	d9c01117 	ldw	r7,68(sp)
  2262f4:	3801bc26 	beq	r7,zero,2269e8 <_dtoa_r+0x1480>
  2262f8:	10810cc4 	addi	r2,r2,1075
  2262fc:	dd400a17 	ldw	r21,40(sp)
  226300:	dd000817 	ldw	r20,32(sp)
  226304:	003f0a06 	br	225f30 <_gp+0xfffeb3a8>
  226308:	00800704 	movi	r2,28
  22630c:	d9000817 	ldw	r4,32(sp)
  226310:	a0a9883a 	add	r20,r20,r2
  226314:	b0ad883a 	add	r22,r22,r2
  226318:	2089883a 	add	r4,r4,r2
  22631c:	d9000815 	stw	r4,32(sp)
  226320:	003f5106 	br	226068 <_gp+0xfffeb4e0>
  226324:	d8c00317 	ldw	r3,12(sp)
  226328:	b8c1fc0e 	bge	r23,r3,226b1c <_dtoa_r+0x15b4>
  22632c:	0027883a 	mov	r19,zero
  226330:	b805883a 	mov	r2,r23
  226334:	003f3e06 	br	226030 <_gp+0xfffeb4a8>
  226338:	880b883a 	mov	r5,r17
  22633c:	e009883a 	mov	r4,fp
  226340:	000f883a 	mov	r7,zero
  226344:	01800284 	movi	r6,10
  226348:	02277400 	call	227740 <__multadd>
  22634c:	d9000c17 	ldw	r4,48(sp)
  226350:	1023883a 	mov	r17,r2
  226354:	0102040e 	bge	zero,r4,226b68 <_dtoa_r+0x1600>
  226358:	d9000615 	stw	r4,24(sp)
  22635c:	0500050e 	bge	zero,r20,226374 <_dtoa_r+0xe0c>
  226360:	880b883a 	mov	r5,r17
  226364:	a00d883a 	mov	r6,r20
  226368:	e009883a 	mov	r4,fp
  22636c:	0227df00 	call	227df0 <__lshift>
  226370:	1023883a 	mov	r17,r2
  226374:	9801241e 	bne	r19,zero,226808 <_dtoa_r+0x12a0>
  226378:	8829883a 	mov	r20,r17
  22637c:	d9000617 	ldw	r4,24(sp)
  226380:	dcc00717 	ldw	r19,28(sp)
  226384:	9480004c 	andi	r18,r18,1
  226388:	20bfffc4 	addi	r2,r4,-1
  22638c:	9885883a 	add	r2,r19,r2
  226390:	d8800415 	stw	r2,16(sp)
  226394:	dc800615 	stw	r18,24(sp)
  226398:	a80b883a 	mov	r5,r21
  22639c:	8009883a 	mov	r4,r16
  2263a0:	02253680 	call	225368 <quorem>
  2263a4:	880b883a 	mov	r5,r17
  2263a8:	8009883a 	mov	r4,r16
  2263ac:	102f883a 	mov	r23,r2
  2263b0:	0227f380 	call	227f38 <__mcmp>
  2263b4:	a80b883a 	mov	r5,r21
  2263b8:	a00d883a 	mov	r6,r20
  2263bc:	e009883a 	mov	r4,fp
  2263c0:	102d883a 	mov	r22,r2
  2263c4:	0227f980 	call	227f98 <__mdiff>
  2263c8:	1007883a 	mov	r3,r2
  2263cc:	10800317 	ldw	r2,12(r2)
  2263d0:	bc800c04 	addi	r18,r23,48
  2263d4:	180b883a 	mov	r5,r3
  2263d8:	10004e1e 	bne	r2,zero,226514 <_dtoa_r+0xfac>
  2263dc:	8009883a 	mov	r4,r16
  2263e0:	d8c01615 	stw	r3,88(sp)
  2263e4:	0227f380 	call	227f38 <__mcmp>
  2263e8:	d8c01617 	ldw	r3,88(sp)
  2263ec:	e009883a 	mov	r4,fp
  2263f0:	d8801615 	stw	r2,88(sp)
  2263f4:	180b883a 	mov	r5,r3
  2263f8:	02277180 	call	227718 <_Bfree>
  2263fc:	d8801617 	ldw	r2,88(sp)
  226400:	1000041e 	bne	r2,zero,226414 <_dtoa_r+0xeac>
  226404:	d9800317 	ldw	r6,12(sp)
  226408:	3000021e 	bne	r6,zero,226414 <_dtoa_r+0xeac>
  22640c:	d8c00617 	ldw	r3,24(sp)
  226410:	18003726 	beq	r3,zero,2264f0 <_dtoa_r+0xf88>
  226414:	b0002016 	blt	r22,zero,226498 <_dtoa_r+0xf30>
  226418:	b000041e 	bne	r22,zero,22642c <_dtoa_r+0xec4>
  22641c:	d9000317 	ldw	r4,12(sp)
  226420:	2000021e 	bne	r4,zero,22642c <_dtoa_r+0xec4>
  226424:	d8c00617 	ldw	r3,24(sp)
  226428:	18001b26 	beq	r3,zero,226498 <_dtoa_r+0xf30>
  22642c:	00810716 	blt	zero,r2,22684c <_dtoa_r+0x12e4>
  226430:	d8c00417 	ldw	r3,16(sp)
  226434:	9d800044 	addi	r22,r19,1
  226438:	9c800005 	stb	r18,0(r19)
  22643c:	b02f883a 	mov	r23,r22
  226440:	98c10626 	beq	r19,r3,22685c <_dtoa_r+0x12f4>
  226444:	800b883a 	mov	r5,r16
  226448:	000f883a 	mov	r7,zero
  22644c:	01800284 	movi	r6,10
  226450:	e009883a 	mov	r4,fp
  226454:	02277400 	call	227740 <__multadd>
  226458:	1021883a 	mov	r16,r2
  22645c:	000f883a 	mov	r7,zero
  226460:	01800284 	movi	r6,10
  226464:	880b883a 	mov	r5,r17
  226468:	e009883a 	mov	r4,fp
  22646c:	8d002526 	beq	r17,r20,226504 <_dtoa_r+0xf9c>
  226470:	02277400 	call	227740 <__multadd>
  226474:	a00b883a 	mov	r5,r20
  226478:	000f883a 	mov	r7,zero
  22647c:	01800284 	movi	r6,10
  226480:	e009883a 	mov	r4,fp
  226484:	1023883a 	mov	r17,r2
  226488:	02277400 	call	227740 <__multadd>
  22648c:	1029883a 	mov	r20,r2
  226490:	b027883a 	mov	r19,r22
  226494:	003fc006 	br	226398 <_gp+0xfffeb810>
  226498:	9011883a 	mov	r8,r18
  22649c:	00800e0e 	bge	zero,r2,2264d8 <_dtoa_r+0xf70>
  2264a0:	800b883a 	mov	r5,r16
  2264a4:	01800044 	movi	r6,1
  2264a8:	e009883a 	mov	r4,fp
  2264ac:	da001715 	stw	r8,92(sp)
  2264b0:	0227df00 	call	227df0 <__lshift>
  2264b4:	a80b883a 	mov	r5,r21
  2264b8:	1009883a 	mov	r4,r2
  2264bc:	1021883a 	mov	r16,r2
  2264c0:	0227f380 	call	227f38 <__mcmp>
  2264c4:	da001717 	ldw	r8,92(sp)
  2264c8:	0081960e 	bge	zero,r2,226b24 <_dtoa_r+0x15bc>
  2264cc:	00800e44 	movi	r2,57
  2264d0:	40817026 	beq	r8,r2,226a94 <_dtoa_r+0x152c>
  2264d4:	ba000c44 	addi	r8,r23,49
  2264d8:	8825883a 	mov	r18,r17
  2264dc:	9dc00044 	addi	r23,r19,1
  2264e0:	9a000005 	stb	r8,0(r19)
  2264e4:	a023883a 	mov	r17,r20
  2264e8:	dc000915 	stw	r16,36(sp)
  2264ec:	003f2406 	br	226180 <_gp+0xfffeb5f8>
  2264f0:	00800e44 	movi	r2,57
  2264f4:	9011883a 	mov	r8,r18
  2264f8:	90816626 	beq	r18,r2,226a94 <_dtoa_r+0x152c>
  2264fc:	05bff516 	blt	zero,r22,2264d4 <_gp+0xfffeb94c>
  226500:	003ff506 	br	2264d8 <_gp+0xfffeb950>
  226504:	02277400 	call	227740 <__multadd>
  226508:	1023883a 	mov	r17,r2
  22650c:	1029883a 	mov	r20,r2
  226510:	003fdf06 	br	226490 <_gp+0xfffeb908>
  226514:	e009883a 	mov	r4,fp
  226518:	02277180 	call	227718 <_Bfree>
  22651c:	00800044 	movi	r2,1
  226520:	003fbc06 	br	226414 <_gp+0xfffeb88c>
  226524:	a80b883a 	mov	r5,r21
  226528:	8009883a 	mov	r4,r16
  22652c:	0227f380 	call	227f38 <__mcmp>
  226530:	103edb0e 	bge	r2,zero,2260a0 <_gp+0xfffeb518>
  226534:	800b883a 	mov	r5,r16
  226538:	000f883a 	mov	r7,zero
  22653c:	01800284 	movi	r6,10
  226540:	e009883a 	mov	r4,fp
  226544:	02277400 	call	227740 <__multadd>
  226548:	1021883a 	mov	r16,r2
  22654c:	d8800517 	ldw	r2,20(sp)
  226550:	d8c00b17 	ldw	r3,44(sp)
  226554:	10bfffc4 	addi	r2,r2,-1
  226558:	d8800515 	stw	r2,20(sp)
  22655c:	183f761e 	bne	r3,zero,226338 <_gp+0xfffeb7b0>
  226560:	d9000c17 	ldw	r4,48(sp)
  226564:	0101730e 	bge	zero,r4,226b34 <_dtoa_r+0x15cc>
  226568:	d9000615 	stw	r4,24(sp)
  22656c:	003ed006 	br	2260b0 <_gp+0xfffeb528>
  226570:	00800084 	movi	r2,2
  226574:	3081861e 	bne	r6,r2,226b90 <_dtoa_r+0x1628>
  226578:	d8000b15 	stw	zero,44(sp)
  22657c:	003f3c06 	br	226270 <_gp+0xfffeb6e8>
  226580:	dc000917 	ldw	r16,36(sp)
  226584:	003e9206 	br	225fd0 <_gp+0xfffeb448>
  226588:	d9c00317 	ldw	r7,12(sp)
  22658c:	00800084 	movi	r2,2
  226590:	11fec50e 	bge	r2,r7,2260a8 <_gp+0xfffeb520>
  226594:	d9000617 	ldw	r4,24(sp)
  226598:	20013c1e 	bne	r4,zero,226a8c <_dtoa_r+0x1524>
  22659c:	a80b883a 	mov	r5,r21
  2265a0:	000f883a 	mov	r7,zero
  2265a4:	01800144 	movi	r6,5
  2265a8:	e009883a 	mov	r4,fp
  2265ac:	02277400 	call	227740 <__multadd>
  2265b0:	100b883a 	mov	r5,r2
  2265b4:	8009883a 	mov	r4,r16
  2265b8:	102b883a 	mov	r21,r2
  2265bc:	0227f380 	call	227f38 <__mcmp>
  2265c0:	dc000915 	stw	r16,36(sp)
  2265c4:	00bf410e 	bge	zero,r2,2262cc <_gp+0xfffeb744>
  2265c8:	d9c00717 	ldw	r7,28(sp)
  2265cc:	00800c44 	movi	r2,49
  2265d0:	38800005 	stb	r2,0(r7)
  2265d4:	d8800517 	ldw	r2,20(sp)
  2265d8:	3dc00044 	addi	r23,r7,1
  2265dc:	10800044 	addi	r2,r2,1
  2265e0:	d8800515 	stw	r2,20(sp)
  2265e4:	003f3d06 	br	2262dc <_gp+0xfffeb754>
  2265e8:	d9800517 	ldw	r6,20(sp)
  2265ec:	d9c00717 	ldw	r7,28(sp)
  2265f0:	00800c44 	movi	r2,49
  2265f4:	31800044 	addi	r6,r6,1
  2265f8:	d9800515 	stw	r6,20(sp)
  2265fc:	38800005 	stb	r2,0(r7)
  226600:	003edf06 	br	226180 <_gp+0xfffeb5f8>
  226604:	d8000b15 	stw	zero,44(sp)
  226608:	003c9f06 	br	225888 <_gp+0xfffead00>
  22660c:	903e7e1e 	bne	r18,zero,226008 <_gp+0xfffeb480>
  226610:	00800434 	movhi	r2,16
  226614:	10bfffc4 	addi	r2,r2,-1
  226618:	9884703a 	and	r2,r19,r2
  22661c:	1000ea1e 	bne	r2,zero,2269c8 <_dtoa_r+0x1460>
  226620:	9cdffc2c 	andhi	r19,r19,32752
  226624:	9800e826 	beq	r19,zero,2269c8 <_dtoa_r+0x1460>
  226628:	d9c00817 	ldw	r7,32(sp)
  22662c:	b5800044 	addi	r22,r22,1
  226630:	04c00044 	movi	r19,1
  226634:	39c00044 	addi	r7,r7,1
  226638:	d9c00815 	stw	r7,32(sp)
  22663c:	d8800d17 	ldw	r2,52(sp)
  226640:	103e721e 	bne	r2,zero,22600c <_gp+0xfffeb484>
  226644:	00800044 	movi	r2,1
  226648:	003e7906 	br	226030 <_gp+0xfffeb4a8>
  22664c:	8009883a 	mov	r4,r16
  226650:	022dab80 	call	22dab8 <__floatsidf>
  226654:	d9800f17 	ldw	r6,60(sp)
  226658:	d9c01017 	ldw	r7,64(sp)
  22665c:	1009883a 	mov	r4,r2
  226660:	180b883a 	mov	r5,r3
  226664:	022ca240 	call	22ca24 <__muldf3>
  226668:	000d883a 	mov	r6,zero
  22666c:	01d00734 	movhi	r7,16412
  226670:	1009883a 	mov	r4,r2
  226674:	180b883a 	mov	r5,r3
  226678:	022b6380 	call	22b638 <__adddf3>
  22667c:	047f3034 	movhi	r17,64704
  226680:	1021883a 	mov	r16,r2
  226684:	1c63883a 	add	r17,r3,r17
  226688:	d9000f17 	ldw	r4,60(sp)
  22668c:	d9401017 	ldw	r5,64(sp)
  226690:	000d883a 	mov	r6,zero
  226694:	01d00534 	movhi	r7,16404
  226698:	022d13c0 	call	22d13c <__subdf3>
  22669c:	800d883a 	mov	r6,r16
  2266a0:	880f883a 	mov	r7,r17
  2266a4:	1009883a 	mov	r4,r2
  2266a8:	180b883a 	mov	r5,r3
  2266ac:	102b883a 	mov	r21,r2
  2266b0:	1829883a 	mov	r20,r3
  2266b4:	022c8540 	call	22c854 <__gedf2>
  2266b8:	00806c16 	blt	zero,r2,22686c <_dtoa_r+0x1304>
  2266bc:	89e0003c 	xorhi	r7,r17,32768
  2266c0:	800d883a 	mov	r6,r16
  2266c4:	a809883a 	mov	r4,r21
  2266c8:	a00b883a 	mov	r5,r20
  2266cc:	022c9300 	call	22c930 <__ledf2>
  2266d0:	103d7e0e 	bge	r2,zero,225ccc <_gp+0xfffeb144>
  2266d4:	002b883a 	mov	r21,zero
  2266d8:	0023883a 	mov	r17,zero
  2266dc:	003efb06 	br	2262cc <_gp+0xfffeb744>
  2266e0:	d8800717 	ldw	r2,28(sp)
  2266e4:	003bd006 	br	225628 <_gp+0xfffeaaa0>
  2266e8:	d9000a17 	ldw	r4,40(sp)
  2266ec:	d9800d17 	ldw	r6,52(sp)
  2266f0:	dd400a15 	stw	r21,40(sp)
  2266f4:	a905c83a 	sub	r2,r21,r4
  2266f8:	308d883a 	add	r6,r6,r2
  2266fc:	d9800d15 	stw	r6,52(sp)
  226700:	002b883a 	mov	r21,zero
  226704:	003e0606 	br	225f20 <_gp+0xfffeb398>
  226708:	9023883a 	mov	r17,r18
  22670c:	9829883a 	mov	r20,r19
  226710:	04000084 	movi	r16,2
  226714:	003c9206 	br	225960 <_gp+0xfffeadd8>
  226718:	04000044 	movi	r16,1
  22671c:	dc000c15 	stw	r16,48(sp)
  226720:	dc000615 	stw	r16,24(sp)
  226724:	dc002215 	stw	r16,136(sp)
  226728:	e0001115 	stw	zero,68(fp)
  22672c:	000b883a 	mov	r5,zero
  226730:	003c6906 	br	2258d8 <_gp+0xfffead50>
  226734:	3021883a 	mov	r16,r6
  226738:	003ffb06 	br	226728 <_gp+0xfffebba0>
  22673c:	1000021e 	bne	r2,zero,226748 <_dtoa_r+0x11e0>
  226740:	4200004c 	andi	r8,r8,1
  226744:	403e7d1e 	bne	r8,zero,22613c <_gp+0xfffeb5b4>
  226748:	01000c04 	movi	r4,48
  22674c:	00000106 	br	226754 <_dtoa_r+0x11ec>
  226750:	102f883a 	mov	r23,r2
  226754:	b8bfffc4 	addi	r2,r23,-1
  226758:	10c00007 	ldb	r3,0(r2)
  22675c:	193ffc26 	beq	r3,r4,226750 <_gp+0xfffebbc8>
  226760:	003e8706 	br	226180 <_gp+0xfffeb5f8>
  226764:	d8800517 	ldw	r2,20(sp)
  226768:	00a3c83a 	sub	r17,zero,r2
  22676c:	8800a426 	beq	r17,zero,226a00 <_dtoa_r+0x1498>
  226770:	888003cc 	andi	r2,r17,15
  226774:	100490fa 	slli	r2,r2,3
  226778:	00c008f4 	movhi	r3,35
  22677c:	18c37f04 	addi	r3,r3,3580
  226780:	1885883a 	add	r2,r3,r2
  226784:	11800017 	ldw	r6,0(r2)
  226788:	11c00117 	ldw	r7,4(r2)
  22678c:	9009883a 	mov	r4,r18
  226790:	980b883a 	mov	r5,r19
  226794:	8823d13a 	srai	r17,r17,4
  226798:	022ca240 	call	22ca24 <__muldf3>
  22679c:	d8800f15 	stw	r2,60(sp)
  2267a0:	d8c01015 	stw	r3,64(sp)
  2267a4:	8800e826 	beq	r17,zero,226b48 <_dtoa_r+0x15e0>
  2267a8:	050008f4 	movhi	r20,35
  2267ac:	a5037504 	addi	r20,r20,3540
  2267b0:	04000084 	movi	r16,2
  2267b4:	8980004c 	andi	r6,r17,1
  2267b8:	1009883a 	mov	r4,r2
  2267bc:	8823d07a 	srai	r17,r17,1
  2267c0:	180b883a 	mov	r5,r3
  2267c4:	30000426 	beq	r6,zero,2267d8 <_dtoa_r+0x1270>
  2267c8:	a1800017 	ldw	r6,0(r20)
  2267cc:	a1c00117 	ldw	r7,4(r20)
  2267d0:	84000044 	addi	r16,r16,1
  2267d4:	022ca240 	call	22ca24 <__muldf3>
  2267d8:	a5000204 	addi	r20,r20,8
  2267dc:	883ff51e 	bne	r17,zero,2267b4 <_gp+0xfffebc2c>
  2267e0:	d8800f15 	stw	r2,60(sp)
  2267e4:	d8c01015 	stw	r3,64(sp)
  2267e8:	003c7606 	br	2259c4 <_gp+0xfffeae3c>
  2267ec:	00c00c04 	movi	r3,48
  2267f0:	10c00005 	stb	r3,0(r2)
  2267f4:	d8c00517 	ldw	r3,20(sp)
  2267f8:	bd3fffc3 	ldbu	r20,-1(r23)
  2267fc:	18c00044 	addi	r3,r3,1
  226800:	d8c00515 	stw	r3,20(sp)
  226804:	003db906 	br	225eec <_gp+0xfffeb364>
  226808:	89400117 	ldw	r5,4(r17)
  22680c:	e009883a 	mov	r4,fp
  226810:	02276700 	call	227670 <_Balloc>
  226814:	89800417 	ldw	r6,16(r17)
  226818:	89400304 	addi	r5,r17,12
  22681c:	11000304 	addi	r4,r2,12
  226820:	31800084 	addi	r6,r6,2
  226824:	318d883a 	add	r6,r6,r6
  226828:	318d883a 	add	r6,r6,r6
  22682c:	1027883a 	mov	r19,r2
  226830:	02273cc0 	call	2273cc <memcpy>
  226834:	01800044 	movi	r6,1
  226838:	980b883a 	mov	r5,r19
  22683c:	e009883a 	mov	r4,fp
  226840:	0227df00 	call	227df0 <__lshift>
  226844:	1029883a 	mov	r20,r2
  226848:	003ecc06 	br	22637c <_gp+0xfffeb7f4>
  22684c:	00800e44 	movi	r2,57
  226850:	90809026 	beq	r18,r2,226a94 <_dtoa_r+0x152c>
  226854:	92000044 	addi	r8,r18,1
  226858:	003f1f06 	br	2264d8 <_gp+0xfffeb950>
  22685c:	9011883a 	mov	r8,r18
  226860:	8825883a 	mov	r18,r17
  226864:	a023883a 	mov	r17,r20
  226868:	003e2906 	br	226110 <_gp+0xfffeb588>
  22686c:	002b883a 	mov	r21,zero
  226870:	0023883a 	mov	r17,zero
  226874:	003f5406 	br	2265c8 <_gp+0xfffeba40>
  226878:	61bfffc4 	addi	r6,r12,-1
  22687c:	300490fa 	slli	r2,r6,3
  226880:	00c008f4 	movhi	r3,35
  226884:	18c37f04 	addi	r3,r3,3580
  226888:	1885883a 	add	r2,r3,r2
  22688c:	11000017 	ldw	r4,0(r2)
  226890:	11400117 	ldw	r5,4(r2)
  226894:	d8800717 	ldw	r2,28(sp)
  226898:	880f883a 	mov	r7,r17
  22689c:	d9801215 	stw	r6,72(sp)
  2268a0:	800d883a 	mov	r6,r16
  2268a4:	db001615 	stw	r12,88(sp)
  2268a8:	15c00044 	addi	r23,r2,1
  2268ac:	022ca240 	call	22ca24 <__muldf3>
  2268b0:	d9401017 	ldw	r5,64(sp)
  2268b4:	d9000f17 	ldw	r4,60(sp)
  2268b8:	d8c01515 	stw	r3,84(sp)
  2268bc:	d8801415 	stw	r2,80(sp)
  2268c0:	022da380 	call	22da38 <__fixdfsi>
  2268c4:	1009883a 	mov	r4,r2
  2268c8:	1021883a 	mov	r16,r2
  2268cc:	022dab80 	call	22dab8 <__floatsidf>
  2268d0:	d9000f17 	ldw	r4,60(sp)
  2268d4:	d9401017 	ldw	r5,64(sp)
  2268d8:	100d883a 	mov	r6,r2
  2268dc:	180f883a 	mov	r7,r3
  2268e0:	022d13c0 	call	22d13c <__subdf3>
  2268e4:	1829883a 	mov	r20,r3
  2268e8:	d8c00717 	ldw	r3,28(sp)
  2268ec:	84000c04 	addi	r16,r16,48
  2268f0:	1023883a 	mov	r17,r2
  2268f4:	1c000005 	stb	r16,0(r3)
  2268f8:	db001617 	ldw	r12,88(sp)
  2268fc:	00800044 	movi	r2,1
  226900:	60802226 	beq	r12,r2,22698c <_dtoa_r+0x1424>
  226904:	d9c00717 	ldw	r7,28(sp)
  226908:	8805883a 	mov	r2,r17
  22690c:	b82b883a 	mov	r21,r23
  226910:	3b19883a 	add	r12,r7,r12
  226914:	6023883a 	mov	r17,r12
  226918:	a007883a 	mov	r3,r20
  22691c:	dc800f15 	stw	r18,60(sp)
  226920:	000d883a 	mov	r6,zero
  226924:	01d00934 	movhi	r7,16420
  226928:	1009883a 	mov	r4,r2
  22692c:	180b883a 	mov	r5,r3
  226930:	022ca240 	call	22ca24 <__muldf3>
  226934:	180b883a 	mov	r5,r3
  226938:	1009883a 	mov	r4,r2
  22693c:	1829883a 	mov	r20,r3
  226940:	1025883a 	mov	r18,r2
  226944:	022da380 	call	22da38 <__fixdfsi>
  226948:	1009883a 	mov	r4,r2
  22694c:	1021883a 	mov	r16,r2
  226950:	022dab80 	call	22dab8 <__floatsidf>
  226954:	100d883a 	mov	r6,r2
  226958:	180f883a 	mov	r7,r3
  22695c:	9009883a 	mov	r4,r18
  226960:	a00b883a 	mov	r5,r20
  226964:	84000c04 	addi	r16,r16,48
  226968:	022d13c0 	call	22d13c <__subdf3>
  22696c:	ad400044 	addi	r21,r21,1
  226970:	ac3fffc5 	stb	r16,-1(r21)
  226974:	ac7fea1e 	bne	r21,r17,226920 <_gp+0xfffebd98>
  226978:	1023883a 	mov	r17,r2
  22697c:	d8801217 	ldw	r2,72(sp)
  226980:	dc800f17 	ldw	r18,60(sp)
  226984:	1829883a 	mov	r20,r3
  226988:	b8af883a 	add	r23,r23,r2
  22698c:	d9001417 	ldw	r4,80(sp)
  226990:	d9401517 	ldw	r5,84(sp)
  226994:	000d883a 	mov	r6,zero
  226998:	01cff834 	movhi	r7,16352
  22699c:	022b6380 	call	22b638 <__adddf3>
  2269a0:	880d883a 	mov	r6,r17
  2269a4:	a00f883a 	mov	r7,r20
  2269a8:	1009883a 	mov	r4,r2
  2269ac:	180b883a 	mov	r5,r3
  2269b0:	022c9300 	call	22c930 <__ledf2>
  2269b4:	10003e0e 	bge	r2,zero,226ab0 <_dtoa_r+0x1548>
  2269b8:	d9001317 	ldw	r4,76(sp)
  2269bc:	bd3fffc3 	ldbu	r20,-1(r23)
  2269c0:	d9000515 	stw	r4,20(sp)
  2269c4:	003d3b06 	br	225eb4 <_gp+0xfffeb32c>
  2269c8:	0027883a 	mov	r19,zero
  2269cc:	003f1b06 	br	22663c <_gp+0xfffebab4>
  2269d0:	d8800817 	ldw	r2,32(sp)
  2269d4:	11e9c83a 	sub	r20,r2,r7
  2269d8:	0005883a 	mov	r2,zero
  2269dc:	003d5406 	br	225f30 <_gp+0xfffeb3a8>
  2269e0:	00800044 	movi	r2,1
  2269e4:	003dc706 	br	226104 <_gp+0xfffeb57c>
  2269e8:	d8c00217 	ldw	r3,8(sp)
  2269ec:	00800d84 	movi	r2,54
  2269f0:	dd400a17 	ldw	r21,40(sp)
  2269f4:	10c5c83a 	sub	r2,r2,r3
  2269f8:	dd000817 	ldw	r20,32(sp)
  2269fc:	003d4c06 	br	225f30 <_gp+0xfffeb3a8>
  226a00:	dc800f15 	stw	r18,60(sp)
  226a04:	dcc01015 	stw	r19,64(sp)
  226a08:	04000084 	movi	r16,2
  226a0c:	003bed06 	br	2259c4 <_gp+0xfffeae3c>
  226a10:	d9000617 	ldw	r4,24(sp)
  226a14:	203f0d26 	beq	r4,zero,22664c <_gp+0xfffebac4>
  226a18:	d9800c17 	ldw	r6,48(sp)
  226a1c:	01bcab0e 	bge	zero,r6,225ccc <_gp+0xfffeb144>
  226a20:	d9401017 	ldw	r5,64(sp)
  226a24:	d9000f17 	ldw	r4,60(sp)
  226a28:	000d883a 	mov	r6,zero
  226a2c:	01d00934 	movhi	r7,16420
  226a30:	022ca240 	call	22ca24 <__muldf3>
  226a34:	81000044 	addi	r4,r16,1
  226a38:	d8800f15 	stw	r2,60(sp)
  226a3c:	d8c01015 	stw	r3,64(sp)
  226a40:	022dab80 	call	22dab8 <__floatsidf>
  226a44:	d9800f17 	ldw	r6,60(sp)
  226a48:	d9c01017 	ldw	r7,64(sp)
  226a4c:	1009883a 	mov	r4,r2
  226a50:	180b883a 	mov	r5,r3
  226a54:	022ca240 	call	22ca24 <__muldf3>
  226a58:	01d00734 	movhi	r7,16412
  226a5c:	000d883a 	mov	r6,zero
  226a60:	1009883a 	mov	r4,r2
  226a64:	180b883a 	mov	r5,r3
  226a68:	022b6380 	call	22b638 <__adddf3>
  226a6c:	d9c00517 	ldw	r7,20(sp)
  226a70:	047f3034 	movhi	r17,64704
  226a74:	1021883a 	mov	r16,r2
  226a78:	39ffffc4 	addi	r7,r7,-1
  226a7c:	d9c01315 	stw	r7,76(sp)
  226a80:	1c63883a 	add	r17,r3,r17
  226a84:	db000c17 	ldw	r12,48(sp)
  226a88:	003bea06 	br	225a34 <_gp+0xfffeaeac>
  226a8c:	dc000915 	stw	r16,36(sp)
  226a90:	003e0e06 	br	2262cc <_gp+0xfffeb744>
  226a94:	01000e44 	movi	r4,57
  226a98:	8825883a 	mov	r18,r17
  226a9c:	9dc00044 	addi	r23,r19,1
  226aa0:	99000005 	stb	r4,0(r19)
  226aa4:	a023883a 	mov	r17,r20
  226aa8:	dc000915 	stw	r16,36(sp)
  226aac:	003da406 	br	226140 <_gp+0xfffeb5b8>
  226ab0:	d9801417 	ldw	r6,80(sp)
  226ab4:	d9c01517 	ldw	r7,84(sp)
  226ab8:	0009883a 	mov	r4,zero
  226abc:	014ff834 	movhi	r5,16352
  226ac0:	022d13c0 	call	22d13c <__subdf3>
  226ac4:	880d883a 	mov	r6,r17
  226ac8:	a00f883a 	mov	r7,r20
  226acc:	1009883a 	mov	r4,r2
  226ad0:	180b883a 	mov	r5,r3
  226ad4:	022c8540 	call	22c854 <__gedf2>
  226ad8:	00bc7c0e 	bge	zero,r2,225ccc <_gp+0xfffeb144>
  226adc:	01000c04 	movi	r4,48
  226ae0:	00000106 	br	226ae8 <_dtoa_r+0x1580>
  226ae4:	102f883a 	mov	r23,r2
  226ae8:	b8bfffc4 	addi	r2,r23,-1
  226aec:	10c00007 	ldb	r3,0(r2)
  226af0:	193ffc26 	beq	r3,r4,226ae4 <_gp+0xfffebf5c>
  226af4:	d9801317 	ldw	r6,76(sp)
  226af8:	d9800515 	stw	r6,20(sp)
  226afc:	003c4406 	br	225c10 <_gp+0xfffeb088>
  226b00:	d9801317 	ldw	r6,76(sp)
  226b04:	d9800515 	stw	r6,20(sp)
  226b08:	003cea06 	br	225eb4 <_gp+0xfffeb32c>
  226b0c:	dd800f17 	ldw	r22,60(sp)
  226b10:	dcc01017 	ldw	r19,64(sp)
  226b14:	dc801217 	ldw	r18,72(sp)
  226b18:	003c6c06 	br	225ccc <_gp+0xfffeb144>
  226b1c:	903e031e 	bne	r18,zero,22632c <_gp+0xfffeb7a4>
  226b20:	003ebb06 	br	226610 <_gp+0xfffeba88>
  226b24:	103e6c1e 	bne	r2,zero,2264d8 <_gp+0xfffeb950>
  226b28:	4080004c 	andi	r2,r8,1
  226b2c:	103e6a26 	beq	r2,zero,2264d8 <_gp+0xfffeb950>
  226b30:	003e6606 	br	2264cc <_gp+0xfffeb944>
  226b34:	d8c00317 	ldw	r3,12(sp)
  226b38:	00800084 	movi	r2,2
  226b3c:	10c02916 	blt	r2,r3,226be4 <_dtoa_r+0x167c>
  226b40:	d9000c17 	ldw	r4,48(sp)
  226b44:	003e8806 	br	226568 <_gp+0xfffeb9e0>
  226b48:	04000084 	movi	r16,2
  226b4c:	003b9d06 	br	2259c4 <_gp+0xfffeae3c>
  226b50:	d9001317 	ldw	r4,76(sp)
  226b54:	d9000515 	stw	r4,20(sp)
  226b58:	003cd606 	br	225eb4 <_gp+0xfffeb32c>
  226b5c:	d8801317 	ldw	r2,76(sp)
  226b60:	d8800515 	stw	r2,20(sp)
  226b64:	003c2a06 	br	225c10 <_gp+0xfffeb088>
  226b68:	d9800317 	ldw	r6,12(sp)
  226b6c:	00800084 	movi	r2,2
  226b70:	11801516 	blt	r2,r6,226bc8 <_dtoa_r+0x1660>
  226b74:	d9c00c17 	ldw	r7,48(sp)
  226b78:	d9c00615 	stw	r7,24(sp)
  226b7c:	003df706 	br	22635c <_gp+0xfffeb7d4>
  226b80:	193d3926 	beq	r3,r4,226068 <_gp+0xfffeb4e0>
  226b84:	00c00f04 	movi	r3,60
  226b88:	1885c83a 	sub	r2,r3,r2
  226b8c:	003ddf06 	br	22630c <_gp+0xfffeb784>
  226b90:	e009883a 	mov	r4,fp
  226b94:	e0001115 	stw	zero,68(fp)
  226b98:	000b883a 	mov	r5,zero
  226b9c:	02276700 	call	227670 <_Balloc>
  226ba0:	d8800715 	stw	r2,28(sp)
  226ba4:	d8c00717 	ldw	r3,28(sp)
  226ba8:	00bfffc4 	movi	r2,-1
  226bac:	01000044 	movi	r4,1
  226bb0:	d8800c15 	stw	r2,48(sp)
  226bb4:	e0c01015 	stw	r3,64(fp)
  226bb8:	d9000b15 	stw	r4,44(sp)
  226bbc:	d8800615 	stw	r2,24(sp)
  226bc0:	d8002215 	stw	zero,136(sp)
  226bc4:	003c4106 	br	225ccc <_gp+0xfffeb144>
  226bc8:	d8c00c17 	ldw	r3,48(sp)
  226bcc:	d8c00615 	stw	r3,24(sp)
  226bd0:	003e7006 	br	226594 <_gp+0xfffeba0c>
  226bd4:	04400044 	movi	r17,1
  226bd8:	003b2006 	br	22585c <_gp+0xfffeacd4>
  226bdc:	000b883a 	mov	r5,zero
  226be0:	003b3d06 	br	2258d8 <_gp+0xfffead50>
  226be4:	d8800c17 	ldw	r2,48(sp)
  226be8:	d8800615 	stw	r2,24(sp)
  226bec:	003e6906 	br	226594 <_gp+0xfffeba0c>

00226bf0 <__sflags>:
  226bf0:	28800007 	ldb	r2,0(r5)
  226bf4:	00c01c84 	movi	r3,114
  226bf8:	10c02426 	beq	r2,r3,226c8c <__sflags+0x9c>
  226bfc:	00c01dc4 	movi	r3,119
  226c00:	10c01e26 	beq	r2,r3,226c7c <__sflags+0x8c>
  226c04:	00c01844 	movi	r3,97
  226c08:	10c00426 	beq	r2,r3,226c1c <__sflags+0x2c>
  226c0c:	00800584 	movi	r2,22
  226c10:	20800015 	stw	r2,0(r4)
  226c14:	0005883a 	mov	r2,zero
  226c18:	f800283a 	ret
  226c1c:	02c08204 	movi	r11,520
  226c20:	01000044 	movi	r4,1
  226c24:	00804204 	movi	r2,264
  226c28:	01c00ac4 	movi	r7,43
  226c2c:	02bff8c4 	movi	r10,-29
  226c30:	027fff04 	movi	r9,-4
  226c34:	02001e04 	movi	r8,120
  226c38:	29400044 	addi	r5,r5,1
  226c3c:	28c00007 	ldb	r3,0(r5)
  226c40:	18000626 	beq	r3,zero,226c5c <__sflags+0x6c>
  226c44:	19c00826 	beq	r3,r7,226c68 <__sflags+0x78>
  226c48:	1a3ffb1e 	bne	r3,r8,226c38 <_gp+0xfffec0b0>
  226c4c:	29400044 	addi	r5,r5,1
  226c50:	28c00007 	ldb	r3,0(r5)
  226c54:	21020014 	ori	r4,r4,2048
  226c58:	183ffa1e 	bne	r3,zero,226c44 <_gp+0xfffec0bc>
  226c5c:	22c8b03a 	or	r4,r4,r11
  226c60:	31000015 	stw	r4,0(r6)
  226c64:	f800283a 	ret
  226c68:	1284703a 	and	r2,r2,r10
  226c6c:	2248703a 	and	r4,r4,r9
  226c70:	10800414 	ori	r2,r2,16
  226c74:	21000094 	ori	r4,r4,2
  226c78:	003fef06 	br	226c38 <_gp+0xfffec0b0>
  226c7c:	02c18004 	movi	r11,1536
  226c80:	01000044 	movi	r4,1
  226c84:	00800204 	movi	r2,8
  226c88:	003fe706 	br	226c28 <_gp+0xfffec0a0>
  226c8c:	0017883a 	mov	r11,zero
  226c90:	0009883a 	mov	r4,zero
  226c94:	00800104 	movi	r2,4
  226c98:	003fe306 	br	226c28 <_gp+0xfffec0a0>

00226c9c <__sfvwrite_r>:
  226c9c:	30800217 	ldw	r2,8(r6)
  226ca0:	10006726 	beq	r2,zero,226e40 <__sfvwrite_r+0x1a4>
  226ca4:	28c0030b 	ldhu	r3,12(r5)
  226ca8:	defff404 	addi	sp,sp,-48
  226cac:	dd400715 	stw	r21,28(sp)
  226cb0:	dd000615 	stw	r20,24(sp)
  226cb4:	dc000215 	stw	r16,8(sp)
  226cb8:	dfc00b15 	stw	ra,44(sp)
  226cbc:	df000a15 	stw	fp,40(sp)
  226cc0:	ddc00915 	stw	r23,36(sp)
  226cc4:	dd800815 	stw	r22,32(sp)
  226cc8:	dcc00515 	stw	r19,20(sp)
  226ccc:	dc800415 	stw	r18,16(sp)
  226cd0:	dc400315 	stw	r17,12(sp)
  226cd4:	1880020c 	andi	r2,r3,8
  226cd8:	2821883a 	mov	r16,r5
  226cdc:	202b883a 	mov	r21,r4
  226ce0:	3029883a 	mov	r20,r6
  226ce4:	10002726 	beq	r2,zero,226d84 <__sfvwrite_r+0xe8>
  226ce8:	28800417 	ldw	r2,16(r5)
  226cec:	10002526 	beq	r2,zero,226d84 <__sfvwrite_r+0xe8>
  226cf0:	1880008c 	andi	r2,r3,2
  226cf4:	a4400017 	ldw	r17,0(r20)
  226cf8:	10002a26 	beq	r2,zero,226da4 <__sfvwrite_r+0x108>
  226cfc:	05a00034 	movhi	r22,32768
  226d00:	0027883a 	mov	r19,zero
  226d04:	0025883a 	mov	r18,zero
  226d08:	b5bf0004 	addi	r22,r22,-1024
  226d0c:	980d883a 	mov	r6,r19
  226d10:	a809883a 	mov	r4,r21
  226d14:	90004626 	beq	r18,zero,226e30 <__sfvwrite_r+0x194>
  226d18:	900f883a 	mov	r7,r18
  226d1c:	b480022e 	bgeu	r22,r18,226d28 <__sfvwrite_r+0x8c>
  226d20:	01e00034 	movhi	r7,32768
  226d24:	39ff0004 	addi	r7,r7,-1024
  226d28:	80800917 	ldw	r2,36(r16)
  226d2c:	81400717 	ldw	r5,28(r16)
  226d30:	103ee83a 	callr	r2
  226d34:	0080570e 	bge	zero,r2,226e94 <__sfvwrite_r+0x1f8>
  226d38:	a0c00217 	ldw	r3,8(r20)
  226d3c:	98a7883a 	add	r19,r19,r2
  226d40:	90a5c83a 	sub	r18,r18,r2
  226d44:	1885c83a 	sub	r2,r3,r2
  226d48:	a0800215 	stw	r2,8(r20)
  226d4c:	103fef1e 	bne	r2,zero,226d0c <_gp+0xfffec184>
  226d50:	0005883a 	mov	r2,zero
  226d54:	dfc00b17 	ldw	ra,44(sp)
  226d58:	df000a17 	ldw	fp,40(sp)
  226d5c:	ddc00917 	ldw	r23,36(sp)
  226d60:	dd800817 	ldw	r22,32(sp)
  226d64:	dd400717 	ldw	r21,28(sp)
  226d68:	dd000617 	ldw	r20,24(sp)
  226d6c:	dcc00517 	ldw	r19,20(sp)
  226d70:	dc800417 	ldw	r18,16(sp)
  226d74:	dc400317 	ldw	r17,12(sp)
  226d78:	dc000217 	ldw	r16,8(sp)
  226d7c:	dec00c04 	addi	sp,sp,48
  226d80:	f800283a 	ret
  226d84:	800b883a 	mov	r5,r16
  226d88:	a809883a 	mov	r4,r21
  226d8c:	02251c00 	call	2251c0 <__swsetup_r>
  226d90:	1000eb1e 	bne	r2,zero,227140 <__sfvwrite_r+0x4a4>
  226d94:	80c0030b 	ldhu	r3,12(r16)
  226d98:	a4400017 	ldw	r17,0(r20)
  226d9c:	1880008c 	andi	r2,r3,2
  226da0:	103fd61e 	bne	r2,zero,226cfc <_gp+0xfffec174>
  226da4:	1880004c 	andi	r2,r3,1
  226da8:	10003f1e 	bne	r2,zero,226ea8 <__sfvwrite_r+0x20c>
  226dac:	0039883a 	mov	fp,zero
  226db0:	0025883a 	mov	r18,zero
  226db4:	90001a26 	beq	r18,zero,226e20 <__sfvwrite_r+0x184>
  226db8:	1880800c 	andi	r2,r3,512
  226dbc:	84c00217 	ldw	r19,8(r16)
  226dc0:	10002126 	beq	r2,zero,226e48 <__sfvwrite_r+0x1ac>
  226dc4:	982f883a 	mov	r23,r19
  226dc8:	94c09336 	bltu	r18,r19,227018 <__sfvwrite_r+0x37c>
  226dcc:	1881200c 	andi	r2,r3,1152
  226dd0:	10009e1e 	bne	r2,zero,22704c <__sfvwrite_r+0x3b0>
  226dd4:	81000017 	ldw	r4,0(r16)
  226dd8:	b80d883a 	mov	r6,r23
  226ddc:	e00b883a 	mov	r5,fp
  226de0:	02275140 	call	227514 <memmove>
  226de4:	80c00217 	ldw	r3,8(r16)
  226de8:	81000017 	ldw	r4,0(r16)
  226dec:	9005883a 	mov	r2,r18
  226df0:	1ce7c83a 	sub	r19,r3,r19
  226df4:	25cf883a 	add	r7,r4,r23
  226df8:	84c00215 	stw	r19,8(r16)
  226dfc:	81c00015 	stw	r7,0(r16)
  226e00:	a0c00217 	ldw	r3,8(r20)
  226e04:	e0b9883a 	add	fp,fp,r2
  226e08:	90a5c83a 	sub	r18,r18,r2
  226e0c:	18a7c83a 	sub	r19,r3,r2
  226e10:	a4c00215 	stw	r19,8(r20)
  226e14:	983fce26 	beq	r19,zero,226d50 <_gp+0xfffec1c8>
  226e18:	80c0030b 	ldhu	r3,12(r16)
  226e1c:	903fe61e 	bne	r18,zero,226db8 <_gp+0xfffec230>
  226e20:	8f000017 	ldw	fp,0(r17)
  226e24:	8c800117 	ldw	r18,4(r17)
  226e28:	8c400204 	addi	r17,r17,8
  226e2c:	003fe106 	br	226db4 <_gp+0xfffec22c>
  226e30:	8cc00017 	ldw	r19,0(r17)
  226e34:	8c800117 	ldw	r18,4(r17)
  226e38:	8c400204 	addi	r17,r17,8
  226e3c:	003fb306 	br	226d0c <_gp+0xfffec184>
  226e40:	0005883a 	mov	r2,zero
  226e44:	f800283a 	ret
  226e48:	81000017 	ldw	r4,0(r16)
  226e4c:	80800417 	ldw	r2,16(r16)
  226e50:	11005736 	bltu	r2,r4,226fb0 <__sfvwrite_r+0x314>
  226e54:	85c00517 	ldw	r23,20(r16)
  226e58:	95c05536 	bltu	r18,r23,226fb0 <__sfvwrite_r+0x314>
  226e5c:	00a00034 	movhi	r2,32768
  226e60:	10bfffc4 	addi	r2,r2,-1
  226e64:	9009883a 	mov	r4,r18
  226e68:	1480012e 	bgeu	r2,r18,226e70 <__sfvwrite_r+0x1d4>
  226e6c:	1009883a 	mov	r4,r2
  226e70:	b80b883a 	mov	r5,r23
  226e74:	022b4840 	call	22b484 <__divsi3>
  226e78:	15cf383a 	mul	r7,r2,r23
  226e7c:	81400717 	ldw	r5,28(r16)
  226e80:	80800917 	ldw	r2,36(r16)
  226e84:	e00d883a 	mov	r6,fp
  226e88:	a809883a 	mov	r4,r21
  226e8c:	103ee83a 	callr	r2
  226e90:	00bfdb16 	blt	zero,r2,226e00 <_gp+0xfffec278>
  226e94:	8080030b 	ldhu	r2,12(r16)
  226e98:	10801014 	ori	r2,r2,64
  226e9c:	8080030d 	sth	r2,12(r16)
  226ea0:	00bfffc4 	movi	r2,-1
  226ea4:	003fab06 	br	226d54 <_gp+0xfffec1cc>
  226ea8:	0027883a 	mov	r19,zero
  226eac:	0011883a 	mov	r8,zero
  226eb0:	0039883a 	mov	fp,zero
  226eb4:	0025883a 	mov	r18,zero
  226eb8:	90001f26 	beq	r18,zero,226f38 <__sfvwrite_r+0x29c>
  226ebc:	40005a26 	beq	r8,zero,227028 <__sfvwrite_r+0x38c>
  226ec0:	982d883a 	mov	r22,r19
  226ec4:	94c0012e 	bgeu	r18,r19,226ecc <__sfvwrite_r+0x230>
  226ec8:	902d883a 	mov	r22,r18
  226ecc:	81000017 	ldw	r4,0(r16)
  226ed0:	80800417 	ldw	r2,16(r16)
  226ed4:	b02f883a 	mov	r23,r22
  226ed8:	81c00517 	ldw	r7,20(r16)
  226edc:	1100032e 	bgeu	r2,r4,226eec <__sfvwrite_r+0x250>
  226ee0:	80c00217 	ldw	r3,8(r16)
  226ee4:	38c7883a 	add	r3,r7,r3
  226ee8:	1d801816 	blt	r3,r22,226f4c <__sfvwrite_r+0x2b0>
  226eec:	b1c03e16 	blt	r22,r7,226fe8 <__sfvwrite_r+0x34c>
  226ef0:	80800917 	ldw	r2,36(r16)
  226ef4:	81400717 	ldw	r5,28(r16)
  226ef8:	e00d883a 	mov	r6,fp
  226efc:	da000115 	stw	r8,4(sp)
  226f00:	a809883a 	mov	r4,r21
  226f04:	103ee83a 	callr	r2
  226f08:	102f883a 	mov	r23,r2
  226f0c:	da000117 	ldw	r8,4(sp)
  226f10:	00bfe00e 	bge	zero,r2,226e94 <_gp+0xfffec30c>
  226f14:	9de7c83a 	sub	r19,r19,r23
  226f18:	98001f26 	beq	r19,zero,226f98 <__sfvwrite_r+0x2fc>
  226f1c:	a0800217 	ldw	r2,8(r20)
  226f20:	e5f9883a 	add	fp,fp,r23
  226f24:	95e5c83a 	sub	r18,r18,r23
  226f28:	15efc83a 	sub	r23,r2,r23
  226f2c:	a5c00215 	stw	r23,8(r20)
  226f30:	b83f8726 	beq	r23,zero,226d50 <_gp+0xfffec1c8>
  226f34:	903fe11e 	bne	r18,zero,226ebc <_gp+0xfffec334>
  226f38:	8f000017 	ldw	fp,0(r17)
  226f3c:	8c800117 	ldw	r18,4(r17)
  226f40:	0011883a 	mov	r8,zero
  226f44:	8c400204 	addi	r17,r17,8
  226f48:	003fdb06 	br	226eb8 <_gp+0xfffec330>
  226f4c:	180d883a 	mov	r6,r3
  226f50:	e00b883a 	mov	r5,fp
  226f54:	da000115 	stw	r8,4(sp)
  226f58:	d8c00015 	stw	r3,0(sp)
  226f5c:	02275140 	call	227514 <memmove>
  226f60:	d8c00017 	ldw	r3,0(sp)
  226f64:	80800017 	ldw	r2,0(r16)
  226f68:	800b883a 	mov	r5,r16
  226f6c:	a809883a 	mov	r4,r21
  226f70:	10c5883a 	add	r2,r2,r3
  226f74:	80800015 	stw	r2,0(r16)
  226f78:	d8c00015 	stw	r3,0(sp)
  226f7c:	0220c700 	call	220c70 <_fflush_r>
  226f80:	d8c00017 	ldw	r3,0(sp)
  226f84:	da000117 	ldw	r8,4(sp)
  226f88:	103fc21e 	bne	r2,zero,226e94 <_gp+0xfffec30c>
  226f8c:	182f883a 	mov	r23,r3
  226f90:	9de7c83a 	sub	r19,r19,r23
  226f94:	983fe11e 	bne	r19,zero,226f1c <_gp+0xfffec394>
  226f98:	800b883a 	mov	r5,r16
  226f9c:	a809883a 	mov	r4,r21
  226fa0:	0220c700 	call	220c70 <_fflush_r>
  226fa4:	103fbb1e 	bne	r2,zero,226e94 <_gp+0xfffec30c>
  226fa8:	0011883a 	mov	r8,zero
  226fac:	003fdb06 	br	226f1c <_gp+0xfffec394>
  226fb0:	94c0012e 	bgeu	r18,r19,226fb8 <__sfvwrite_r+0x31c>
  226fb4:	9027883a 	mov	r19,r18
  226fb8:	980d883a 	mov	r6,r19
  226fbc:	e00b883a 	mov	r5,fp
  226fc0:	02275140 	call	227514 <memmove>
  226fc4:	80800217 	ldw	r2,8(r16)
  226fc8:	80c00017 	ldw	r3,0(r16)
  226fcc:	14c5c83a 	sub	r2,r2,r19
  226fd0:	1cc7883a 	add	r3,r3,r19
  226fd4:	80800215 	stw	r2,8(r16)
  226fd8:	80c00015 	stw	r3,0(r16)
  226fdc:	10004326 	beq	r2,zero,2270ec <__sfvwrite_r+0x450>
  226fe0:	9805883a 	mov	r2,r19
  226fe4:	003f8606 	br	226e00 <_gp+0xfffec278>
  226fe8:	b00d883a 	mov	r6,r22
  226fec:	e00b883a 	mov	r5,fp
  226ff0:	da000115 	stw	r8,4(sp)
  226ff4:	02275140 	call	227514 <memmove>
  226ff8:	80800217 	ldw	r2,8(r16)
  226ffc:	80c00017 	ldw	r3,0(r16)
  227000:	da000117 	ldw	r8,4(sp)
  227004:	1585c83a 	sub	r2,r2,r22
  227008:	1dad883a 	add	r22,r3,r22
  22700c:	80800215 	stw	r2,8(r16)
  227010:	85800015 	stw	r22,0(r16)
  227014:	003fbf06 	br	226f14 <_gp+0xfffec38c>
  227018:	81000017 	ldw	r4,0(r16)
  22701c:	9027883a 	mov	r19,r18
  227020:	902f883a 	mov	r23,r18
  227024:	003f6c06 	br	226dd8 <_gp+0xfffec250>
  227028:	900d883a 	mov	r6,r18
  22702c:	01400284 	movi	r5,10
  227030:	e009883a 	mov	r4,fp
  227034:	02272e80 	call	2272e8 <memchr>
  227038:	10003e26 	beq	r2,zero,227134 <__sfvwrite_r+0x498>
  22703c:	10800044 	addi	r2,r2,1
  227040:	1727c83a 	sub	r19,r2,fp
  227044:	02000044 	movi	r8,1
  227048:	003f9d06 	br	226ec0 <_gp+0xfffec338>
  22704c:	80800517 	ldw	r2,20(r16)
  227050:	81400417 	ldw	r5,16(r16)
  227054:	81c00017 	ldw	r7,0(r16)
  227058:	10a7883a 	add	r19,r2,r2
  22705c:	9885883a 	add	r2,r19,r2
  227060:	1026d7fa 	srli	r19,r2,31
  227064:	396dc83a 	sub	r22,r7,r5
  227068:	b1000044 	addi	r4,r22,1
  22706c:	9885883a 	add	r2,r19,r2
  227070:	1027d07a 	srai	r19,r2,1
  227074:	2485883a 	add	r2,r4,r18
  227078:	980d883a 	mov	r6,r19
  22707c:	9880022e 	bgeu	r19,r2,227088 <__sfvwrite_r+0x3ec>
  227080:	1027883a 	mov	r19,r2
  227084:	100d883a 	mov	r6,r2
  227088:	18c1000c 	andi	r3,r3,1024
  22708c:	18001c26 	beq	r3,zero,227100 <__sfvwrite_r+0x464>
  227090:	300b883a 	mov	r5,r6
  227094:	a809883a 	mov	r4,r21
  227098:	0221eb40 	call	221eb4 <_malloc_r>
  22709c:	102f883a 	mov	r23,r2
  2270a0:	10002926 	beq	r2,zero,227148 <__sfvwrite_r+0x4ac>
  2270a4:	81400417 	ldw	r5,16(r16)
  2270a8:	b00d883a 	mov	r6,r22
  2270ac:	1009883a 	mov	r4,r2
  2270b0:	02273cc0 	call	2273cc <memcpy>
  2270b4:	8080030b 	ldhu	r2,12(r16)
  2270b8:	00fedfc4 	movi	r3,-1153
  2270bc:	10c4703a 	and	r2,r2,r3
  2270c0:	10802014 	ori	r2,r2,128
  2270c4:	8080030d 	sth	r2,12(r16)
  2270c8:	bd89883a 	add	r4,r23,r22
  2270cc:	9d8fc83a 	sub	r7,r19,r22
  2270d0:	85c00415 	stw	r23,16(r16)
  2270d4:	84c00515 	stw	r19,20(r16)
  2270d8:	81000015 	stw	r4,0(r16)
  2270dc:	9027883a 	mov	r19,r18
  2270e0:	81c00215 	stw	r7,8(r16)
  2270e4:	902f883a 	mov	r23,r18
  2270e8:	003f3b06 	br	226dd8 <_gp+0xfffec250>
  2270ec:	800b883a 	mov	r5,r16
  2270f0:	a809883a 	mov	r4,r21
  2270f4:	0220c700 	call	220c70 <_fflush_r>
  2270f8:	103fb926 	beq	r2,zero,226fe0 <_gp+0xfffec458>
  2270fc:	003f6506 	br	226e94 <_gp+0xfffec30c>
  227100:	a809883a 	mov	r4,r21
  227104:	02286cc0 	call	2286cc <_realloc_r>
  227108:	102f883a 	mov	r23,r2
  22710c:	103fee1e 	bne	r2,zero,2270c8 <_gp+0xfffec540>
  227110:	81400417 	ldw	r5,16(r16)
  227114:	a809883a 	mov	r4,r21
  227118:	02213180 	call	221318 <_free_r>
  22711c:	8080030b 	ldhu	r2,12(r16)
  227120:	00ffdfc4 	movi	r3,-129
  227124:	1884703a 	and	r2,r3,r2
  227128:	00c00304 	movi	r3,12
  22712c:	a8c00015 	stw	r3,0(r21)
  227130:	003f5906 	br	226e98 <_gp+0xfffec310>
  227134:	94c00044 	addi	r19,r18,1
  227138:	02000044 	movi	r8,1
  22713c:	003f6006 	br	226ec0 <_gp+0xfffec338>
  227140:	00bfffc4 	movi	r2,-1
  227144:	003f0306 	br	226d54 <_gp+0xfffec1cc>
  227148:	00800304 	movi	r2,12
  22714c:	a8800015 	stw	r2,0(r21)
  227150:	8080030b 	ldhu	r2,12(r16)
  227154:	003f5006 	br	226e98 <_gp+0xfffec310>

00227158 <_isatty_r>:
  227158:	defffd04 	addi	sp,sp,-12
  22715c:	dc000015 	stw	r16,0(sp)
  227160:	040008f4 	movhi	r16,35
  227164:	dc400115 	stw	r17,4(sp)
  227168:	84120204 	addi	r16,r16,18440
  22716c:	2023883a 	mov	r17,r4
  227170:	2809883a 	mov	r4,r5
  227174:	dfc00215 	stw	ra,8(sp)
  227178:	80000015 	stw	zero,0(r16)
  22717c:	022e0600 	call	22e060 <isatty>
  227180:	00ffffc4 	movi	r3,-1
  227184:	10c00526 	beq	r2,r3,22719c <_isatty_r+0x44>
  227188:	dfc00217 	ldw	ra,8(sp)
  22718c:	dc400117 	ldw	r17,4(sp)
  227190:	dc000017 	ldw	r16,0(sp)
  227194:	dec00304 	addi	sp,sp,12
  227198:	f800283a 	ret
  22719c:	80c00017 	ldw	r3,0(r16)
  2271a0:	183ff926 	beq	r3,zero,227188 <_gp+0xfffec600>
  2271a4:	88c00015 	stw	r3,0(r17)
  2271a8:	003ff706 	br	227188 <_gp+0xfffec600>

002271ac <_setlocale_r>:
  2271ac:	30001b26 	beq	r6,zero,22721c <_setlocale_r+0x70>
  2271b0:	014008f4 	movhi	r5,35
  2271b4:	defffe04 	addi	sp,sp,-8
  2271b8:	29436504 	addi	r5,r5,3476
  2271bc:	3009883a 	mov	r4,r6
  2271c0:	dc000015 	stw	r16,0(sp)
  2271c4:	dfc00115 	stw	ra,4(sp)
  2271c8:	3021883a 	mov	r16,r6
  2271cc:	0228ca40 	call	228ca4 <strcmp>
  2271d0:	1000061e 	bne	r2,zero,2271ec <_setlocale_r+0x40>
  2271d4:	008008f4 	movhi	r2,35
  2271d8:	10834604 	addi	r2,r2,3352
  2271dc:	dfc00117 	ldw	ra,4(sp)
  2271e0:	dc000017 	ldw	r16,0(sp)
  2271e4:	dec00204 	addi	sp,sp,8
  2271e8:	f800283a 	ret
  2271ec:	014008f4 	movhi	r5,35
  2271f0:	29434604 	addi	r5,r5,3352
  2271f4:	8009883a 	mov	r4,r16
  2271f8:	0228ca40 	call	228ca4 <strcmp>
  2271fc:	103ff526 	beq	r2,zero,2271d4 <_gp+0xfffec64c>
  227200:	014008f4 	movhi	r5,35
  227204:	29435004 	addi	r5,r5,3392
  227208:	8009883a 	mov	r4,r16
  22720c:	0228ca40 	call	228ca4 <strcmp>
  227210:	103ff026 	beq	r2,zero,2271d4 <_gp+0xfffec64c>
  227214:	0005883a 	mov	r2,zero
  227218:	003ff006 	br	2271dc <_gp+0xfffec654>
  22721c:	008008f4 	movhi	r2,35
  227220:	10834604 	addi	r2,r2,3352
  227224:	f800283a 	ret

00227228 <__locale_charset>:
  227228:	008008f4 	movhi	r2,35
  22722c:	108a6204 	addi	r2,r2,10632
  227230:	f800283a 	ret

00227234 <__locale_mb_cur_max>:
  227234:	008008f4 	movhi	r2,35
  227238:	108ae604 	addi	r2,r2,11160
  22723c:	10800017 	ldw	r2,0(r2)
  227240:	f800283a 	ret

00227244 <__locale_msgcharset>:
  227244:	008008f4 	movhi	r2,35
  227248:	108a5a04 	addi	r2,r2,10600
  22724c:	f800283a 	ret

00227250 <__locale_cjk_lang>:
  227250:	0005883a 	mov	r2,zero
  227254:	f800283a 	ret

00227258 <_localeconv_r>:
  227258:	008008f4 	movhi	r2,35
  22725c:	108a6a04 	addi	r2,r2,10664
  227260:	f800283a 	ret

00227264 <setlocale>:
  227264:	008008f4 	movhi	r2,35
  227268:	108ae304 	addi	r2,r2,11148
  22726c:	280d883a 	mov	r6,r5
  227270:	200b883a 	mov	r5,r4
  227274:	11000017 	ldw	r4,0(r2)
  227278:	02271ac1 	jmpi	2271ac <_setlocale_r>

0022727c <localeconv>:
  22727c:	008008f4 	movhi	r2,35
  227280:	108a6a04 	addi	r2,r2,10664
  227284:	f800283a 	ret

00227288 <_lseek_r>:
  227288:	defffd04 	addi	sp,sp,-12
  22728c:	2805883a 	mov	r2,r5
  227290:	dc000015 	stw	r16,0(sp)
  227294:	040008f4 	movhi	r16,35
  227298:	dc400115 	stw	r17,4(sp)
  22729c:	300b883a 	mov	r5,r6
  2272a0:	84120204 	addi	r16,r16,18440
  2272a4:	2023883a 	mov	r17,r4
  2272a8:	380d883a 	mov	r6,r7
  2272ac:	1009883a 	mov	r4,r2
  2272b0:	dfc00215 	stw	ra,8(sp)
  2272b4:	80000015 	stw	zero,0(r16)
  2272b8:	022e22c0 	call	22e22c <lseek>
  2272bc:	00ffffc4 	movi	r3,-1
  2272c0:	10c00526 	beq	r2,r3,2272d8 <_lseek_r+0x50>
  2272c4:	dfc00217 	ldw	ra,8(sp)
  2272c8:	dc400117 	ldw	r17,4(sp)
  2272cc:	dc000017 	ldw	r16,0(sp)
  2272d0:	dec00304 	addi	sp,sp,12
  2272d4:	f800283a 	ret
  2272d8:	80c00017 	ldw	r3,0(r16)
  2272dc:	183ff926 	beq	r3,zero,2272c4 <_gp+0xfffec73c>
  2272e0:	88c00015 	stw	r3,0(r17)
  2272e4:	003ff706 	br	2272c4 <_gp+0xfffec73c>

002272e8 <memchr>:
  2272e8:	208000cc 	andi	r2,r4,3
  2272ec:	280f883a 	mov	r7,r5
  2272f0:	10003426 	beq	r2,zero,2273c4 <memchr+0xdc>
  2272f4:	30bfffc4 	addi	r2,r6,-1
  2272f8:	30001a26 	beq	r6,zero,227364 <memchr+0x7c>
  2272fc:	20c00003 	ldbu	r3,0(r4)
  227300:	29803fcc 	andi	r6,r5,255
  227304:	30c0051e 	bne	r6,r3,22731c <memchr+0x34>
  227308:	00001806 	br	22736c <memchr+0x84>
  22730c:	10001526 	beq	r2,zero,227364 <memchr+0x7c>
  227310:	20c00003 	ldbu	r3,0(r4)
  227314:	10bfffc4 	addi	r2,r2,-1
  227318:	30c01426 	beq	r6,r3,22736c <memchr+0x84>
  22731c:	21000044 	addi	r4,r4,1
  227320:	20c000cc 	andi	r3,r4,3
  227324:	183ff91e 	bne	r3,zero,22730c <_gp+0xfffec784>
  227328:	020000c4 	movi	r8,3
  22732c:	40801136 	bltu	r8,r2,227374 <memchr+0x8c>
  227330:	10000c26 	beq	r2,zero,227364 <memchr+0x7c>
  227334:	20c00003 	ldbu	r3,0(r4)
  227338:	29403fcc 	andi	r5,r5,255
  22733c:	28c00b26 	beq	r5,r3,22736c <memchr+0x84>
  227340:	20c00044 	addi	r3,r4,1
  227344:	39803fcc 	andi	r6,r7,255
  227348:	2089883a 	add	r4,r4,r2
  22734c:	00000306 	br	22735c <memchr+0x74>
  227350:	18c00044 	addi	r3,r3,1
  227354:	197fffc3 	ldbu	r5,-1(r3)
  227358:	31400526 	beq	r6,r5,227370 <memchr+0x88>
  22735c:	1805883a 	mov	r2,r3
  227360:	20fffb1e 	bne	r4,r3,227350 <_gp+0xfffec7c8>
  227364:	0005883a 	mov	r2,zero
  227368:	f800283a 	ret
  22736c:	2005883a 	mov	r2,r4
  227370:	f800283a 	ret
  227374:	28c03fcc 	andi	r3,r5,255
  227378:	1812923a 	slli	r9,r3,8
  22737c:	02ffbff4 	movhi	r11,65279
  227380:	02a02074 	movhi	r10,32897
  227384:	48d2b03a 	or	r9,r9,r3
  227388:	4806943a 	slli	r3,r9,16
  22738c:	5affbfc4 	addi	r11,r11,-257
  227390:	52a02004 	addi	r10,r10,-32640
  227394:	48d2b03a 	or	r9,r9,r3
  227398:	20c00017 	ldw	r3,0(r4)
  22739c:	48c6f03a 	xor	r3,r9,r3
  2273a0:	1acd883a 	add	r6,r3,r11
  2273a4:	00c6303a 	nor	r3,zero,r3
  2273a8:	30c6703a 	and	r3,r6,r3
  2273ac:	1a86703a 	and	r3,r3,r10
  2273b0:	183fe01e 	bne	r3,zero,227334 <_gp+0xfffec7ac>
  2273b4:	10bfff04 	addi	r2,r2,-4
  2273b8:	21000104 	addi	r4,r4,4
  2273bc:	40bff636 	bltu	r8,r2,227398 <_gp+0xfffec810>
  2273c0:	003fdb06 	br	227330 <_gp+0xfffec7a8>
  2273c4:	3005883a 	mov	r2,r6
  2273c8:	003fd706 	br	227328 <_gp+0xfffec7a0>

002273cc <memcpy>:
  2273cc:	defffd04 	addi	sp,sp,-12
  2273d0:	dfc00215 	stw	ra,8(sp)
  2273d4:	dc400115 	stw	r17,4(sp)
  2273d8:	dc000015 	stw	r16,0(sp)
  2273dc:	00c003c4 	movi	r3,15
  2273e0:	2005883a 	mov	r2,r4
  2273e4:	1980452e 	bgeu	r3,r6,2274fc <memcpy+0x130>
  2273e8:	2906b03a 	or	r3,r5,r4
  2273ec:	18c000cc 	andi	r3,r3,3
  2273f0:	1800441e 	bne	r3,zero,227504 <memcpy+0x138>
  2273f4:	347ffc04 	addi	r17,r6,-16
  2273f8:	8822d13a 	srli	r17,r17,4
  2273fc:	28c00104 	addi	r3,r5,4
  227400:	23400104 	addi	r13,r4,4
  227404:	8820913a 	slli	r16,r17,4
  227408:	2b000204 	addi	r12,r5,8
  22740c:	22c00204 	addi	r11,r4,8
  227410:	84000504 	addi	r16,r16,20
  227414:	2a800304 	addi	r10,r5,12
  227418:	22400304 	addi	r9,r4,12
  22741c:	2c21883a 	add	r16,r5,r16
  227420:	2811883a 	mov	r8,r5
  227424:	200f883a 	mov	r7,r4
  227428:	41000017 	ldw	r4,0(r8)
  22742c:	1fc00017 	ldw	ra,0(r3)
  227430:	63c00017 	ldw	r15,0(r12)
  227434:	39000015 	stw	r4,0(r7)
  227438:	53800017 	ldw	r14,0(r10)
  22743c:	6fc00015 	stw	ra,0(r13)
  227440:	5bc00015 	stw	r15,0(r11)
  227444:	4b800015 	stw	r14,0(r9)
  227448:	18c00404 	addi	r3,r3,16
  22744c:	39c00404 	addi	r7,r7,16
  227450:	42000404 	addi	r8,r8,16
  227454:	6b400404 	addi	r13,r13,16
  227458:	63000404 	addi	r12,r12,16
  22745c:	5ac00404 	addi	r11,r11,16
  227460:	52800404 	addi	r10,r10,16
  227464:	4a400404 	addi	r9,r9,16
  227468:	1c3fef1e 	bne	r3,r16,227428 <_gp+0xfffec8a0>
  22746c:	89c00044 	addi	r7,r17,1
  227470:	380e913a 	slli	r7,r7,4
  227474:	310003cc 	andi	r4,r6,15
  227478:	02c000c4 	movi	r11,3
  22747c:	11c7883a 	add	r3,r2,r7
  227480:	29cb883a 	add	r5,r5,r7
  227484:	5900212e 	bgeu	r11,r4,22750c <memcpy+0x140>
  227488:	1813883a 	mov	r9,r3
  22748c:	2811883a 	mov	r8,r5
  227490:	200f883a 	mov	r7,r4
  227494:	42800017 	ldw	r10,0(r8)
  227498:	4a400104 	addi	r9,r9,4
  22749c:	39ffff04 	addi	r7,r7,-4
  2274a0:	4abfff15 	stw	r10,-4(r9)
  2274a4:	42000104 	addi	r8,r8,4
  2274a8:	59fffa36 	bltu	r11,r7,227494 <_gp+0xfffec90c>
  2274ac:	213fff04 	addi	r4,r4,-4
  2274b0:	2008d0ba 	srli	r4,r4,2
  2274b4:	318000cc 	andi	r6,r6,3
  2274b8:	21000044 	addi	r4,r4,1
  2274bc:	2109883a 	add	r4,r4,r4
  2274c0:	2109883a 	add	r4,r4,r4
  2274c4:	1907883a 	add	r3,r3,r4
  2274c8:	290b883a 	add	r5,r5,r4
  2274cc:	30000626 	beq	r6,zero,2274e8 <memcpy+0x11c>
  2274d0:	198d883a 	add	r6,r3,r6
  2274d4:	29c00003 	ldbu	r7,0(r5)
  2274d8:	18c00044 	addi	r3,r3,1
  2274dc:	29400044 	addi	r5,r5,1
  2274e0:	19ffffc5 	stb	r7,-1(r3)
  2274e4:	19bffb1e 	bne	r3,r6,2274d4 <_gp+0xfffec94c>
  2274e8:	dfc00217 	ldw	ra,8(sp)
  2274ec:	dc400117 	ldw	r17,4(sp)
  2274f0:	dc000017 	ldw	r16,0(sp)
  2274f4:	dec00304 	addi	sp,sp,12
  2274f8:	f800283a 	ret
  2274fc:	2007883a 	mov	r3,r4
  227500:	003ff206 	br	2274cc <_gp+0xfffec944>
  227504:	2007883a 	mov	r3,r4
  227508:	003ff106 	br	2274d0 <_gp+0xfffec948>
  22750c:	200d883a 	mov	r6,r4
  227510:	003fee06 	br	2274cc <_gp+0xfffec944>

00227514 <memmove>:
  227514:	2005883a 	mov	r2,r4
  227518:	29000b2e 	bgeu	r5,r4,227548 <memmove+0x34>
  22751c:	298f883a 	add	r7,r5,r6
  227520:	21c0092e 	bgeu	r4,r7,227548 <memmove+0x34>
  227524:	2187883a 	add	r3,r4,r6
  227528:	198bc83a 	sub	r5,r3,r6
  22752c:	30004826 	beq	r6,zero,227650 <memmove+0x13c>
  227530:	39ffffc4 	addi	r7,r7,-1
  227534:	39000003 	ldbu	r4,0(r7)
  227538:	18ffffc4 	addi	r3,r3,-1
  22753c:	19000005 	stb	r4,0(r3)
  227540:	28fffb1e 	bne	r5,r3,227530 <_gp+0xfffec9a8>
  227544:	f800283a 	ret
  227548:	00c003c4 	movi	r3,15
  22754c:	1980412e 	bgeu	r3,r6,227654 <memmove+0x140>
  227550:	2886b03a 	or	r3,r5,r2
  227554:	18c000cc 	andi	r3,r3,3
  227558:	1800401e 	bne	r3,zero,22765c <memmove+0x148>
  22755c:	33fffc04 	addi	r15,r6,-16
  227560:	781ed13a 	srli	r15,r15,4
  227564:	28c00104 	addi	r3,r5,4
  227568:	13400104 	addi	r13,r2,4
  22756c:	781c913a 	slli	r14,r15,4
  227570:	2b000204 	addi	r12,r5,8
  227574:	12c00204 	addi	r11,r2,8
  227578:	73800504 	addi	r14,r14,20
  22757c:	2a800304 	addi	r10,r5,12
  227580:	12400304 	addi	r9,r2,12
  227584:	2b9d883a 	add	r14,r5,r14
  227588:	2811883a 	mov	r8,r5
  22758c:	100f883a 	mov	r7,r2
  227590:	41000017 	ldw	r4,0(r8)
  227594:	39c00404 	addi	r7,r7,16
  227598:	18c00404 	addi	r3,r3,16
  22759c:	393ffc15 	stw	r4,-16(r7)
  2275a0:	193ffc17 	ldw	r4,-16(r3)
  2275a4:	6b400404 	addi	r13,r13,16
  2275a8:	5ac00404 	addi	r11,r11,16
  2275ac:	693ffc15 	stw	r4,-16(r13)
  2275b0:	61000017 	ldw	r4,0(r12)
  2275b4:	4a400404 	addi	r9,r9,16
  2275b8:	42000404 	addi	r8,r8,16
  2275bc:	593ffc15 	stw	r4,-16(r11)
  2275c0:	51000017 	ldw	r4,0(r10)
  2275c4:	63000404 	addi	r12,r12,16
  2275c8:	52800404 	addi	r10,r10,16
  2275cc:	493ffc15 	stw	r4,-16(r9)
  2275d0:	1bbfef1e 	bne	r3,r14,227590 <_gp+0xfffeca08>
  2275d4:	79000044 	addi	r4,r15,1
  2275d8:	2008913a 	slli	r4,r4,4
  2275dc:	328003cc 	andi	r10,r6,15
  2275e0:	02c000c4 	movi	r11,3
  2275e4:	1107883a 	add	r3,r2,r4
  2275e8:	290b883a 	add	r5,r5,r4
  2275ec:	5a801e2e 	bgeu	r11,r10,227668 <memmove+0x154>
  2275f0:	1813883a 	mov	r9,r3
  2275f4:	2811883a 	mov	r8,r5
  2275f8:	500f883a 	mov	r7,r10
  2275fc:	41000017 	ldw	r4,0(r8)
  227600:	4a400104 	addi	r9,r9,4
  227604:	39ffff04 	addi	r7,r7,-4
  227608:	493fff15 	stw	r4,-4(r9)
  22760c:	42000104 	addi	r8,r8,4
  227610:	59fffa36 	bltu	r11,r7,2275fc <_gp+0xfffeca74>
  227614:	513fff04 	addi	r4,r10,-4
  227618:	2008d0ba 	srli	r4,r4,2
  22761c:	318000cc 	andi	r6,r6,3
  227620:	21000044 	addi	r4,r4,1
  227624:	2109883a 	add	r4,r4,r4
  227628:	2109883a 	add	r4,r4,r4
  22762c:	1907883a 	add	r3,r3,r4
  227630:	290b883a 	add	r5,r5,r4
  227634:	30000b26 	beq	r6,zero,227664 <memmove+0x150>
  227638:	198d883a 	add	r6,r3,r6
  22763c:	29c00003 	ldbu	r7,0(r5)
  227640:	18c00044 	addi	r3,r3,1
  227644:	29400044 	addi	r5,r5,1
  227648:	19ffffc5 	stb	r7,-1(r3)
  22764c:	19bffb1e 	bne	r3,r6,22763c <_gp+0xfffecab4>
  227650:	f800283a 	ret
  227654:	1007883a 	mov	r3,r2
  227658:	003ff606 	br	227634 <_gp+0xfffecaac>
  22765c:	1007883a 	mov	r3,r2
  227660:	003ff506 	br	227638 <_gp+0xfffecab0>
  227664:	f800283a 	ret
  227668:	500d883a 	mov	r6,r10
  22766c:	003ff106 	br	227634 <_gp+0xfffecaac>

00227670 <_Balloc>:
  227670:	20801317 	ldw	r2,76(r4)
  227674:	defffc04 	addi	sp,sp,-16
  227678:	dc400115 	stw	r17,4(sp)
  22767c:	dc000015 	stw	r16,0(sp)
  227680:	dfc00315 	stw	ra,12(sp)
  227684:	dc800215 	stw	r18,8(sp)
  227688:	2023883a 	mov	r17,r4
  22768c:	2821883a 	mov	r16,r5
  227690:	10000f26 	beq	r2,zero,2276d0 <_Balloc+0x60>
  227694:	8407883a 	add	r3,r16,r16
  227698:	18c7883a 	add	r3,r3,r3
  22769c:	10c7883a 	add	r3,r2,r3
  2276a0:	18800017 	ldw	r2,0(r3)
  2276a4:	10001126 	beq	r2,zero,2276ec <_Balloc+0x7c>
  2276a8:	11000017 	ldw	r4,0(r2)
  2276ac:	19000015 	stw	r4,0(r3)
  2276b0:	10000415 	stw	zero,16(r2)
  2276b4:	10000315 	stw	zero,12(r2)
  2276b8:	dfc00317 	ldw	ra,12(sp)
  2276bc:	dc800217 	ldw	r18,8(sp)
  2276c0:	dc400117 	ldw	r17,4(sp)
  2276c4:	dc000017 	ldw	r16,0(sp)
  2276c8:	dec00404 	addi	sp,sp,16
  2276cc:	f800283a 	ret
  2276d0:	01800844 	movi	r6,33
  2276d4:	01400104 	movi	r5,4
  2276d8:	022a3c80 	call	22a3c8 <_calloc_r>
  2276dc:	88801315 	stw	r2,76(r17)
  2276e0:	103fec1e 	bne	r2,zero,227694 <_gp+0xfffecb0c>
  2276e4:	0005883a 	mov	r2,zero
  2276e8:	003ff306 	br	2276b8 <_gp+0xfffecb30>
  2276ec:	01400044 	movi	r5,1
  2276f0:	2c24983a 	sll	r18,r5,r16
  2276f4:	8809883a 	mov	r4,r17
  2276f8:	91800144 	addi	r6,r18,5
  2276fc:	318d883a 	add	r6,r6,r6
  227700:	318d883a 	add	r6,r6,r6
  227704:	022a3c80 	call	22a3c8 <_calloc_r>
  227708:	103ff626 	beq	r2,zero,2276e4 <_gp+0xfffecb5c>
  22770c:	14000115 	stw	r16,4(r2)
  227710:	14800215 	stw	r18,8(r2)
  227714:	003fe606 	br	2276b0 <_gp+0xfffecb28>

00227718 <_Bfree>:
  227718:	28000826 	beq	r5,zero,22773c <_Bfree+0x24>
  22771c:	28c00117 	ldw	r3,4(r5)
  227720:	20801317 	ldw	r2,76(r4)
  227724:	18c7883a 	add	r3,r3,r3
  227728:	18c7883a 	add	r3,r3,r3
  22772c:	10c5883a 	add	r2,r2,r3
  227730:	10c00017 	ldw	r3,0(r2)
  227734:	28c00015 	stw	r3,0(r5)
  227738:	11400015 	stw	r5,0(r2)
  22773c:	f800283a 	ret

00227740 <__multadd>:
  227740:	defffa04 	addi	sp,sp,-24
  227744:	dc800315 	stw	r18,12(sp)
  227748:	dc400215 	stw	r17,8(sp)
  22774c:	dc000115 	stw	r16,4(sp)
  227750:	2823883a 	mov	r17,r5
  227754:	2c000417 	ldw	r16,16(r5)
  227758:	dfc00515 	stw	ra,20(sp)
  22775c:	dcc00415 	stw	r19,16(sp)
  227760:	2025883a 	mov	r18,r4
  227764:	29400504 	addi	r5,r5,20
  227768:	0011883a 	mov	r8,zero
  22776c:	28c00017 	ldw	r3,0(r5)
  227770:	29400104 	addi	r5,r5,4
  227774:	42000044 	addi	r8,r8,1
  227778:	18bfffcc 	andi	r2,r3,65535
  22777c:	1185383a 	mul	r2,r2,r6
  227780:	1806d43a 	srli	r3,r3,16
  227784:	11cf883a 	add	r7,r2,r7
  227788:	3808d43a 	srli	r4,r7,16
  22778c:	1987383a 	mul	r3,r3,r6
  227790:	38bfffcc 	andi	r2,r7,65535
  227794:	1907883a 	add	r3,r3,r4
  227798:	1808943a 	slli	r4,r3,16
  22779c:	180ed43a 	srli	r7,r3,16
  2277a0:	2085883a 	add	r2,r4,r2
  2277a4:	28bfff15 	stw	r2,-4(r5)
  2277a8:	443ff016 	blt	r8,r16,22776c <_gp+0xfffecbe4>
  2277ac:	38000926 	beq	r7,zero,2277d4 <__multadd+0x94>
  2277b0:	88800217 	ldw	r2,8(r17)
  2277b4:	80800f0e 	bge	r16,r2,2277f4 <__multadd+0xb4>
  2277b8:	80800144 	addi	r2,r16,5
  2277bc:	1085883a 	add	r2,r2,r2
  2277c0:	1085883a 	add	r2,r2,r2
  2277c4:	8885883a 	add	r2,r17,r2
  2277c8:	11c00015 	stw	r7,0(r2)
  2277cc:	84000044 	addi	r16,r16,1
  2277d0:	8c000415 	stw	r16,16(r17)
  2277d4:	8805883a 	mov	r2,r17
  2277d8:	dfc00517 	ldw	ra,20(sp)
  2277dc:	dcc00417 	ldw	r19,16(sp)
  2277e0:	dc800317 	ldw	r18,12(sp)
  2277e4:	dc400217 	ldw	r17,8(sp)
  2277e8:	dc000117 	ldw	r16,4(sp)
  2277ec:	dec00604 	addi	sp,sp,24
  2277f0:	f800283a 	ret
  2277f4:	89400117 	ldw	r5,4(r17)
  2277f8:	9009883a 	mov	r4,r18
  2277fc:	d9c00015 	stw	r7,0(sp)
  227800:	29400044 	addi	r5,r5,1
  227804:	02276700 	call	227670 <_Balloc>
  227808:	89800417 	ldw	r6,16(r17)
  22780c:	89400304 	addi	r5,r17,12
  227810:	11000304 	addi	r4,r2,12
  227814:	31800084 	addi	r6,r6,2
  227818:	318d883a 	add	r6,r6,r6
  22781c:	318d883a 	add	r6,r6,r6
  227820:	1027883a 	mov	r19,r2
  227824:	02273cc0 	call	2273cc <memcpy>
  227828:	d9c00017 	ldw	r7,0(sp)
  22782c:	88000a26 	beq	r17,zero,227858 <__multadd+0x118>
  227830:	88c00117 	ldw	r3,4(r17)
  227834:	90801317 	ldw	r2,76(r18)
  227838:	18c7883a 	add	r3,r3,r3
  22783c:	18c7883a 	add	r3,r3,r3
  227840:	10c5883a 	add	r2,r2,r3
  227844:	10c00017 	ldw	r3,0(r2)
  227848:	88c00015 	stw	r3,0(r17)
  22784c:	14400015 	stw	r17,0(r2)
  227850:	9823883a 	mov	r17,r19
  227854:	003fd806 	br	2277b8 <_gp+0xfffecc30>
  227858:	9823883a 	mov	r17,r19
  22785c:	003fd606 	br	2277b8 <_gp+0xfffecc30>

00227860 <__s2b>:
  227860:	defff904 	addi	sp,sp,-28
  227864:	dc400115 	stw	r17,4(sp)
  227868:	dc000015 	stw	r16,0(sp)
  22786c:	2023883a 	mov	r17,r4
  227870:	2821883a 	mov	r16,r5
  227874:	39000204 	addi	r4,r7,8
  227878:	01400244 	movi	r5,9
  22787c:	dcc00315 	stw	r19,12(sp)
  227880:	dc800215 	stw	r18,8(sp)
  227884:	dfc00615 	stw	ra,24(sp)
  227888:	dd400515 	stw	r21,20(sp)
  22788c:	dd000415 	stw	r20,16(sp)
  227890:	3825883a 	mov	r18,r7
  227894:	3027883a 	mov	r19,r6
  227898:	022b4840 	call	22b484 <__divsi3>
  22789c:	00c00044 	movi	r3,1
  2278a0:	000b883a 	mov	r5,zero
  2278a4:	1880030e 	bge	r3,r2,2278b4 <__s2b+0x54>
  2278a8:	18c7883a 	add	r3,r3,r3
  2278ac:	29400044 	addi	r5,r5,1
  2278b0:	18bffd16 	blt	r3,r2,2278a8 <_gp+0xfffecd20>
  2278b4:	8809883a 	mov	r4,r17
  2278b8:	02276700 	call	227670 <_Balloc>
  2278bc:	d8c00717 	ldw	r3,28(sp)
  2278c0:	10c00515 	stw	r3,20(r2)
  2278c4:	00c00044 	movi	r3,1
  2278c8:	10c00415 	stw	r3,16(r2)
  2278cc:	00c00244 	movi	r3,9
  2278d0:	1cc0210e 	bge	r3,r19,227958 <__s2b+0xf8>
  2278d4:	80eb883a 	add	r21,r16,r3
  2278d8:	a829883a 	mov	r20,r21
  2278dc:	84e1883a 	add	r16,r16,r19
  2278e0:	a1c00007 	ldb	r7,0(r20)
  2278e4:	01800284 	movi	r6,10
  2278e8:	a5000044 	addi	r20,r20,1
  2278ec:	100b883a 	mov	r5,r2
  2278f0:	39fff404 	addi	r7,r7,-48
  2278f4:	8809883a 	mov	r4,r17
  2278f8:	02277400 	call	227740 <__multadd>
  2278fc:	a43ff81e 	bne	r20,r16,2278e0 <_gp+0xfffecd58>
  227900:	ace1883a 	add	r16,r21,r19
  227904:	843ffe04 	addi	r16,r16,-8
  227908:	9c800a0e 	bge	r19,r18,227934 <__s2b+0xd4>
  22790c:	94e5c83a 	sub	r18,r18,r19
  227910:	84a5883a 	add	r18,r16,r18
  227914:	81c00007 	ldb	r7,0(r16)
  227918:	01800284 	movi	r6,10
  22791c:	84000044 	addi	r16,r16,1
  227920:	100b883a 	mov	r5,r2
  227924:	39fff404 	addi	r7,r7,-48
  227928:	8809883a 	mov	r4,r17
  22792c:	02277400 	call	227740 <__multadd>
  227930:	84bff81e 	bne	r16,r18,227914 <_gp+0xfffecd8c>
  227934:	dfc00617 	ldw	ra,24(sp)
  227938:	dd400517 	ldw	r21,20(sp)
  22793c:	dd000417 	ldw	r20,16(sp)
  227940:	dcc00317 	ldw	r19,12(sp)
  227944:	dc800217 	ldw	r18,8(sp)
  227948:	dc400117 	ldw	r17,4(sp)
  22794c:	dc000017 	ldw	r16,0(sp)
  227950:	dec00704 	addi	sp,sp,28
  227954:	f800283a 	ret
  227958:	84000284 	addi	r16,r16,10
  22795c:	1827883a 	mov	r19,r3
  227960:	003fe906 	br	227908 <_gp+0xfffecd80>

00227964 <__hi0bits>:
  227964:	20bfffec 	andhi	r2,r4,65535
  227968:	1000141e 	bne	r2,zero,2279bc <__hi0bits+0x58>
  22796c:	2008943a 	slli	r4,r4,16
  227970:	00800404 	movi	r2,16
  227974:	20ffc02c 	andhi	r3,r4,65280
  227978:	1800021e 	bne	r3,zero,227984 <__hi0bits+0x20>
  22797c:	2008923a 	slli	r4,r4,8
  227980:	10800204 	addi	r2,r2,8
  227984:	20fc002c 	andhi	r3,r4,61440
  227988:	1800021e 	bne	r3,zero,227994 <__hi0bits+0x30>
  22798c:	2008913a 	slli	r4,r4,4
  227990:	10800104 	addi	r2,r2,4
  227994:	20f0002c 	andhi	r3,r4,49152
  227998:	1800031e 	bne	r3,zero,2279a8 <__hi0bits+0x44>
  22799c:	2109883a 	add	r4,r4,r4
  2279a0:	10800084 	addi	r2,r2,2
  2279a4:	2109883a 	add	r4,r4,r4
  2279a8:	20000316 	blt	r4,zero,2279b8 <__hi0bits+0x54>
  2279ac:	2110002c 	andhi	r4,r4,16384
  2279b0:	2000041e 	bne	r4,zero,2279c4 <__hi0bits+0x60>
  2279b4:	00800804 	movi	r2,32
  2279b8:	f800283a 	ret
  2279bc:	0005883a 	mov	r2,zero
  2279c0:	003fec06 	br	227974 <_gp+0xfffecdec>
  2279c4:	10800044 	addi	r2,r2,1
  2279c8:	f800283a 	ret

002279cc <__lo0bits>:
  2279cc:	20c00017 	ldw	r3,0(r4)
  2279d0:	188001cc 	andi	r2,r3,7
  2279d4:	10000826 	beq	r2,zero,2279f8 <__lo0bits+0x2c>
  2279d8:	1880004c 	andi	r2,r3,1
  2279dc:	1000211e 	bne	r2,zero,227a64 <__lo0bits+0x98>
  2279e0:	1880008c 	andi	r2,r3,2
  2279e4:	1000211e 	bne	r2,zero,227a6c <__lo0bits+0xa0>
  2279e8:	1806d0ba 	srli	r3,r3,2
  2279ec:	00800084 	movi	r2,2
  2279f0:	20c00015 	stw	r3,0(r4)
  2279f4:	f800283a 	ret
  2279f8:	18bfffcc 	andi	r2,r3,65535
  2279fc:	10001326 	beq	r2,zero,227a4c <__lo0bits+0x80>
  227a00:	0005883a 	mov	r2,zero
  227a04:	19403fcc 	andi	r5,r3,255
  227a08:	2800021e 	bne	r5,zero,227a14 <__lo0bits+0x48>
  227a0c:	1806d23a 	srli	r3,r3,8
  227a10:	10800204 	addi	r2,r2,8
  227a14:	194003cc 	andi	r5,r3,15
  227a18:	2800021e 	bne	r5,zero,227a24 <__lo0bits+0x58>
  227a1c:	1806d13a 	srli	r3,r3,4
  227a20:	10800104 	addi	r2,r2,4
  227a24:	194000cc 	andi	r5,r3,3
  227a28:	2800021e 	bne	r5,zero,227a34 <__lo0bits+0x68>
  227a2c:	1806d0ba 	srli	r3,r3,2
  227a30:	10800084 	addi	r2,r2,2
  227a34:	1940004c 	andi	r5,r3,1
  227a38:	2800081e 	bne	r5,zero,227a5c <__lo0bits+0x90>
  227a3c:	1806d07a 	srli	r3,r3,1
  227a40:	1800051e 	bne	r3,zero,227a58 <__lo0bits+0x8c>
  227a44:	00800804 	movi	r2,32
  227a48:	f800283a 	ret
  227a4c:	1806d43a 	srli	r3,r3,16
  227a50:	00800404 	movi	r2,16
  227a54:	003feb06 	br	227a04 <_gp+0xfffece7c>
  227a58:	10800044 	addi	r2,r2,1
  227a5c:	20c00015 	stw	r3,0(r4)
  227a60:	f800283a 	ret
  227a64:	0005883a 	mov	r2,zero
  227a68:	f800283a 	ret
  227a6c:	1806d07a 	srli	r3,r3,1
  227a70:	00800044 	movi	r2,1
  227a74:	20c00015 	stw	r3,0(r4)
  227a78:	f800283a 	ret

00227a7c <__i2b>:
  227a7c:	defffd04 	addi	sp,sp,-12
  227a80:	dc000015 	stw	r16,0(sp)
  227a84:	04000044 	movi	r16,1
  227a88:	dc400115 	stw	r17,4(sp)
  227a8c:	2823883a 	mov	r17,r5
  227a90:	800b883a 	mov	r5,r16
  227a94:	dfc00215 	stw	ra,8(sp)
  227a98:	02276700 	call	227670 <_Balloc>
  227a9c:	14400515 	stw	r17,20(r2)
  227aa0:	14000415 	stw	r16,16(r2)
  227aa4:	dfc00217 	ldw	ra,8(sp)
  227aa8:	dc400117 	ldw	r17,4(sp)
  227aac:	dc000017 	ldw	r16,0(sp)
  227ab0:	dec00304 	addi	sp,sp,12
  227ab4:	f800283a 	ret

00227ab8 <__multiply>:
  227ab8:	defffa04 	addi	sp,sp,-24
  227abc:	dcc00315 	stw	r19,12(sp)
  227ac0:	dc800215 	stw	r18,8(sp)
  227ac4:	34c00417 	ldw	r19,16(r6)
  227ac8:	2c800417 	ldw	r18,16(r5)
  227acc:	dd000415 	stw	r20,16(sp)
  227ad0:	dc400115 	stw	r17,4(sp)
  227ad4:	dfc00515 	stw	ra,20(sp)
  227ad8:	dc000015 	stw	r16,0(sp)
  227adc:	2829883a 	mov	r20,r5
  227ae0:	3023883a 	mov	r17,r6
  227ae4:	94c0050e 	bge	r18,r19,227afc <__multiply+0x44>
  227ae8:	9007883a 	mov	r3,r18
  227aec:	3029883a 	mov	r20,r6
  227af0:	9825883a 	mov	r18,r19
  227af4:	2823883a 	mov	r17,r5
  227af8:	1827883a 	mov	r19,r3
  227afc:	a0800217 	ldw	r2,8(r20)
  227b00:	94e1883a 	add	r16,r18,r19
  227b04:	a1400117 	ldw	r5,4(r20)
  227b08:	1400010e 	bge	r2,r16,227b10 <__multiply+0x58>
  227b0c:	29400044 	addi	r5,r5,1
  227b10:	02276700 	call	227670 <_Balloc>
  227b14:	8415883a 	add	r10,r16,r16
  227b18:	12c00504 	addi	r11,r2,20
  227b1c:	5295883a 	add	r10,r10,r10
  227b20:	5a95883a 	add	r10,r11,r10
  227b24:	5807883a 	mov	r3,r11
  227b28:	5a80032e 	bgeu	r11,r10,227b38 <__multiply+0x80>
  227b2c:	18000015 	stw	zero,0(r3)
  227b30:	18c00104 	addi	r3,r3,4
  227b34:	1abffd36 	bltu	r3,r10,227b2c <_gp+0xfffecfa4>
  227b38:	9ce7883a 	add	r19,r19,r19
  227b3c:	94a5883a 	add	r18,r18,r18
  227b40:	89800504 	addi	r6,r17,20
  227b44:	9ce7883a 	add	r19,r19,r19
  227b48:	a3400504 	addi	r13,r20,20
  227b4c:	94a5883a 	add	r18,r18,r18
  227b50:	34d9883a 	add	r12,r6,r19
  227b54:	6c93883a 	add	r9,r13,r18
  227b58:	3300422e 	bgeu	r6,r12,227c64 <__multiply+0x1ac>
  227b5c:	37c00017 	ldw	ra,0(r6)
  227b60:	fbffffcc 	andi	r15,ra,65535
  227b64:	78001b26 	beq	r15,zero,227bd4 <__multiply+0x11c>
  227b68:	5811883a 	mov	r8,r11
  227b6c:	681d883a 	mov	r14,r13
  227b70:	000f883a 	mov	r7,zero
  227b74:	71000017 	ldw	r4,0(r14)
  227b78:	40c00017 	ldw	r3,0(r8)
  227b7c:	73800104 	addi	r14,r14,4
  227b80:	217fffcc 	andi	r5,r4,65535
  227b84:	2bcb383a 	mul	r5,r5,r15
  227b88:	2008d43a 	srli	r4,r4,16
  227b8c:	1c7fffcc 	andi	r17,r3,65535
  227b90:	2c4b883a 	add	r5,r5,r17
  227b94:	29cb883a 	add	r5,r5,r7
  227b98:	23c9383a 	mul	r4,r4,r15
  227b9c:	1806d43a 	srli	r3,r3,16
  227ba0:	280ed43a 	srli	r7,r5,16
  227ba4:	297fffcc 	andi	r5,r5,65535
  227ba8:	20c7883a 	add	r3,r4,r3
  227bac:	19c7883a 	add	r3,r3,r7
  227bb0:	1808943a 	slli	r4,r3,16
  227bb4:	4023883a 	mov	r17,r8
  227bb8:	180ed43a 	srli	r7,r3,16
  227bbc:	214ab03a 	or	r5,r4,r5
  227bc0:	41400015 	stw	r5,0(r8)
  227bc4:	42000104 	addi	r8,r8,4
  227bc8:	727fea36 	bltu	r14,r9,227b74 <_gp+0xfffecfec>
  227bcc:	89c00115 	stw	r7,4(r17)
  227bd0:	37c00017 	ldw	ra,0(r6)
  227bd4:	f83ed43a 	srli	ra,ra,16
  227bd8:	f8001f26 	beq	ra,zero,227c58 <__multiply+0x1a0>
  227bdc:	58c00017 	ldw	r3,0(r11)
  227be0:	681d883a 	mov	r14,r13
  227be4:	581f883a 	mov	r15,r11
  227be8:	1811883a 	mov	r8,r3
  227bec:	5825883a 	mov	r18,r11
  227bf0:	000f883a 	mov	r7,zero
  227bf4:	00000106 	br	227bfc <__multiply+0x144>
  227bf8:	8825883a 	mov	r18,r17
  227bfc:	7140000b 	ldhu	r5,0(r14)
  227c00:	4010d43a 	srli	r8,r8,16
  227c04:	193fffcc 	andi	r4,r3,65535
  227c08:	2fcb383a 	mul	r5,r5,ra
  227c0c:	7bc00104 	addi	r15,r15,4
  227c10:	73800104 	addi	r14,r14,4
  227c14:	2a0b883a 	add	r5,r5,r8
  227c18:	29cb883a 	add	r5,r5,r7
  227c1c:	2806943a 	slli	r3,r5,16
  227c20:	94400104 	addi	r17,r18,4
  227c24:	280ad43a 	srli	r5,r5,16
  227c28:	1908b03a 	or	r4,r3,r4
  227c2c:	793fff15 	stw	r4,-4(r15)
  227c30:	70ffff17 	ldw	r3,-4(r14)
  227c34:	8a000017 	ldw	r8,0(r17)
  227c38:	1806d43a 	srli	r3,r3,16
  227c3c:	413fffcc 	andi	r4,r8,65535
  227c40:	1fc7383a 	mul	r3,r3,ra
  227c44:	1907883a 	add	r3,r3,r4
  227c48:	1947883a 	add	r3,r3,r5
  227c4c:	180ed43a 	srli	r7,r3,16
  227c50:	727fe936 	bltu	r14,r9,227bf8 <_gp+0xfffed070>
  227c54:	90c00115 	stw	r3,4(r18)
  227c58:	31800104 	addi	r6,r6,4
  227c5c:	5ac00104 	addi	r11,r11,4
  227c60:	333fbe36 	bltu	r6,r12,227b5c <_gp+0xfffecfd4>
  227c64:	0400090e 	bge	zero,r16,227c8c <__multiply+0x1d4>
  227c68:	50ffff17 	ldw	r3,-4(r10)
  227c6c:	52bfff04 	addi	r10,r10,-4
  227c70:	18000326 	beq	r3,zero,227c80 <__multiply+0x1c8>
  227c74:	00000506 	br	227c8c <__multiply+0x1d4>
  227c78:	50c00017 	ldw	r3,0(r10)
  227c7c:	1800031e 	bne	r3,zero,227c8c <__multiply+0x1d4>
  227c80:	843fffc4 	addi	r16,r16,-1
  227c84:	52bfff04 	addi	r10,r10,-4
  227c88:	803ffb1e 	bne	r16,zero,227c78 <_gp+0xfffed0f0>
  227c8c:	14000415 	stw	r16,16(r2)
  227c90:	dfc00517 	ldw	ra,20(sp)
  227c94:	dd000417 	ldw	r20,16(sp)
  227c98:	dcc00317 	ldw	r19,12(sp)
  227c9c:	dc800217 	ldw	r18,8(sp)
  227ca0:	dc400117 	ldw	r17,4(sp)
  227ca4:	dc000017 	ldw	r16,0(sp)
  227ca8:	dec00604 	addi	sp,sp,24
  227cac:	f800283a 	ret

00227cb0 <__pow5mult>:
  227cb0:	defffa04 	addi	sp,sp,-24
  227cb4:	dcc00315 	stw	r19,12(sp)
  227cb8:	dc000015 	stw	r16,0(sp)
  227cbc:	dfc00515 	stw	ra,20(sp)
  227cc0:	dd000415 	stw	r20,16(sp)
  227cc4:	dc800215 	stw	r18,8(sp)
  227cc8:	dc400115 	stw	r17,4(sp)
  227ccc:	308000cc 	andi	r2,r6,3
  227cd0:	3021883a 	mov	r16,r6
  227cd4:	2027883a 	mov	r19,r4
  227cd8:	10002f1e 	bne	r2,zero,227d98 <__pow5mult+0xe8>
  227cdc:	2825883a 	mov	r18,r5
  227ce0:	8021d0ba 	srai	r16,r16,2
  227ce4:	80001a26 	beq	r16,zero,227d50 <__pow5mult+0xa0>
  227ce8:	9c401217 	ldw	r17,72(r19)
  227cec:	8800061e 	bne	r17,zero,227d08 <__pow5mult+0x58>
  227cf0:	00003406 	br	227dc4 <__pow5mult+0x114>
  227cf4:	8021d07a 	srai	r16,r16,1
  227cf8:	80001526 	beq	r16,zero,227d50 <__pow5mult+0xa0>
  227cfc:	88800017 	ldw	r2,0(r17)
  227d00:	10001c26 	beq	r2,zero,227d74 <__pow5mult+0xc4>
  227d04:	1023883a 	mov	r17,r2
  227d08:	8080004c 	andi	r2,r16,1
  227d0c:	103ff926 	beq	r2,zero,227cf4 <_gp+0xfffed16c>
  227d10:	880d883a 	mov	r6,r17
  227d14:	900b883a 	mov	r5,r18
  227d18:	9809883a 	mov	r4,r19
  227d1c:	0227ab80 	call	227ab8 <__multiply>
  227d20:	90001b26 	beq	r18,zero,227d90 <__pow5mult+0xe0>
  227d24:	91000117 	ldw	r4,4(r18)
  227d28:	98c01317 	ldw	r3,76(r19)
  227d2c:	8021d07a 	srai	r16,r16,1
  227d30:	2109883a 	add	r4,r4,r4
  227d34:	2109883a 	add	r4,r4,r4
  227d38:	1907883a 	add	r3,r3,r4
  227d3c:	19000017 	ldw	r4,0(r3)
  227d40:	91000015 	stw	r4,0(r18)
  227d44:	1c800015 	stw	r18,0(r3)
  227d48:	1025883a 	mov	r18,r2
  227d4c:	803feb1e 	bne	r16,zero,227cfc <_gp+0xfffed174>
  227d50:	9005883a 	mov	r2,r18
  227d54:	dfc00517 	ldw	ra,20(sp)
  227d58:	dd000417 	ldw	r20,16(sp)
  227d5c:	dcc00317 	ldw	r19,12(sp)
  227d60:	dc800217 	ldw	r18,8(sp)
  227d64:	dc400117 	ldw	r17,4(sp)
  227d68:	dc000017 	ldw	r16,0(sp)
  227d6c:	dec00604 	addi	sp,sp,24
  227d70:	f800283a 	ret
  227d74:	880d883a 	mov	r6,r17
  227d78:	880b883a 	mov	r5,r17
  227d7c:	9809883a 	mov	r4,r19
  227d80:	0227ab80 	call	227ab8 <__multiply>
  227d84:	88800015 	stw	r2,0(r17)
  227d88:	10000015 	stw	zero,0(r2)
  227d8c:	003fdd06 	br	227d04 <_gp+0xfffed17c>
  227d90:	1025883a 	mov	r18,r2
  227d94:	003fd706 	br	227cf4 <_gp+0xfffed16c>
  227d98:	10bfffc4 	addi	r2,r2,-1
  227d9c:	1085883a 	add	r2,r2,r2
  227da0:	00c008f4 	movhi	r3,35
  227da4:	18c36804 	addi	r3,r3,3488
  227da8:	1085883a 	add	r2,r2,r2
  227dac:	1885883a 	add	r2,r3,r2
  227db0:	11800017 	ldw	r6,0(r2)
  227db4:	000f883a 	mov	r7,zero
  227db8:	02277400 	call	227740 <__multadd>
  227dbc:	1025883a 	mov	r18,r2
  227dc0:	003fc706 	br	227ce0 <_gp+0xfffed158>
  227dc4:	05000044 	movi	r20,1
  227dc8:	a00b883a 	mov	r5,r20
  227dcc:	9809883a 	mov	r4,r19
  227dd0:	02276700 	call	227670 <_Balloc>
  227dd4:	1023883a 	mov	r17,r2
  227dd8:	00809c44 	movi	r2,625
  227ddc:	88800515 	stw	r2,20(r17)
  227de0:	8d000415 	stw	r20,16(r17)
  227de4:	9c401215 	stw	r17,72(r19)
  227de8:	88000015 	stw	zero,0(r17)
  227dec:	003fc606 	br	227d08 <_gp+0xfffed180>

00227df0 <__lshift>:
  227df0:	defff904 	addi	sp,sp,-28
  227df4:	dd400515 	stw	r21,20(sp)
  227df8:	dcc00315 	stw	r19,12(sp)
  227dfc:	302bd17a 	srai	r21,r6,5
  227e00:	2cc00417 	ldw	r19,16(r5)
  227e04:	28800217 	ldw	r2,8(r5)
  227e08:	dd000415 	stw	r20,16(sp)
  227e0c:	ace7883a 	add	r19,r21,r19
  227e10:	dc800215 	stw	r18,8(sp)
  227e14:	dc400115 	stw	r17,4(sp)
  227e18:	dc000015 	stw	r16,0(sp)
  227e1c:	dfc00615 	stw	ra,24(sp)
  227e20:	9c000044 	addi	r16,r19,1
  227e24:	2823883a 	mov	r17,r5
  227e28:	3029883a 	mov	r20,r6
  227e2c:	2025883a 	mov	r18,r4
  227e30:	29400117 	ldw	r5,4(r5)
  227e34:	1400030e 	bge	r2,r16,227e44 <__lshift+0x54>
  227e38:	1085883a 	add	r2,r2,r2
  227e3c:	29400044 	addi	r5,r5,1
  227e40:	143ffd16 	blt	r2,r16,227e38 <_gp+0xfffed2b0>
  227e44:	9009883a 	mov	r4,r18
  227e48:	02276700 	call	227670 <_Balloc>
  227e4c:	10c00504 	addi	r3,r2,20
  227e50:	0540070e 	bge	zero,r21,227e70 <__lshift+0x80>
  227e54:	ad6b883a 	add	r21,r21,r21
  227e58:	ad6b883a 	add	r21,r21,r21
  227e5c:	1809883a 	mov	r4,r3
  227e60:	1d47883a 	add	r3,r3,r21
  227e64:	20000015 	stw	zero,0(r4)
  227e68:	21000104 	addi	r4,r4,4
  227e6c:	193ffd1e 	bne	r3,r4,227e64 <_gp+0xfffed2dc>
  227e70:	8a000417 	ldw	r8,16(r17)
  227e74:	89000504 	addi	r4,r17,20
  227e78:	a18007cc 	andi	r6,r20,31
  227e7c:	4211883a 	add	r8,r8,r8
  227e80:	4211883a 	add	r8,r8,r8
  227e84:	2211883a 	add	r8,r4,r8
  227e88:	30002326 	beq	r6,zero,227f18 <__lshift+0x128>
  227e8c:	02400804 	movi	r9,32
  227e90:	4993c83a 	sub	r9,r9,r6
  227e94:	000b883a 	mov	r5,zero
  227e98:	21c00017 	ldw	r7,0(r4)
  227e9c:	1815883a 	mov	r10,r3
  227ea0:	18c00104 	addi	r3,r3,4
  227ea4:	398e983a 	sll	r7,r7,r6
  227ea8:	21000104 	addi	r4,r4,4
  227eac:	394ab03a 	or	r5,r7,r5
  227eb0:	197fff15 	stw	r5,-4(r3)
  227eb4:	217fff17 	ldw	r5,-4(r4)
  227eb8:	2a4ad83a 	srl	r5,r5,r9
  227ebc:	223ff636 	bltu	r4,r8,227e98 <_gp+0xfffed310>
  227ec0:	51400115 	stw	r5,4(r10)
  227ec4:	28001a1e 	bne	r5,zero,227f30 <__lshift+0x140>
  227ec8:	843fffc4 	addi	r16,r16,-1
  227ecc:	14000415 	stw	r16,16(r2)
  227ed0:	88000826 	beq	r17,zero,227ef4 <__lshift+0x104>
  227ed4:	89000117 	ldw	r4,4(r17)
  227ed8:	90c01317 	ldw	r3,76(r18)
  227edc:	2109883a 	add	r4,r4,r4
  227ee0:	2109883a 	add	r4,r4,r4
  227ee4:	1907883a 	add	r3,r3,r4
  227ee8:	19000017 	ldw	r4,0(r3)
  227eec:	89000015 	stw	r4,0(r17)
  227ef0:	1c400015 	stw	r17,0(r3)
  227ef4:	dfc00617 	ldw	ra,24(sp)
  227ef8:	dd400517 	ldw	r21,20(sp)
  227efc:	dd000417 	ldw	r20,16(sp)
  227f00:	dcc00317 	ldw	r19,12(sp)
  227f04:	dc800217 	ldw	r18,8(sp)
  227f08:	dc400117 	ldw	r17,4(sp)
  227f0c:	dc000017 	ldw	r16,0(sp)
  227f10:	dec00704 	addi	sp,sp,28
  227f14:	f800283a 	ret
  227f18:	21400017 	ldw	r5,0(r4)
  227f1c:	18c00104 	addi	r3,r3,4
  227f20:	21000104 	addi	r4,r4,4
  227f24:	197fff15 	stw	r5,-4(r3)
  227f28:	223ffb36 	bltu	r4,r8,227f18 <_gp+0xfffed390>
  227f2c:	003fe606 	br	227ec8 <_gp+0xfffed340>
  227f30:	9c000084 	addi	r16,r19,2
  227f34:	003fe406 	br	227ec8 <_gp+0xfffed340>

00227f38 <__mcmp>:
  227f38:	20800417 	ldw	r2,16(r4)
  227f3c:	28c00417 	ldw	r3,16(r5)
  227f40:	10c5c83a 	sub	r2,r2,r3
  227f44:	1000111e 	bne	r2,zero,227f8c <__mcmp+0x54>
  227f48:	18c7883a 	add	r3,r3,r3
  227f4c:	18c7883a 	add	r3,r3,r3
  227f50:	21000504 	addi	r4,r4,20
  227f54:	29400504 	addi	r5,r5,20
  227f58:	20c5883a 	add	r2,r4,r3
  227f5c:	28cb883a 	add	r5,r5,r3
  227f60:	00000106 	br	227f68 <__mcmp+0x30>
  227f64:	20800a2e 	bgeu	r4,r2,227f90 <__mcmp+0x58>
  227f68:	10bfff04 	addi	r2,r2,-4
  227f6c:	297fff04 	addi	r5,r5,-4
  227f70:	11800017 	ldw	r6,0(r2)
  227f74:	28c00017 	ldw	r3,0(r5)
  227f78:	30fffa26 	beq	r6,r3,227f64 <_gp+0xfffed3dc>
  227f7c:	30c00236 	bltu	r6,r3,227f88 <__mcmp+0x50>
  227f80:	00800044 	movi	r2,1
  227f84:	f800283a 	ret
  227f88:	00bfffc4 	movi	r2,-1
  227f8c:	f800283a 	ret
  227f90:	0005883a 	mov	r2,zero
  227f94:	f800283a 	ret

00227f98 <__mdiff>:
  227f98:	28c00417 	ldw	r3,16(r5)
  227f9c:	30800417 	ldw	r2,16(r6)
  227fa0:	defffa04 	addi	sp,sp,-24
  227fa4:	dcc00315 	stw	r19,12(sp)
  227fa8:	dc800215 	stw	r18,8(sp)
  227fac:	dfc00515 	stw	ra,20(sp)
  227fb0:	dd000415 	stw	r20,16(sp)
  227fb4:	dc400115 	stw	r17,4(sp)
  227fb8:	dc000015 	stw	r16,0(sp)
  227fbc:	1887c83a 	sub	r3,r3,r2
  227fc0:	2825883a 	mov	r18,r5
  227fc4:	3027883a 	mov	r19,r6
  227fc8:	1800141e 	bne	r3,zero,22801c <__mdiff+0x84>
  227fcc:	1085883a 	add	r2,r2,r2
  227fd0:	1085883a 	add	r2,r2,r2
  227fd4:	2a000504 	addi	r8,r5,20
  227fd8:	34000504 	addi	r16,r6,20
  227fdc:	4087883a 	add	r3,r8,r2
  227fe0:	8085883a 	add	r2,r16,r2
  227fe4:	00000106 	br	227fec <__mdiff+0x54>
  227fe8:	40c0592e 	bgeu	r8,r3,228150 <__mdiff+0x1b8>
  227fec:	18ffff04 	addi	r3,r3,-4
  227ff0:	10bfff04 	addi	r2,r2,-4
  227ff4:	19c00017 	ldw	r7,0(r3)
  227ff8:	11400017 	ldw	r5,0(r2)
  227ffc:	397ffa26 	beq	r7,r5,227fe8 <_gp+0xfffed460>
  228000:	3940592e 	bgeu	r7,r5,228168 <__mdiff+0x1d0>
  228004:	9005883a 	mov	r2,r18
  228008:	4023883a 	mov	r17,r8
  22800c:	9825883a 	mov	r18,r19
  228010:	05000044 	movi	r20,1
  228014:	1027883a 	mov	r19,r2
  228018:	00000406 	br	22802c <__mdiff+0x94>
  22801c:	18005616 	blt	r3,zero,228178 <__mdiff+0x1e0>
  228020:	34400504 	addi	r17,r6,20
  228024:	2c000504 	addi	r16,r5,20
  228028:	0029883a 	mov	r20,zero
  22802c:	91400117 	ldw	r5,4(r18)
  228030:	02276700 	call	227670 <_Balloc>
  228034:	92400417 	ldw	r9,16(r18)
  228038:	9b000417 	ldw	r12,16(r19)
  22803c:	12c00504 	addi	r11,r2,20
  228040:	4a51883a 	add	r8,r9,r9
  228044:	6319883a 	add	r12,r12,r12
  228048:	4211883a 	add	r8,r8,r8
  22804c:	6319883a 	add	r12,r12,r12
  228050:	15000315 	stw	r20,12(r2)
  228054:	8211883a 	add	r8,r16,r8
  228058:	8b19883a 	add	r12,r17,r12
  22805c:	0007883a 	mov	r3,zero
  228060:	81400017 	ldw	r5,0(r16)
  228064:	89c00017 	ldw	r7,0(r17)
  228068:	59800104 	addi	r6,r11,4
  22806c:	293fffcc 	andi	r4,r5,65535
  228070:	20c7883a 	add	r3,r4,r3
  228074:	393fffcc 	andi	r4,r7,65535
  228078:	1909c83a 	sub	r4,r3,r4
  22807c:	280ad43a 	srli	r5,r5,16
  228080:	380ed43a 	srli	r7,r7,16
  228084:	2007d43a 	srai	r3,r4,16
  228088:	213fffcc 	andi	r4,r4,65535
  22808c:	29cbc83a 	sub	r5,r5,r7
  228090:	28c7883a 	add	r3,r5,r3
  228094:	180a943a 	slli	r5,r3,16
  228098:	8c400104 	addi	r17,r17,4
  22809c:	84000104 	addi	r16,r16,4
  2280a0:	2908b03a 	or	r4,r5,r4
  2280a4:	59000015 	stw	r4,0(r11)
  2280a8:	1807d43a 	srai	r3,r3,16
  2280ac:	3015883a 	mov	r10,r6
  2280b0:	3017883a 	mov	r11,r6
  2280b4:	8b3fea36 	bltu	r17,r12,228060 <_gp+0xfffed4d8>
  2280b8:	8200162e 	bgeu	r16,r8,228114 <__mdiff+0x17c>
  2280bc:	8017883a 	mov	r11,r16
  2280c0:	59400017 	ldw	r5,0(r11)
  2280c4:	31800104 	addi	r6,r6,4
  2280c8:	5ac00104 	addi	r11,r11,4
  2280cc:	293fffcc 	andi	r4,r5,65535
  2280d0:	20c7883a 	add	r3,r4,r3
  2280d4:	280ed43a 	srli	r7,r5,16
  2280d8:	180bd43a 	srai	r5,r3,16
  2280dc:	193fffcc 	andi	r4,r3,65535
  2280e0:	3947883a 	add	r3,r7,r5
  2280e4:	180a943a 	slli	r5,r3,16
  2280e8:	1807d43a 	srai	r3,r3,16
  2280ec:	2908b03a 	or	r4,r5,r4
  2280f0:	313fff15 	stw	r4,-4(r6)
  2280f4:	5a3ff236 	bltu	r11,r8,2280c0 <_gp+0xfffed538>
  2280f8:	0406303a 	nor	r3,zero,r16
  2280fc:	1a07883a 	add	r3,r3,r8
  228100:	1806d0ba 	srli	r3,r3,2
  228104:	18c00044 	addi	r3,r3,1
  228108:	18c7883a 	add	r3,r3,r3
  22810c:	18c7883a 	add	r3,r3,r3
  228110:	50d5883a 	add	r10,r10,r3
  228114:	50ffff04 	addi	r3,r10,-4
  228118:	2000041e 	bne	r4,zero,22812c <__mdiff+0x194>
  22811c:	18ffff04 	addi	r3,r3,-4
  228120:	19000017 	ldw	r4,0(r3)
  228124:	4a7fffc4 	addi	r9,r9,-1
  228128:	203ffc26 	beq	r4,zero,22811c <_gp+0xfffed594>
  22812c:	12400415 	stw	r9,16(r2)
  228130:	dfc00517 	ldw	ra,20(sp)
  228134:	dd000417 	ldw	r20,16(sp)
  228138:	dcc00317 	ldw	r19,12(sp)
  22813c:	dc800217 	ldw	r18,8(sp)
  228140:	dc400117 	ldw	r17,4(sp)
  228144:	dc000017 	ldw	r16,0(sp)
  228148:	dec00604 	addi	sp,sp,24
  22814c:	f800283a 	ret
  228150:	000b883a 	mov	r5,zero
  228154:	02276700 	call	227670 <_Balloc>
  228158:	00c00044 	movi	r3,1
  22815c:	10c00415 	stw	r3,16(r2)
  228160:	10000515 	stw	zero,20(r2)
  228164:	003ff206 	br	228130 <_gp+0xfffed5a8>
  228168:	8023883a 	mov	r17,r16
  22816c:	0029883a 	mov	r20,zero
  228170:	4021883a 	mov	r16,r8
  228174:	003fad06 	br	22802c <_gp+0xfffed4a4>
  228178:	9005883a 	mov	r2,r18
  22817c:	94400504 	addi	r17,r18,20
  228180:	9c000504 	addi	r16,r19,20
  228184:	9825883a 	mov	r18,r19
  228188:	05000044 	movi	r20,1
  22818c:	1027883a 	mov	r19,r2
  228190:	003fa606 	br	22802c <_gp+0xfffed4a4>

00228194 <__ulp>:
  228194:	295ffc2c 	andhi	r5,r5,32752
  228198:	00bf3034 	movhi	r2,64704
  22819c:	2887883a 	add	r3,r5,r2
  2281a0:	00c0020e 	bge	zero,r3,2281ac <__ulp+0x18>
  2281a4:	0005883a 	mov	r2,zero
  2281a8:	f800283a 	ret
  2281ac:	00c7c83a 	sub	r3,zero,r3
  2281b0:	1807d53a 	srai	r3,r3,20
  2281b4:	008004c4 	movi	r2,19
  2281b8:	10c00b0e 	bge	r2,r3,2281e8 <__ulp+0x54>
  2281bc:	18bffb04 	addi	r2,r3,-20
  2281c0:	01000784 	movi	r4,30
  2281c4:	0007883a 	mov	r3,zero
  2281c8:	20800516 	blt	r4,r2,2281e0 <__ulp+0x4c>
  2281cc:	010007c4 	movi	r4,31
  2281d0:	2089c83a 	sub	r4,r4,r2
  2281d4:	00800044 	movi	r2,1
  2281d8:	1104983a 	sll	r2,r2,r4
  2281dc:	f800283a 	ret
  2281e0:	00800044 	movi	r2,1
  2281e4:	f800283a 	ret
  2281e8:	01400234 	movhi	r5,8
  2281ec:	28c7d83a 	sra	r3,r5,r3
  2281f0:	0005883a 	mov	r2,zero
  2281f4:	f800283a 	ret

002281f8 <__b2d>:
  2281f8:	defffa04 	addi	sp,sp,-24
  2281fc:	dc000015 	stw	r16,0(sp)
  228200:	24000417 	ldw	r16,16(r4)
  228204:	dc400115 	stw	r17,4(sp)
  228208:	24400504 	addi	r17,r4,20
  22820c:	8421883a 	add	r16,r16,r16
  228210:	8421883a 	add	r16,r16,r16
  228214:	8c21883a 	add	r16,r17,r16
  228218:	dc800215 	stw	r18,8(sp)
  22821c:	84bfff17 	ldw	r18,-4(r16)
  228220:	dd000415 	stw	r20,16(sp)
  228224:	dcc00315 	stw	r19,12(sp)
  228228:	9009883a 	mov	r4,r18
  22822c:	2829883a 	mov	r20,r5
  228230:	dfc00515 	stw	ra,20(sp)
  228234:	02279640 	call	227964 <__hi0bits>
  228238:	00c00804 	movi	r3,32
  22823c:	1889c83a 	sub	r4,r3,r2
  228240:	a1000015 	stw	r4,0(r20)
  228244:	01000284 	movi	r4,10
  228248:	84ffff04 	addi	r19,r16,-4
  22824c:	20801216 	blt	r4,r2,228298 <__b2d+0xa0>
  228250:	018002c4 	movi	r6,11
  228254:	308dc83a 	sub	r6,r6,r2
  228258:	9186d83a 	srl	r3,r18,r6
  22825c:	18cffc34 	orhi	r3,r3,16368
  228260:	8cc0212e 	bgeu	r17,r19,2282e8 <__b2d+0xf0>
  228264:	813ffe17 	ldw	r4,-8(r16)
  228268:	218cd83a 	srl	r6,r4,r6
  22826c:	10800544 	addi	r2,r2,21
  228270:	9084983a 	sll	r2,r18,r2
  228274:	1184b03a 	or	r2,r2,r6
  228278:	dfc00517 	ldw	ra,20(sp)
  22827c:	dd000417 	ldw	r20,16(sp)
  228280:	dcc00317 	ldw	r19,12(sp)
  228284:	dc800217 	ldw	r18,8(sp)
  228288:	dc400117 	ldw	r17,4(sp)
  22828c:	dc000017 	ldw	r16,0(sp)
  228290:	dec00604 	addi	sp,sp,24
  228294:	f800283a 	ret
  228298:	8cc00f2e 	bgeu	r17,r19,2282d8 <__b2d+0xe0>
  22829c:	117ffd44 	addi	r5,r2,-11
  2282a0:	80bffe17 	ldw	r2,-8(r16)
  2282a4:	28000e26 	beq	r5,zero,2282e0 <__b2d+0xe8>
  2282a8:	1949c83a 	sub	r4,r3,r5
  2282ac:	9164983a 	sll	r18,r18,r5
  2282b0:	1106d83a 	srl	r3,r2,r4
  2282b4:	81bffe04 	addi	r6,r16,-8
  2282b8:	948ffc34 	orhi	r18,r18,16368
  2282bc:	90c6b03a 	or	r3,r18,r3
  2282c0:	89800e2e 	bgeu	r17,r6,2282fc <__b2d+0x104>
  2282c4:	81bffd17 	ldw	r6,-12(r16)
  2282c8:	1144983a 	sll	r2,r2,r5
  2282cc:	310ad83a 	srl	r5,r6,r4
  2282d0:	2884b03a 	or	r2,r5,r2
  2282d4:	003fe806 	br	228278 <_gp+0xfffed6f0>
  2282d8:	10bffd44 	addi	r2,r2,-11
  2282dc:	1000041e 	bne	r2,zero,2282f0 <__b2d+0xf8>
  2282e0:	90cffc34 	orhi	r3,r18,16368
  2282e4:	003fe406 	br	228278 <_gp+0xfffed6f0>
  2282e8:	000d883a 	mov	r6,zero
  2282ec:	003fdf06 	br	22826c <_gp+0xfffed6e4>
  2282f0:	90a4983a 	sll	r18,r18,r2
  2282f4:	0005883a 	mov	r2,zero
  2282f8:	003ff906 	br	2282e0 <_gp+0xfffed758>
  2282fc:	1144983a 	sll	r2,r2,r5
  228300:	003fdd06 	br	228278 <_gp+0xfffed6f0>

00228304 <__d2b>:
  228304:	defff804 	addi	sp,sp,-32
  228308:	dc000215 	stw	r16,8(sp)
  22830c:	3021883a 	mov	r16,r6
  228310:	dc400315 	stw	r17,12(sp)
  228314:	8022907a 	slli	r17,r16,1
  228318:	dd000615 	stw	r20,24(sp)
  22831c:	2829883a 	mov	r20,r5
  228320:	01400044 	movi	r5,1
  228324:	dcc00515 	stw	r19,20(sp)
  228328:	dc800415 	stw	r18,16(sp)
  22832c:	dfc00715 	stw	ra,28(sp)
  228330:	3825883a 	mov	r18,r7
  228334:	8822d57a 	srli	r17,r17,21
  228338:	02276700 	call	227670 <_Balloc>
  22833c:	1027883a 	mov	r19,r2
  228340:	00800434 	movhi	r2,16
  228344:	10bfffc4 	addi	r2,r2,-1
  228348:	808c703a 	and	r6,r16,r2
  22834c:	88000126 	beq	r17,zero,228354 <__d2b+0x50>
  228350:	31800434 	orhi	r6,r6,16
  228354:	d9800015 	stw	r6,0(sp)
  228358:	a0002426 	beq	r20,zero,2283ec <__d2b+0xe8>
  22835c:	d9000104 	addi	r4,sp,4
  228360:	dd000115 	stw	r20,4(sp)
  228364:	02279cc0 	call	2279cc <__lo0bits>
  228368:	d8c00017 	ldw	r3,0(sp)
  22836c:	10002f1e 	bne	r2,zero,22842c <__d2b+0x128>
  228370:	d9000117 	ldw	r4,4(sp)
  228374:	99000515 	stw	r4,20(r19)
  228378:	1821003a 	cmpeq	r16,r3,zero
  22837c:	01000084 	movi	r4,2
  228380:	2421c83a 	sub	r16,r4,r16
  228384:	98c00615 	stw	r3,24(r19)
  228388:	9c000415 	stw	r16,16(r19)
  22838c:	88001f1e 	bne	r17,zero,22840c <__d2b+0x108>
  228390:	10bef384 	addi	r2,r2,-1074
  228394:	90800015 	stw	r2,0(r18)
  228398:	00900034 	movhi	r2,16384
  22839c:	10bfffc4 	addi	r2,r2,-1
  2283a0:	8085883a 	add	r2,r16,r2
  2283a4:	1085883a 	add	r2,r2,r2
  2283a8:	1085883a 	add	r2,r2,r2
  2283ac:	9885883a 	add	r2,r19,r2
  2283b0:	11000517 	ldw	r4,20(r2)
  2283b4:	8020917a 	slli	r16,r16,5
  2283b8:	02279640 	call	227964 <__hi0bits>
  2283bc:	d8c00817 	ldw	r3,32(sp)
  2283c0:	8085c83a 	sub	r2,r16,r2
  2283c4:	18800015 	stw	r2,0(r3)
  2283c8:	9805883a 	mov	r2,r19
  2283cc:	dfc00717 	ldw	ra,28(sp)
  2283d0:	dd000617 	ldw	r20,24(sp)
  2283d4:	dcc00517 	ldw	r19,20(sp)
  2283d8:	dc800417 	ldw	r18,16(sp)
  2283dc:	dc400317 	ldw	r17,12(sp)
  2283e0:	dc000217 	ldw	r16,8(sp)
  2283e4:	dec00804 	addi	sp,sp,32
  2283e8:	f800283a 	ret
  2283ec:	d809883a 	mov	r4,sp
  2283f0:	02279cc0 	call	2279cc <__lo0bits>
  2283f4:	d8c00017 	ldw	r3,0(sp)
  2283f8:	04000044 	movi	r16,1
  2283fc:	9c000415 	stw	r16,16(r19)
  228400:	98c00515 	stw	r3,20(r19)
  228404:	10800804 	addi	r2,r2,32
  228408:	883fe126 	beq	r17,zero,228390 <_gp+0xfffed808>
  22840c:	00c00d44 	movi	r3,53
  228410:	8c7ef344 	addi	r17,r17,-1075
  228414:	88a3883a 	add	r17,r17,r2
  228418:	1885c83a 	sub	r2,r3,r2
  22841c:	d8c00817 	ldw	r3,32(sp)
  228420:	94400015 	stw	r17,0(r18)
  228424:	18800015 	stw	r2,0(r3)
  228428:	003fe706 	br	2283c8 <_gp+0xfffed840>
  22842c:	01000804 	movi	r4,32
  228430:	2089c83a 	sub	r4,r4,r2
  228434:	1908983a 	sll	r4,r3,r4
  228438:	d9400117 	ldw	r5,4(sp)
  22843c:	1886d83a 	srl	r3,r3,r2
  228440:	2148b03a 	or	r4,r4,r5
  228444:	99000515 	stw	r4,20(r19)
  228448:	d8c00015 	stw	r3,0(sp)
  22844c:	003fca06 	br	228378 <_gp+0xfffed7f0>

00228450 <__ratio>:
  228450:	defff904 	addi	sp,sp,-28
  228454:	dc400315 	stw	r17,12(sp)
  228458:	2823883a 	mov	r17,r5
  22845c:	d9400104 	addi	r5,sp,4
  228460:	dfc00615 	stw	ra,24(sp)
  228464:	dcc00515 	stw	r19,20(sp)
  228468:	dc800415 	stw	r18,16(sp)
  22846c:	2027883a 	mov	r19,r4
  228470:	dc000215 	stw	r16,8(sp)
  228474:	02281f80 	call	2281f8 <__b2d>
  228478:	d80b883a 	mov	r5,sp
  22847c:	8809883a 	mov	r4,r17
  228480:	1025883a 	mov	r18,r2
  228484:	1821883a 	mov	r16,r3
  228488:	02281f80 	call	2281f8 <__b2d>
  22848c:	8a000417 	ldw	r8,16(r17)
  228490:	99000417 	ldw	r4,16(r19)
  228494:	d9400117 	ldw	r5,4(sp)
  228498:	2209c83a 	sub	r4,r4,r8
  22849c:	2010917a 	slli	r8,r4,5
  2284a0:	d9000017 	ldw	r4,0(sp)
  2284a4:	2909c83a 	sub	r4,r5,r4
  2284a8:	4109883a 	add	r4,r8,r4
  2284ac:	01000e0e 	bge	zero,r4,2284e8 <__ratio+0x98>
  2284b0:	2008953a 	slli	r4,r4,20
  2284b4:	2421883a 	add	r16,r4,r16
  2284b8:	100d883a 	mov	r6,r2
  2284bc:	180f883a 	mov	r7,r3
  2284c0:	9009883a 	mov	r4,r18
  2284c4:	800b883a 	mov	r5,r16
  2284c8:	022bee40 	call	22bee4 <__divdf3>
  2284cc:	dfc00617 	ldw	ra,24(sp)
  2284d0:	dcc00517 	ldw	r19,20(sp)
  2284d4:	dc800417 	ldw	r18,16(sp)
  2284d8:	dc400317 	ldw	r17,12(sp)
  2284dc:	dc000217 	ldw	r16,8(sp)
  2284e0:	dec00704 	addi	sp,sp,28
  2284e4:	f800283a 	ret
  2284e8:	2008953a 	slli	r4,r4,20
  2284ec:	1907c83a 	sub	r3,r3,r4
  2284f0:	003ff106 	br	2284b8 <_gp+0xfffed930>

002284f4 <_mprec_log10>:
  2284f4:	defffe04 	addi	sp,sp,-8
  2284f8:	dc000015 	stw	r16,0(sp)
  2284fc:	dfc00115 	stw	ra,4(sp)
  228500:	008005c4 	movi	r2,23
  228504:	2021883a 	mov	r16,r4
  228508:	11000d0e 	bge	r2,r4,228540 <_mprec_log10+0x4c>
  22850c:	0005883a 	mov	r2,zero
  228510:	00cffc34 	movhi	r3,16368
  228514:	843fffc4 	addi	r16,r16,-1
  228518:	000d883a 	mov	r6,zero
  22851c:	01d00934 	movhi	r7,16420
  228520:	1009883a 	mov	r4,r2
  228524:	180b883a 	mov	r5,r3
  228528:	022ca240 	call	22ca24 <__muldf3>
  22852c:	803ff91e 	bne	r16,zero,228514 <_gp+0xfffed98c>
  228530:	dfc00117 	ldw	ra,4(sp)
  228534:	dc000017 	ldw	r16,0(sp)
  228538:	dec00204 	addi	sp,sp,8
  22853c:	f800283a 	ret
  228540:	202090fa 	slli	r16,r4,3
  228544:	008008f4 	movhi	r2,35
  228548:	10837f04 	addi	r2,r2,3580
  22854c:	1421883a 	add	r16,r2,r16
  228550:	80800017 	ldw	r2,0(r16)
  228554:	80c00117 	ldw	r3,4(r16)
  228558:	dfc00117 	ldw	ra,4(sp)
  22855c:	dc000017 	ldw	r16,0(sp)
  228560:	dec00204 	addi	sp,sp,8
  228564:	f800283a 	ret

00228568 <__copybits>:
  228568:	297fffc4 	addi	r5,r5,-1
  22856c:	280fd17a 	srai	r7,r5,5
  228570:	30c00417 	ldw	r3,16(r6)
  228574:	30800504 	addi	r2,r6,20
  228578:	39c00044 	addi	r7,r7,1
  22857c:	18c7883a 	add	r3,r3,r3
  228580:	39cf883a 	add	r7,r7,r7
  228584:	18c7883a 	add	r3,r3,r3
  228588:	39cf883a 	add	r7,r7,r7
  22858c:	10c7883a 	add	r3,r2,r3
  228590:	21cf883a 	add	r7,r4,r7
  228594:	10c00d2e 	bgeu	r2,r3,2285cc <__copybits+0x64>
  228598:	200b883a 	mov	r5,r4
  22859c:	12000017 	ldw	r8,0(r2)
  2285a0:	29400104 	addi	r5,r5,4
  2285a4:	10800104 	addi	r2,r2,4
  2285a8:	2a3fff15 	stw	r8,-4(r5)
  2285ac:	10fffb36 	bltu	r2,r3,22859c <_gp+0xfffeda14>
  2285b0:	1985c83a 	sub	r2,r3,r6
  2285b4:	10bffac4 	addi	r2,r2,-21
  2285b8:	1004d0ba 	srli	r2,r2,2
  2285bc:	10800044 	addi	r2,r2,1
  2285c0:	1085883a 	add	r2,r2,r2
  2285c4:	1085883a 	add	r2,r2,r2
  2285c8:	2089883a 	add	r4,r4,r2
  2285cc:	21c0032e 	bgeu	r4,r7,2285dc <__copybits+0x74>
  2285d0:	20000015 	stw	zero,0(r4)
  2285d4:	21000104 	addi	r4,r4,4
  2285d8:	21fffd36 	bltu	r4,r7,2285d0 <_gp+0xfffeda48>
  2285dc:	f800283a 	ret

002285e0 <__any_on>:
  2285e0:	20c00417 	ldw	r3,16(r4)
  2285e4:	2805d17a 	srai	r2,r5,5
  2285e8:	21000504 	addi	r4,r4,20
  2285ec:	18800d0e 	bge	r3,r2,228624 <__any_on+0x44>
  2285f0:	18c7883a 	add	r3,r3,r3
  2285f4:	18c7883a 	add	r3,r3,r3
  2285f8:	20c7883a 	add	r3,r4,r3
  2285fc:	20c0192e 	bgeu	r4,r3,228664 <__any_on+0x84>
  228600:	18bfff17 	ldw	r2,-4(r3)
  228604:	18ffff04 	addi	r3,r3,-4
  228608:	1000041e 	bne	r2,zero,22861c <__any_on+0x3c>
  22860c:	20c0142e 	bgeu	r4,r3,228660 <__any_on+0x80>
  228610:	18ffff04 	addi	r3,r3,-4
  228614:	19400017 	ldw	r5,0(r3)
  228618:	283ffc26 	beq	r5,zero,22860c <_gp+0xfffeda84>
  22861c:	00800044 	movi	r2,1
  228620:	f800283a 	ret
  228624:	10c00a0e 	bge	r2,r3,228650 <__any_on+0x70>
  228628:	1085883a 	add	r2,r2,r2
  22862c:	1085883a 	add	r2,r2,r2
  228630:	294007cc 	andi	r5,r5,31
  228634:	2087883a 	add	r3,r4,r2
  228638:	283ff026 	beq	r5,zero,2285fc <_gp+0xfffeda74>
  22863c:	19800017 	ldw	r6,0(r3)
  228640:	3144d83a 	srl	r2,r6,r5
  228644:	114a983a 	sll	r5,r2,r5
  228648:	317ff41e 	bne	r6,r5,22861c <_gp+0xfffeda94>
  22864c:	003feb06 	br	2285fc <_gp+0xfffeda74>
  228650:	1085883a 	add	r2,r2,r2
  228654:	1085883a 	add	r2,r2,r2
  228658:	2087883a 	add	r3,r4,r2
  22865c:	003fe706 	br	2285fc <_gp+0xfffeda74>
  228660:	f800283a 	ret
  228664:	0005883a 	mov	r2,zero
  228668:	f800283a 	ret

0022866c <_read_r>:
  22866c:	defffd04 	addi	sp,sp,-12
  228670:	2805883a 	mov	r2,r5
  228674:	dc000015 	stw	r16,0(sp)
  228678:	040008f4 	movhi	r16,35
  22867c:	dc400115 	stw	r17,4(sp)
  228680:	300b883a 	mov	r5,r6
  228684:	84120204 	addi	r16,r16,18440
  228688:	2023883a 	mov	r17,r4
  22868c:	380d883a 	mov	r6,r7
  228690:	1009883a 	mov	r4,r2
  228694:	dfc00215 	stw	ra,8(sp)
  228698:	80000015 	stw	zero,0(r16)
  22869c:	022e6540 	call	22e654 <read>
  2286a0:	00ffffc4 	movi	r3,-1
  2286a4:	10c00526 	beq	r2,r3,2286bc <_read_r+0x50>
  2286a8:	dfc00217 	ldw	ra,8(sp)
  2286ac:	dc400117 	ldw	r17,4(sp)
  2286b0:	dc000017 	ldw	r16,0(sp)
  2286b4:	dec00304 	addi	sp,sp,12
  2286b8:	f800283a 	ret
  2286bc:	80c00017 	ldw	r3,0(r16)
  2286c0:	183ff926 	beq	r3,zero,2286a8 <_gp+0xfffedb20>
  2286c4:	88c00015 	stw	r3,0(r17)
  2286c8:	003ff706 	br	2286a8 <_gp+0xfffedb20>

002286cc <_realloc_r>:
  2286cc:	defff604 	addi	sp,sp,-40
  2286d0:	dc800215 	stw	r18,8(sp)
  2286d4:	dfc00915 	stw	ra,36(sp)
  2286d8:	df000815 	stw	fp,32(sp)
  2286dc:	ddc00715 	stw	r23,28(sp)
  2286e0:	dd800615 	stw	r22,24(sp)
  2286e4:	dd400515 	stw	r21,20(sp)
  2286e8:	dd000415 	stw	r20,16(sp)
  2286ec:	dcc00315 	stw	r19,12(sp)
  2286f0:	dc400115 	stw	r17,4(sp)
  2286f4:	dc000015 	stw	r16,0(sp)
  2286f8:	3025883a 	mov	r18,r6
  2286fc:	2800b726 	beq	r5,zero,2289dc <_realloc_r+0x310>
  228700:	282b883a 	mov	r21,r5
  228704:	2029883a 	mov	r20,r4
  228708:	022e37c0 	call	22e37c <__malloc_lock>
  22870c:	a8bfff17 	ldw	r2,-4(r21)
  228710:	043fff04 	movi	r16,-4
  228714:	90c002c4 	addi	r3,r18,11
  228718:	01000584 	movi	r4,22
  22871c:	acfffe04 	addi	r19,r21,-8
  228720:	1420703a 	and	r16,r2,r16
  228724:	20c0332e 	bgeu	r4,r3,2287f4 <_realloc_r+0x128>
  228728:	047ffe04 	movi	r17,-8
  22872c:	1c62703a 	and	r17,r3,r17
  228730:	8807883a 	mov	r3,r17
  228734:	88005816 	blt	r17,zero,228898 <_realloc_r+0x1cc>
  228738:	8c805736 	bltu	r17,r18,228898 <_realloc_r+0x1cc>
  22873c:	80c0300e 	bge	r16,r3,228800 <_realloc_r+0x134>
  228740:	070008f4 	movhi	fp,35
  228744:	e7095804 	addi	fp,fp,9568
  228748:	e1c00217 	ldw	r7,8(fp)
  22874c:	9c09883a 	add	r4,r19,r16
  228750:	22000117 	ldw	r8,4(r4)
  228754:	21c06326 	beq	r4,r7,2288e4 <_realloc_r+0x218>
  228758:	017fff84 	movi	r5,-2
  22875c:	414a703a 	and	r5,r8,r5
  228760:	214b883a 	add	r5,r4,r5
  228764:	29800117 	ldw	r6,4(r5)
  228768:	3180004c 	andi	r6,r6,1
  22876c:	30003f26 	beq	r6,zero,22886c <_realloc_r+0x1a0>
  228770:	1080004c 	andi	r2,r2,1
  228774:	10008326 	beq	r2,zero,228984 <_realloc_r+0x2b8>
  228778:	900b883a 	mov	r5,r18
  22877c:	a009883a 	mov	r4,r20
  228780:	0221eb40 	call	221eb4 <_malloc_r>
  228784:	1025883a 	mov	r18,r2
  228788:	10011e26 	beq	r2,zero,228c04 <_realloc_r+0x538>
  22878c:	a93fff17 	ldw	r4,-4(r21)
  228790:	10fffe04 	addi	r3,r2,-8
  228794:	00bfff84 	movi	r2,-2
  228798:	2084703a 	and	r2,r4,r2
  22879c:	9885883a 	add	r2,r19,r2
  2287a0:	1880ee26 	beq	r3,r2,228b5c <_realloc_r+0x490>
  2287a4:	81bfff04 	addi	r6,r16,-4
  2287a8:	00800904 	movi	r2,36
  2287ac:	1180b836 	bltu	r2,r6,228a90 <_realloc_r+0x3c4>
  2287b0:	00c004c4 	movi	r3,19
  2287b4:	19809636 	bltu	r3,r6,228a10 <_realloc_r+0x344>
  2287b8:	9005883a 	mov	r2,r18
  2287bc:	a807883a 	mov	r3,r21
  2287c0:	19000017 	ldw	r4,0(r3)
  2287c4:	11000015 	stw	r4,0(r2)
  2287c8:	19000117 	ldw	r4,4(r3)
  2287cc:	11000115 	stw	r4,4(r2)
  2287d0:	18c00217 	ldw	r3,8(r3)
  2287d4:	10c00215 	stw	r3,8(r2)
  2287d8:	a80b883a 	mov	r5,r21
  2287dc:	a009883a 	mov	r4,r20
  2287e0:	02213180 	call	221318 <_free_r>
  2287e4:	a009883a 	mov	r4,r20
  2287e8:	022e3a00 	call	22e3a0 <__malloc_unlock>
  2287ec:	9005883a 	mov	r2,r18
  2287f0:	00001206 	br	22883c <_realloc_r+0x170>
  2287f4:	00c00404 	movi	r3,16
  2287f8:	1823883a 	mov	r17,r3
  2287fc:	003fce06 	br	228738 <_gp+0xfffedbb0>
  228800:	a825883a 	mov	r18,r21
  228804:	8445c83a 	sub	r2,r16,r17
  228808:	00c003c4 	movi	r3,15
  22880c:	18802636 	bltu	r3,r2,2288a8 <_realloc_r+0x1dc>
  228810:	99800117 	ldw	r6,4(r19)
  228814:	9c07883a 	add	r3,r19,r16
  228818:	3180004c 	andi	r6,r6,1
  22881c:	3420b03a 	or	r16,r6,r16
  228820:	9c000115 	stw	r16,4(r19)
  228824:	18800117 	ldw	r2,4(r3)
  228828:	10800054 	ori	r2,r2,1
  22882c:	18800115 	stw	r2,4(r3)
  228830:	a009883a 	mov	r4,r20
  228834:	022e3a00 	call	22e3a0 <__malloc_unlock>
  228838:	9005883a 	mov	r2,r18
  22883c:	dfc00917 	ldw	ra,36(sp)
  228840:	df000817 	ldw	fp,32(sp)
  228844:	ddc00717 	ldw	r23,28(sp)
  228848:	dd800617 	ldw	r22,24(sp)
  22884c:	dd400517 	ldw	r21,20(sp)
  228850:	dd000417 	ldw	r20,16(sp)
  228854:	dcc00317 	ldw	r19,12(sp)
  228858:	dc800217 	ldw	r18,8(sp)
  22885c:	dc400117 	ldw	r17,4(sp)
  228860:	dc000017 	ldw	r16,0(sp)
  228864:	dec00a04 	addi	sp,sp,40
  228868:	f800283a 	ret
  22886c:	017fff04 	movi	r5,-4
  228870:	414a703a 	and	r5,r8,r5
  228874:	814d883a 	add	r6,r16,r5
  228878:	30c01f16 	blt	r6,r3,2288f8 <_realloc_r+0x22c>
  22887c:	20800317 	ldw	r2,12(r4)
  228880:	20c00217 	ldw	r3,8(r4)
  228884:	a825883a 	mov	r18,r21
  228888:	3021883a 	mov	r16,r6
  22888c:	18800315 	stw	r2,12(r3)
  228890:	10c00215 	stw	r3,8(r2)
  228894:	003fdb06 	br	228804 <_gp+0xfffedc7c>
  228898:	00800304 	movi	r2,12
  22889c:	a0800015 	stw	r2,0(r20)
  2288a0:	0005883a 	mov	r2,zero
  2288a4:	003fe506 	br	22883c <_gp+0xfffedcb4>
  2288a8:	98c00117 	ldw	r3,4(r19)
  2288ac:	9c4b883a 	add	r5,r19,r17
  2288b0:	11000054 	ori	r4,r2,1
  2288b4:	18c0004c 	andi	r3,r3,1
  2288b8:	1c62b03a 	or	r17,r3,r17
  2288bc:	9c400115 	stw	r17,4(r19)
  2288c0:	29000115 	stw	r4,4(r5)
  2288c4:	2885883a 	add	r2,r5,r2
  2288c8:	10c00117 	ldw	r3,4(r2)
  2288cc:	29400204 	addi	r5,r5,8
  2288d0:	a009883a 	mov	r4,r20
  2288d4:	18c00054 	ori	r3,r3,1
  2288d8:	10c00115 	stw	r3,4(r2)
  2288dc:	02213180 	call	221318 <_free_r>
  2288e0:	003fd306 	br	228830 <_gp+0xfffedca8>
  2288e4:	017fff04 	movi	r5,-4
  2288e8:	414a703a 	and	r5,r8,r5
  2288ec:	89800404 	addi	r6,r17,16
  2288f0:	8151883a 	add	r8,r16,r5
  2288f4:	4180590e 	bge	r8,r6,228a5c <_realloc_r+0x390>
  2288f8:	1080004c 	andi	r2,r2,1
  2288fc:	103f9e1e 	bne	r2,zero,228778 <_gp+0xfffedbf0>
  228900:	adbffe17 	ldw	r22,-8(r21)
  228904:	00bfff04 	movi	r2,-4
  228908:	9dadc83a 	sub	r22,r19,r22
  22890c:	b1800117 	ldw	r6,4(r22)
  228910:	3084703a 	and	r2,r6,r2
  228914:	20002026 	beq	r4,zero,228998 <_realloc_r+0x2cc>
  228918:	80af883a 	add	r23,r16,r2
  22891c:	b96f883a 	add	r23,r23,r5
  228920:	21c05f26 	beq	r4,r7,228aa0 <_realloc_r+0x3d4>
  228924:	b8c01c16 	blt	r23,r3,228998 <_realloc_r+0x2cc>
  228928:	20800317 	ldw	r2,12(r4)
  22892c:	20c00217 	ldw	r3,8(r4)
  228930:	81bfff04 	addi	r6,r16,-4
  228934:	01000904 	movi	r4,36
  228938:	18800315 	stw	r2,12(r3)
  22893c:	10c00215 	stw	r3,8(r2)
  228940:	b0c00217 	ldw	r3,8(r22)
  228944:	b0800317 	ldw	r2,12(r22)
  228948:	b4800204 	addi	r18,r22,8
  22894c:	18800315 	stw	r2,12(r3)
  228950:	10c00215 	stw	r3,8(r2)
  228954:	21801b36 	bltu	r4,r6,2289c4 <_realloc_r+0x2f8>
  228958:	008004c4 	movi	r2,19
  22895c:	1180352e 	bgeu	r2,r6,228a34 <_realloc_r+0x368>
  228960:	a8800017 	ldw	r2,0(r21)
  228964:	b0800215 	stw	r2,8(r22)
  228968:	a8800117 	ldw	r2,4(r21)
  22896c:	b0800315 	stw	r2,12(r22)
  228970:	008006c4 	movi	r2,27
  228974:	11807f36 	bltu	r2,r6,228b74 <_realloc_r+0x4a8>
  228978:	b0800404 	addi	r2,r22,16
  22897c:	ad400204 	addi	r21,r21,8
  228980:	00002d06 	br	228a38 <_realloc_r+0x36c>
  228984:	adbffe17 	ldw	r22,-8(r21)
  228988:	00bfff04 	movi	r2,-4
  22898c:	9dadc83a 	sub	r22,r19,r22
  228990:	b1000117 	ldw	r4,4(r22)
  228994:	2084703a 	and	r2,r4,r2
  228998:	b03f7726 	beq	r22,zero,228778 <_gp+0xfffedbf0>
  22899c:	80af883a 	add	r23,r16,r2
  2289a0:	b8ff7516 	blt	r23,r3,228778 <_gp+0xfffedbf0>
  2289a4:	b0800317 	ldw	r2,12(r22)
  2289a8:	b0c00217 	ldw	r3,8(r22)
  2289ac:	81bfff04 	addi	r6,r16,-4
  2289b0:	01000904 	movi	r4,36
  2289b4:	18800315 	stw	r2,12(r3)
  2289b8:	10c00215 	stw	r3,8(r2)
  2289bc:	b4800204 	addi	r18,r22,8
  2289c0:	21bfe52e 	bgeu	r4,r6,228958 <_gp+0xfffeddd0>
  2289c4:	a80b883a 	mov	r5,r21
  2289c8:	9009883a 	mov	r4,r18
  2289cc:	02275140 	call	227514 <memmove>
  2289d0:	b821883a 	mov	r16,r23
  2289d4:	b027883a 	mov	r19,r22
  2289d8:	003f8a06 	br	228804 <_gp+0xfffedc7c>
  2289dc:	300b883a 	mov	r5,r6
  2289e0:	dfc00917 	ldw	ra,36(sp)
  2289e4:	df000817 	ldw	fp,32(sp)
  2289e8:	ddc00717 	ldw	r23,28(sp)
  2289ec:	dd800617 	ldw	r22,24(sp)
  2289f0:	dd400517 	ldw	r21,20(sp)
  2289f4:	dd000417 	ldw	r20,16(sp)
  2289f8:	dcc00317 	ldw	r19,12(sp)
  2289fc:	dc800217 	ldw	r18,8(sp)
  228a00:	dc400117 	ldw	r17,4(sp)
  228a04:	dc000017 	ldw	r16,0(sp)
  228a08:	dec00a04 	addi	sp,sp,40
  228a0c:	0221eb41 	jmpi	221eb4 <_malloc_r>
  228a10:	a8c00017 	ldw	r3,0(r21)
  228a14:	90c00015 	stw	r3,0(r18)
  228a18:	a8c00117 	ldw	r3,4(r21)
  228a1c:	90c00115 	stw	r3,4(r18)
  228a20:	00c006c4 	movi	r3,27
  228a24:	19804536 	bltu	r3,r6,228b3c <_realloc_r+0x470>
  228a28:	90800204 	addi	r2,r18,8
  228a2c:	a8c00204 	addi	r3,r21,8
  228a30:	003f6306 	br	2287c0 <_gp+0xfffedc38>
  228a34:	9005883a 	mov	r2,r18
  228a38:	a8c00017 	ldw	r3,0(r21)
  228a3c:	b821883a 	mov	r16,r23
  228a40:	b027883a 	mov	r19,r22
  228a44:	10c00015 	stw	r3,0(r2)
  228a48:	a8c00117 	ldw	r3,4(r21)
  228a4c:	10c00115 	stw	r3,4(r2)
  228a50:	a8c00217 	ldw	r3,8(r21)
  228a54:	10c00215 	stw	r3,8(r2)
  228a58:	003f6a06 	br	228804 <_gp+0xfffedc7c>
  228a5c:	9c67883a 	add	r19,r19,r17
  228a60:	4445c83a 	sub	r2,r8,r17
  228a64:	e4c00215 	stw	r19,8(fp)
  228a68:	10800054 	ori	r2,r2,1
  228a6c:	98800115 	stw	r2,4(r19)
  228a70:	a8bfff17 	ldw	r2,-4(r21)
  228a74:	a009883a 	mov	r4,r20
  228a78:	1080004c 	andi	r2,r2,1
  228a7c:	1462b03a 	or	r17,r2,r17
  228a80:	ac7fff15 	stw	r17,-4(r21)
  228a84:	022e3a00 	call	22e3a0 <__malloc_unlock>
  228a88:	a805883a 	mov	r2,r21
  228a8c:	003f6b06 	br	22883c <_gp+0xfffedcb4>
  228a90:	a80b883a 	mov	r5,r21
  228a94:	9009883a 	mov	r4,r18
  228a98:	02275140 	call	227514 <memmove>
  228a9c:	003f4e06 	br	2287d8 <_gp+0xfffedc50>
  228aa0:	89000404 	addi	r4,r17,16
  228aa4:	b93fbc16 	blt	r23,r4,228998 <_gp+0xfffede10>
  228aa8:	b0800317 	ldw	r2,12(r22)
  228aac:	b0c00217 	ldw	r3,8(r22)
  228ab0:	81bfff04 	addi	r6,r16,-4
  228ab4:	01000904 	movi	r4,36
  228ab8:	18800315 	stw	r2,12(r3)
  228abc:	10c00215 	stw	r3,8(r2)
  228ac0:	b4800204 	addi	r18,r22,8
  228ac4:	21804336 	bltu	r4,r6,228bd4 <_realloc_r+0x508>
  228ac8:	008004c4 	movi	r2,19
  228acc:	11803f2e 	bgeu	r2,r6,228bcc <_realloc_r+0x500>
  228ad0:	a8800017 	ldw	r2,0(r21)
  228ad4:	b0800215 	stw	r2,8(r22)
  228ad8:	a8800117 	ldw	r2,4(r21)
  228adc:	b0800315 	stw	r2,12(r22)
  228ae0:	008006c4 	movi	r2,27
  228ae4:	11803f36 	bltu	r2,r6,228be4 <_realloc_r+0x518>
  228ae8:	b0800404 	addi	r2,r22,16
  228aec:	ad400204 	addi	r21,r21,8
  228af0:	a8c00017 	ldw	r3,0(r21)
  228af4:	10c00015 	stw	r3,0(r2)
  228af8:	a8c00117 	ldw	r3,4(r21)
  228afc:	10c00115 	stw	r3,4(r2)
  228b00:	a8c00217 	ldw	r3,8(r21)
  228b04:	10c00215 	stw	r3,8(r2)
  228b08:	b447883a 	add	r3,r22,r17
  228b0c:	bc45c83a 	sub	r2,r23,r17
  228b10:	e0c00215 	stw	r3,8(fp)
  228b14:	10800054 	ori	r2,r2,1
  228b18:	18800115 	stw	r2,4(r3)
  228b1c:	b0800117 	ldw	r2,4(r22)
  228b20:	a009883a 	mov	r4,r20
  228b24:	1080004c 	andi	r2,r2,1
  228b28:	1462b03a 	or	r17,r2,r17
  228b2c:	b4400115 	stw	r17,4(r22)
  228b30:	022e3a00 	call	22e3a0 <__malloc_unlock>
  228b34:	9005883a 	mov	r2,r18
  228b38:	003f4006 	br	22883c <_gp+0xfffedcb4>
  228b3c:	a8c00217 	ldw	r3,8(r21)
  228b40:	90c00215 	stw	r3,8(r18)
  228b44:	a8c00317 	ldw	r3,12(r21)
  228b48:	90c00315 	stw	r3,12(r18)
  228b4c:	30801126 	beq	r6,r2,228b94 <_realloc_r+0x4c8>
  228b50:	90800404 	addi	r2,r18,16
  228b54:	a8c00404 	addi	r3,r21,16
  228b58:	003f1906 	br	2287c0 <_gp+0xfffedc38>
  228b5c:	90ffff17 	ldw	r3,-4(r18)
  228b60:	00bfff04 	movi	r2,-4
  228b64:	a825883a 	mov	r18,r21
  228b68:	1884703a 	and	r2,r3,r2
  228b6c:	80a1883a 	add	r16,r16,r2
  228b70:	003f2406 	br	228804 <_gp+0xfffedc7c>
  228b74:	a8800217 	ldw	r2,8(r21)
  228b78:	b0800415 	stw	r2,16(r22)
  228b7c:	a8800317 	ldw	r2,12(r21)
  228b80:	b0800515 	stw	r2,20(r22)
  228b84:	31000a26 	beq	r6,r4,228bb0 <_realloc_r+0x4e4>
  228b88:	b0800604 	addi	r2,r22,24
  228b8c:	ad400404 	addi	r21,r21,16
  228b90:	003fa906 	br	228a38 <_gp+0xfffedeb0>
  228b94:	a9000417 	ldw	r4,16(r21)
  228b98:	90800604 	addi	r2,r18,24
  228b9c:	a8c00604 	addi	r3,r21,24
  228ba0:	91000415 	stw	r4,16(r18)
  228ba4:	a9000517 	ldw	r4,20(r21)
  228ba8:	91000515 	stw	r4,20(r18)
  228bac:	003f0406 	br	2287c0 <_gp+0xfffedc38>
  228bb0:	a8c00417 	ldw	r3,16(r21)
  228bb4:	ad400604 	addi	r21,r21,24
  228bb8:	b0800804 	addi	r2,r22,32
  228bbc:	b0c00615 	stw	r3,24(r22)
  228bc0:	a8ffff17 	ldw	r3,-4(r21)
  228bc4:	b0c00715 	stw	r3,28(r22)
  228bc8:	003f9b06 	br	228a38 <_gp+0xfffedeb0>
  228bcc:	9005883a 	mov	r2,r18
  228bd0:	003fc706 	br	228af0 <_gp+0xfffedf68>
  228bd4:	a80b883a 	mov	r5,r21
  228bd8:	9009883a 	mov	r4,r18
  228bdc:	02275140 	call	227514 <memmove>
  228be0:	003fc906 	br	228b08 <_gp+0xfffedf80>
  228be4:	a8800217 	ldw	r2,8(r21)
  228be8:	b0800415 	stw	r2,16(r22)
  228bec:	a8800317 	ldw	r2,12(r21)
  228bf0:	b0800515 	stw	r2,20(r22)
  228bf4:	31000726 	beq	r6,r4,228c14 <_realloc_r+0x548>
  228bf8:	b0800604 	addi	r2,r22,24
  228bfc:	ad400404 	addi	r21,r21,16
  228c00:	003fbb06 	br	228af0 <_gp+0xfffedf68>
  228c04:	a009883a 	mov	r4,r20
  228c08:	022e3a00 	call	22e3a0 <__malloc_unlock>
  228c0c:	0005883a 	mov	r2,zero
  228c10:	003f0a06 	br	22883c <_gp+0xfffedcb4>
  228c14:	a8c00417 	ldw	r3,16(r21)
  228c18:	ad400604 	addi	r21,r21,24
  228c1c:	b0800804 	addi	r2,r22,32
  228c20:	b0c00615 	stw	r3,24(r22)
  228c24:	a8ffff17 	ldw	r3,-4(r21)
  228c28:	b0c00715 	stw	r3,28(r22)
  228c2c:	003fb006 	br	228af0 <_gp+0xfffedf68>

00228c30 <__fpclassifyd>:
  228c30:	00a00034 	movhi	r2,32768
  228c34:	10bfffc4 	addi	r2,r2,-1
  228c38:	2884703a 	and	r2,r5,r2
  228c3c:	10000726 	beq	r2,zero,228c5c <__fpclassifyd+0x2c>
  228c40:	00fffc34 	movhi	r3,65520
  228c44:	019ff834 	movhi	r6,32736
  228c48:	28c7883a 	add	r3,r5,r3
  228c4c:	31bfffc4 	addi	r6,r6,-1
  228c50:	30c00536 	bltu	r6,r3,228c68 <__fpclassifyd+0x38>
  228c54:	00800104 	movi	r2,4
  228c58:	f800283a 	ret
  228c5c:	2000021e 	bne	r4,zero,228c68 <__fpclassifyd+0x38>
  228c60:	00800084 	movi	r2,2
  228c64:	f800283a 	ret
  228c68:	00dffc34 	movhi	r3,32752
  228c6c:	019ff834 	movhi	r6,32736
  228c70:	28cb883a 	add	r5,r5,r3
  228c74:	31bfffc4 	addi	r6,r6,-1
  228c78:	317ff62e 	bgeu	r6,r5,228c54 <_gp+0xfffee0cc>
  228c7c:	01400434 	movhi	r5,16
  228c80:	297fffc4 	addi	r5,r5,-1
  228c84:	28800236 	bltu	r5,r2,228c90 <__fpclassifyd+0x60>
  228c88:	008000c4 	movi	r2,3
  228c8c:	f800283a 	ret
  228c90:	10c00226 	beq	r2,r3,228c9c <__fpclassifyd+0x6c>
  228c94:	0005883a 	mov	r2,zero
  228c98:	f800283a 	ret
  228c9c:	2005003a 	cmpeq	r2,r4,zero
  228ca0:	f800283a 	ret

00228ca4 <strcmp>:
  228ca4:	2144b03a 	or	r2,r4,r5
  228ca8:	108000cc 	andi	r2,r2,3
  228cac:	1000171e 	bne	r2,zero,228d0c <strcmp+0x68>
  228cb0:	20800017 	ldw	r2,0(r4)
  228cb4:	28c00017 	ldw	r3,0(r5)
  228cb8:	10c0141e 	bne	r2,r3,228d0c <strcmp+0x68>
  228cbc:	027fbff4 	movhi	r9,65279
  228cc0:	4a7fbfc4 	addi	r9,r9,-257
  228cc4:	0086303a 	nor	r3,zero,r2
  228cc8:	02202074 	movhi	r8,32897
  228ccc:	1245883a 	add	r2,r2,r9
  228cd0:	42202004 	addi	r8,r8,-32640
  228cd4:	10c4703a 	and	r2,r2,r3
  228cd8:	1204703a 	and	r2,r2,r8
  228cdc:	10000226 	beq	r2,zero,228ce8 <strcmp+0x44>
  228ce0:	00002306 	br	228d70 <strcmp+0xcc>
  228ce4:	1000221e 	bne	r2,zero,228d70 <strcmp+0xcc>
  228ce8:	21000104 	addi	r4,r4,4
  228cec:	20c00017 	ldw	r3,0(r4)
  228cf0:	29400104 	addi	r5,r5,4
  228cf4:	29800017 	ldw	r6,0(r5)
  228cf8:	1a4f883a 	add	r7,r3,r9
  228cfc:	00c4303a 	nor	r2,zero,r3
  228d00:	3884703a 	and	r2,r7,r2
  228d04:	1204703a 	and	r2,r2,r8
  228d08:	19bff626 	beq	r3,r6,228ce4 <_gp+0xfffee15c>
  228d0c:	20800003 	ldbu	r2,0(r4)
  228d10:	10c03fcc 	andi	r3,r2,255
  228d14:	18c0201c 	xori	r3,r3,128
  228d18:	18ffe004 	addi	r3,r3,-128
  228d1c:	18000c26 	beq	r3,zero,228d50 <strcmp+0xac>
  228d20:	29800007 	ldb	r6,0(r5)
  228d24:	19800326 	beq	r3,r6,228d34 <strcmp+0x90>
  228d28:	00001306 	br	228d78 <strcmp+0xd4>
  228d2c:	29800007 	ldb	r6,0(r5)
  228d30:	11800b1e 	bne	r2,r6,228d60 <strcmp+0xbc>
  228d34:	21000044 	addi	r4,r4,1
  228d38:	20c00003 	ldbu	r3,0(r4)
  228d3c:	29400044 	addi	r5,r5,1
  228d40:	18803fcc 	andi	r2,r3,255
  228d44:	1080201c 	xori	r2,r2,128
  228d48:	10bfe004 	addi	r2,r2,-128
  228d4c:	103ff71e 	bne	r2,zero,228d2c <_gp+0xfffee1a4>
  228d50:	0007883a 	mov	r3,zero
  228d54:	28800003 	ldbu	r2,0(r5)
  228d58:	1885c83a 	sub	r2,r3,r2
  228d5c:	f800283a 	ret
  228d60:	28800003 	ldbu	r2,0(r5)
  228d64:	18c03fcc 	andi	r3,r3,255
  228d68:	1885c83a 	sub	r2,r3,r2
  228d6c:	f800283a 	ret
  228d70:	0005883a 	mov	r2,zero
  228d74:	f800283a 	ret
  228d78:	10c03fcc 	andi	r3,r2,255
  228d7c:	003ff506 	br	228d54 <_gp+0xfffee1cc>

00228d80 <__sprint_r.part.0>:
  228d80:	28801917 	ldw	r2,100(r5)
  228d84:	defff604 	addi	sp,sp,-40
  228d88:	dd400515 	stw	r21,20(sp)
  228d8c:	dfc00915 	stw	ra,36(sp)
  228d90:	df000815 	stw	fp,32(sp)
  228d94:	ddc00715 	stw	r23,28(sp)
  228d98:	dd800615 	stw	r22,24(sp)
  228d9c:	dd000415 	stw	r20,16(sp)
  228da0:	dcc00315 	stw	r19,12(sp)
  228da4:	dc800215 	stw	r18,8(sp)
  228da8:	dc400115 	stw	r17,4(sp)
  228dac:	dc000015 	stw	r16,0(sp)
  228db0:	1088000c 	andi	r2,r2,8192
  228db4:	302b883a 	mov	r21,r6
  228db8:	10002e26 	beq	r2,zero,228e74 <__sprint_r.part.0+0xf4>
  228dbc:	30800217 	ldw	r2,8(r6)
  228dc0:	35800017 	ldw	r22,0(r6)
  228dc4:	10002926 	beq	r2,zero,228e6c <__sprint_r.part.0+0xec>
  228dc8:	2827883a 	mov	r19,r5
  228dcc:	2029883a 	mov	r20,r4
  228dd0:	b5c00104 	addi	r23,r22,4
  228dd4:	04bfffc4 	movi	r18,-1
  228dd8:	bc400017 	ldw	r17,0(r23)
  228ddc:	b4000017 	ldw	r16,0(r22)
  228de0:	0039883a 	mov	fp,zero
  228de4:	8822d0ba 	srli	r17,r17,2
  228de8:	8800031e 	bne	r17,zero,228df8 <__sprint_r.part.0+0x78>
  228dec:	00001806 	br	228e50 <__sprint_r.part.0+0xd0>
  228df0:	84000104 	addi	r16,r16,4
  228df4:	8f001526 	beq	r17,fp,228e4c <__sprint_r.part.0+0xcc>
  228df8:	81400017 	ldw	r5,0(r16)
  228dfc:	980d883a 	mov	r6,r19
  228e00:	a009883a 	mov	r4,r20
  228e04:	022a5f00 	call	22a5f0 <_fputwc_r>
  228e08:	e7000044 	addi	fp,fp,1
  228e0c:	14bff81e 	bne	r2,r18,228df0 <_gp+0xfffee268>
  228e10:	9005883a 	mov	r2,r18
  228e14:	a8000215 	stw	zero,8(r21)
  228e18:	a8000115 	stw	zero,4(r21)
  228e1c:	dfc00917 	ldw	ra,36(sp)
  228e20:	df000817 	ldw	fp,32(sp)
  228e24:	ddc00717 	ldw	r23,28(sp)
  228e28:	dd800617 	ldw	r22,24(sp)
  228e2c:	dd400517 	ldw	r21,20(sp)
  228e30:	dd000417 	ldw	r20,16(sp)
  228e34:	dcc00317 	ldw	r19,12(sp)
  228e38:	dc800217 	ldw	r18,8(sp)
  228e3c:	dc400117 	ldw	r17,4(sp)
  228e40:	dc000017 	ldw	r16,0(sp)
  228e44:	dec00a04 	addi	sp,sp,40
  228e48:	f800283a 	ret
  228e4c:	a8800217 	ldw	r2,8(r21)
  228e50:	8c63883a 	add	r17,r17,r17
  228e54:	8c63883a 	add	r17,r17,r17
  228e58:	1445c83a 	sub	r2,r2,r17
  228e5c:	a8800215 	stw	r2,8(r21)
  228e60:	b5800204 	addi	r22,r22,8
  228e64:	bdc00204 	addi	r23,r23,8
  228e68:	103fdb1e 	bne	r2,zero,228dd8 <_gp+0xfffee250>
  228e6c:	0005883a 	mov	r2,zero
  228e70:	003fe806 	br	228e14 <_gp+0xfffee28c>
  228e74:	0226c9c0 	call	226c9c <__sfvwrite_r>
  228e78:	003fe606 	br	228e14 <_gp+0xfffee28c>

00228e7c <__sprint_r>:
  228e7c:	30c00217 	ldw	r3,8(r6)
  228e80:	18000126 	beq	r3,zero,228e88 <__sprint_r+0xc>
  228e84:	0228d801 	jmpi	228d80 <__sprint_r.part.0>
  228e88:	30000115 	stw	zero,4(r6)
  228e8c:	0005883a 	mov	r2,zero
  228e90:	f800283a 	ret

00228e94 <___vfiprintf_internal_r>:
  228e94:	deffc904 	addi	sp,sp,-220
  228e98:	df003515 	stw	fp,212(sp)
  228e9c:	dd003115 	stw	r20,196(sp)
  228ea0:	dfc03615 	stw	ra,216(sp)
  228ea4:	ddc03415 	stw	r23,208(sp)
  228ea8:	dd803315 	stw	r22,204(sp)
  228eac:	dd403215 	stw	r21,200(sp)
  228eb0:	dcc03015 	stw	r19,192(sp)
  228eb4:	dc802f15 	stw	r18,188(sp)
  228eb8:	dc402e15 	stw	r17,184(sp)
  228ebc:	dc002d15 	stw	r16,180(sp)
  228ec0:	d9002015 	stw	r4,128(sp)
  228ec4:	d9c02215 	stw	r7,136(sp)
  228ec8:	2829883a 	mov	r20,r5
  228ecc:	3039883a 	mov	fp,r6
  228ed0:	20000226 	beq	r4,zero,228edc <___vfiprintf_internal_r+0x48>
  228ed4:	20800e17 	ldw	r2,56(r4)
  228ed8:	1000cf26 	beq	r2,zero,229218 <___vfiprintf_internal_r+0x384>
  228edc:	a080030b 	ldhu	r2,12(r20)
  228ee0:	10c8000c 	andi	r3,r2,8192
  228ee4:	1800061e 	bne	r3,zero,228f00 <___vfiprintf_internal_r+0x6c>
  228ee8:	a1001917 	ldw	r4,100(r20)
  228eec:	00f7ffc4 	movi	r3,-8193
  228ef0:	10880014 	ori	r2,r2,8192
  228ef4:	20c6703a 	and	r3,r4,r3
  228ef8:	a080030d 	sth	r2,12(r20)
  228efc:	a0c01915 	stw	r3,100(r20)
  228f00:	10c0020c 	andi	r3,r2,8
  228f04:	1800a926 	beq	r3,zero,2291ac <___vfiprintf_internal_r+0x318>
  228f08:	a0c00417 	ldw	r3,16(r20)
  228f0c:	1800a726 	beq	r3,zero,2291ac <___vfiprintf_internal_r+0x318>
  228f10:	1080068c 	andi	r2,r2,26
  228f14:	00c00284 	movi	r3,10
  228f18:	10c0ac26 	beq	r2,r3,2291cc <___vfiprintf_internal_r+0x338>
  228f1c:	da801a04 	addi	r10,sp,104
  228f20:	da801e15 	stw	r10,120(sp)
  228f24:	d8801e17 	ldw	r2,120(sp)
  228f28:	da8019c4 	addi	r10,sp,103
  228f2c:	058008f4 	movhi	r22,35
  228f30:	05c008f4 	movhi	r23,35
  228f34:	da801f15 	stw	r10,124(sp)
  228f38:	1295c83a 	sub	r10,r2,r10
  228f3c:	b583b504 	addi	r22,r22,3796
  228f40:	bdc3b104 	addi	r23,r23,3780
  228f44:	dec01a15 	stw	sp,104(sp)
  228f48:	d8001c15 	stw	zero,112(sp)
  228f4c:	d8001b15 	stw	zero,108(sp)
  228f50:	d8002615 	stw	zero,152(sp)
  228f54:	d8002315 	stw	zero,140(sp)
  228f58:	da802715 	stw	r10,156(sp)
  228f5c:	d811883a 	mov	r8,sp
  228f60:	dd002115 	stw	r20,132(sp)
  228f64:	e021883a 	mov	r16,fp
  228f68:	80800007 	ldb	r2,0(r16)
  228f6c:	1003ea26 	beq	r2,zero,229f18 <___vfiprintf_internal_r+0x1084>
  228f70:	00c00944 	movi	r3,37
  228f74:	8025883a 	mov	r18,r16
  228f78:	10c0021e 	bne	r2,r3,228f84 <___vfiprintf_internal_r+0xf0>
  228f7c:	00001606 	br	228fd8 <___vfiprintf_internal_r+0x144>
  228f80:	10c00326 	beq	r2,r3,228f90 <___vfiprintf_internal_r+0xfc>
  228f84:	94800044 	addi	r18,r18,1
  228f88:	90800007 	ldb	r2,0(r18)
  228f8c:	103ffc1e 	bne	r2,zero,228f80 <_gp+0xfffee3f8>
  228f90:	9423c83a 	sub	r17,r18,r16
  228f94:	88001026 	beq	r17,zero,228fd8 <___vfiprintf_internal_r+0x144>
  228f98:	d8c01c17 	ldw	r3,112(sp)
  228f9c:	d8801b17 	ldw	r2,108(sp)
  228fa0:	44000015 	stw	r16,0(r8)
  228fa4:	88c7883a 	add	r3,r17,r3
  228fa8:	10800044 	addi	r2,r2,1
  228fac:	44400115 	stw	r17,4(r8)
  228fb0:	d8c01c15 	stw	r3,112(sp)
  228fb4:	d8801b15 	stw	r2,108(sp)
  228fb8:	010001c4 	movi	r4,7
  228fbc:	2080760e 	bge	r4,r2,229198 <___vfiprintf_internal_r+0x304>
  228fc0:	1803821e 	bne	r3,zero,229dcc <___vfiprintf_internal_r+0xf38>
  228fc4:	da802317 	ldw	r10,140(sp)
  228fc8:	d8001b15 	stw	zero,108(sp)
  228fcc:	d811883a 	mov	r8,sp
  228fd0:	5455883a 	add	r10,r10,r17
  228fd4:	da802315 	stw	r10,140(sp)
  228fd8:	90800007 	ldb	r2,0(r18)
  228fdc:	10044626 	beq	r2,zero,22a0f8 <___vfiprintf_internal_r+0x1264>
  228fe0:	90c00047 	ldb	r3,1(r18)
  228fe4:	94000044 	addi	r16,r18,1
  228fe8:	d8001d85 	stb	zero,118(sp)
  228fec:	0009883a 	mov	r4,zero
  228ff0:	000f883a 	mov	r7,zero
  228ff4:	027fffc4 	movi	r9,-1
  228ff8:	0023883a 	mov	r17,zero
  228ffc:	0029883a 	mov	r20,zero
  229000:	01401604 	movi	r5,88
  229004:	01800244 	movi	r6,9
  229008:	03400a84 	movi	r13,42
  22900c:	03001b04 	movi	r12,108
  229010:	84000044 	addi	r16,r16,1
  229014:	18bff804 	addi	r2,r3,-32
  229018:	28827336 	bltu	r5,r2,2299e8 <___vfiprintf_internal_r+0xb54>
  22901c:	100490ba 	slli	r2,r2,2
  229020:	028008f4 	movhi	r10,35
  229024:	52a40d04 	addi	r10,r10,-28620
  229028:	1285883a 	add	r2,r2,r10
  22902c:	10800017 	ldw	r2,0(r2)
  229030:	1000683a 	jmp	r2
  229034:	0022971c 	xori	zero,zero,35420
  229038:	002299e8 	cmpgeui	zero,zero,35431
  22903c:	002299e8 	cmpgeui	zero,zero,35431
  229040:	0022973c 	xorhi	zero,zero,35420
  229044:	002299e8 	cmpgeui	zero,zero,35431
  229048:	002299e8 	cmpgeui	zero,zero,35431
  22904c:	002299e8 	cmpgeui	zero,zero,35431
  229050:	002299e8 	cmpgeui	zero,zero,35431
  229054:	002299e8 	cmpgeui	zero,zero,35431
  229058:	002299e8 	cmpgeui	zero,zero,35431
  22905c:	00229924 	muli	zero,zero,-30108
  229060:	00229940 	call	22994 <__alt_mem_OnChip_Memory-0x1fd66c>
  229064:	002299e8 	cmpgeui	zero,zero,35431
  229068:	00229228 	cmpgeui	zero,zero,35400
  22906c:	00229950 	cmplti	zero,zero,-30107
  229070:	002299e8 	cmpgeui	zero,zero,35431
  229074:	00229748 	cmpgei	zero,zero,-30115
  229078:	00229754 	movui	zero,35421
  22907c:	00229754 	movui	zero,35421
  229080:	00229754 	movui	zero,35421
  229084:	00229754 	movui	zero,35421
  229088:	00229754 	movui	zero,35421
  22908c:	00229754 	movui	zero,35421
  229090:	00229754 	movui	zero,35421
  229094:	00229754 	movui	zero,35421
  229098:	00229754 	movui	zero,35421
  22909c:	002299e8 	cmpgeui	zero,zero,35431
  2290a0:	002299e8 	cmpgeui	zero,zero,35431
  2290a4:	002299e8 	cmpgeui	zero,zero,35431
  2290a8:	002299e8 	cmpgeui	zero,zero,35431
  2290ac:	002299e8 	cmpgeui	zero,zero,35431
  2290b0:	002299e8 	cmpgeui	zero,zero,35431
  2290b4:	002299e8 	cmpgeui	zero,zero,35431
  2290b8:	002299e8 	cmpgeui	zero,zero,35431
  2290bc:	002299e8 	cmpgeui	zero,zero,35431
  2290c0:	002299e8 	cmpgeui	zero,zero,35431
  2290c4:	00229780 	call	22978 <__alt_mem_OnChip_Memory-0x1fd688>
  2290c8:	002299e8 	cmpgeui	zero,zero,35431
  2290cc:	002299e8 	cmpgeui	zero,zero,35431
  2290d0:	002299e8 	cmpgeui	zero,zero,35431
  2290d4:	002299e8 	cmpgeui	zero,zero,35431
  2290d8:	002299e8 	cmpgeui	zero,zero,35431
  2290dc:	002299e8 	cmpgeui	zero,zero,35431
  2290e0:	002299e8 	cmpgeui	zero,zero,35431
  2290e4:	002299e8 	cmpgeui	zero,zero,35431
  2290e8:	002299e8 	cmpgeui	zero,zero,35431
  2290ec:	002299e8 	cmpgeui	zero,zero,35431
  2290f0:	002297b8 	rdprs	zero,zero,-30114
  2290f4:	002299e8 	cmpgeui	zero,zero,35431
  2290f8:	002299e8 	cmpgeui	zero,zero,35431
  2290fc:	002299e8 	cmpgeui	zero,zero,35431
  229100:	002299e8 	cmpgeui	zero,zero,35431
  229104:	002299e8 	cmpgeui	zero,zero,35431
  229108:	00229810 	cmplti	zero,zero,-30112
  22910c:	002299e8 	cmpgeui	zero,zero,35431
  229110:	002299e8 	cmpgeui	zero,zero,35431
  229114:	00229880 	call	22988 <__alt_mem_OnChip_Memory-0x1fd678>
  229118:	002299e8 	cmpgeui	zero,zero,35431
  22911c:	002299e8 	cmpgeui	zero,zero,35431
  229120:	002299e8 	cmpgeui	zero,zero,35431
  229124:	002299e8 	cmpgeui	zero,zero,35431
  229128:	002299e8 	cmpgeui	zero,zero,35431
  22912c:	002299e8 	cmpgeui	zero,zero,35431
  229130:	002299e8 	cmpgeui	zero,zero,35431
  229134:	002299e8 	cmpgeui	zero,zero,35431
  229138:	002299e8 	cmpgeui	zero,zero,35431
  22913c:	002299e8 	cmpgeui	zero,zero,35431
  229140:	0022962c 	andhi	zero,zero,35416
  229144:	00229658 	cmpnei	zero,zero,-30119
  229148:	002299e8 	cmpgeui	zero,zero,35431
  22914c:	002299e8 	cmpgeui	zero,zero,35431
  229150:	002299e8 	cmpgeui	zero,zero,35431
  229154:	00229990 	cmplti	zero,zero,-30106
  229158:	00229658 	cmpnei	zero,zero,-30119
  22915c:	002299e8 	cmpgeui	zero,zero,35431
  229160:	002299e8 	cmpgeui	zero,zero,35431
  229164:	002294ec 	andhi	zero,zero,35411
  229168:	002299e8 	cmpgeui	zero,zero,35431
  22916c:	002294fc 	xorhi	zero,zero,35411
  229170:	00229538 	rdprs	zero,zero,-30124
  229174:	00229234 	movhi	zero,35400
  229178:	002294e0 	cmpeqi	zero,zero,-30125
  22917c:	002299e8 	cmpgeui	zero,zero,35431
  229180:	002298bc 	xorhi	zero,zero,35426
  229184:	002299e8 	cmpgeui	zero,zero,35431
  229188:	00229914 	movui	zero,35428
  22918c:	002299e8 	cmpgeui	zero,zero,35431
  229190:	002299e8 	cmpgeui	zero,zero,35431
  229194:	002295d8 	cmpnei	zero,zero,-30121
  229198:	42000204 	addi	r8,r8,8
  22919c:	da802317 	ldw	r10,140(sp)
  2291a0:	5455883a 	add	r10,r10,r17
  2291a4:	da802315 	stw	r10,140(sp)
  2291a8:	003f8b06 	br	228fd8 <_gp+0xfffee450>
  2291ac:	d9002017 	ldw	r4,128(sp)
  2291b0:	a00b883a 	mov	r5,r20
  2291b4:	02251c00 	call	2251c0 <__swsetup_r>
  2291b8:	1003b11e 	bne	r2,zero,22a080 <___vfiprintf_internal_r+0x11ec>
  2291bc:	a080030b 	ldhu	r2,12(r20)
  2291c0:	00c00284 	movi	r3,10
  2291c4:	1080068c 	andi	r2,r2,26
  2291c8:	10ff541e 	bne	r2,r3,228f1c <_gp+0xfffee394>
  2291cc:	a080038f 	ldh	r2,14(r20)
  2291d0:	103f5216 	blt	r2,zero,228f1c <_gp+0xfffee394>
  2291d4:	d9c02217 	ldw	r7,136(sp)
  2291d8:	d9002017 	ldw	r4,128(sp)
  2291dc:	e00d883a 	mov	r6,fp
  2291e0:	a00b883a 	mov	r5,r20
  2291e4:	022a30c0 	call	22a30c <__sbprintf>
  2291e8:	dfc03617 	ldw	ra,216(sp)
  2291ec:	df003517 	ldw	fp,212(sp)
  2291f0:	ddc03417 	ldw	r23,208(sp)
  2291f4:	dd803317 	ldw	r22,204(sp)
  2291f8:	dd403217 	ldw	r21,200(sp)
  2291fc:	dd003117 	ldw	r20,196(sp)
  229200:	dcc03017 	ldw	r19,192(sp)
  229204:	dc802f17 	ldw	r18,188(sp)
  229208:	dc402e17 	ldw	r17,184(sp)
  22920c:	dc002d17 	ldw	r16,180(sp)
  229210:	dec03704 	addi	sp,sp,220
  229214:	f800283a 	ret
  229218:	022104c0 	call	22104c <__sinit>
  22921c:	003f2f06 	br	228edc <_gp+0xfffee354>
  229220:	0463c83a 	sub	r17,zero,r17
  229224:	d8802215 	stw	r2,136(sp)
  229228:	a5000114 	ori	r20,r20,4
  22922c:	80c00007 	ldb	r3,0(r16)
  229230:	003f7706 	br	229010 <_gp+0xfffee488>
  229234:	00800c04 	movi	r2,48
  229238:	da802217 	ldw	r10,136(sp)
  22923c:	d8801d05 	stb	r2,116(sp)
  229240:	00801e04 	movi	r2,120
  229244:	d8801d45 	stb	r2,117(sp)
  229248:	d8001d85 	stb	zero,118(sp)
  22924c:	50c00104 	addi	r3,r10,4
  229250:	54800017 	ldw	r18,0(r10)
  229254:	0027883a 	mov	r19,zero
  229258:	a0800094 	ori	r2,r20,2
  22925c:	48030b16 	blt	r9,zero,229e8c <___vfiprintf_internal_r+0xff8>
  229260:	00bfdfc4 	movi	r2,-129
  229264:	a096703a 	and	r11,r20,r2
  229268:	d8c02215 	stw	r3,136(sp)
  22926c:	5d000094 	ori	r20,r11,2
  229270:	90032b1e 	bne	r18,zero,229f20 <___vfiprintf_internal_r+0x108c>
  229274:	008008f4 	movhi	r2,35
  229278:	10835104 	addi	r2,r2,3396
  22927c:	d8802615 	stw	r2,152(sp)
  229280:	0039883a 	mov	fp,zero
  229284:	48017b1e 	bne	r9,zero,229874 <___vfiprintf_internal_r+0x9e0>
  229288:	0013883a 	mov	r9,zero
  22928c:	0027883a 	mov	r19,zero
  229290:	dd401a04 	addi	r21,sp,104
  229294:	4825883a 	mov	r18,r9
  229298:	4cc0010e 	bge	r9,r19,2292a0 <___vfiprintf_internal_r+0x40c>
  22929c:	9825883a 	mov	r18,r19
  2292a0:	e7003fcc 	andi	fp,fp,255
  2292a4:	e700201c 	xori	fp,fp,128
  2292a8:	e73fe004 	addi	fp,fp,-128
  2292ac:	e0000126 	beq	fp,zero,2292b4 <___vfiprintf_internal_r+0x420>
  2292b0:	94800044 	addi	r18,r18,1
  2292b4:	a380008c 	andi	r14,r20,2
  2292b8:	70000126 	beq	r14,zero,2292c0 <___vfiprintf_internal_r+0x42c>
  2292bc:	94800084 	addi	r18,r18,2
  2292c0:	a700210c 	andi	fp,r20,132
  2292c4:	e001df1e 	bne	fp,zero,229a44 <___vfiprintf_internal_r+0xbb0>
  2292c8:	8c87c83a 	sub	r3,r17,r18
  2292cc:	00c1dd0e 	bge	zero,r3,229a44 <___vfiprintf_internal_r+0xbb0>
  2292d0:	01c00404 	movi	r7,16
  2292d4:	d8801c17 	ldw	r2,112(sp)
  2292d8:	38c3ad0e 	bge	r7,r3,22a190 <___vfiprintf_internal_r+0x12fc>
  2292dc:	028008f4 	movhi	r10,35
  2292e0:	5283b504 	addi	r10,r10,3796
  2292e4:	dc002915 	stw	r16,164(sp)
  2292e8:	d9801b17 	ldw	r6,108(sp)
  2292ec:	da802415 	stw	r10,144(sp)
  2292f0:	03c001c4 	movi	r15,7
  2292f4:	da402515 	stw	r9,148(sp)
  2292f8:	db802815 	stw	r14,160(sp)
  2292fc:	1821883a 	mov	r16,r3
  229300:	00000506 	br	229318 <___vfiprintf_internal_r+0x484>
  229304:	31400084 	addi	r5,r6,2
  229308:	42000204 	addi	r8,r8,8
  22930c:	200d883a 	mov	r6,r4
  229310:	843ffc04 	addi	r16,r16,-16
  229314:	3c000d0e 	bge	r7,r16,22934c <___vfiprintf_internal_r+0x4b8>
  229318:	10800404 	addi	r2,r2,16
  22931c:	31000044 	addi	r4,r6,1
  229320:	45800015 	stw	r22,0(r8)
  229324:	41c00115 	stw	r7,4(r8)
  229328:	d8801c15 	stw	r2,112(sp)
  22932c:	d9001b15 	stw	r4,108(sp)
  229330:	793ff40e 	bge	r15,r4,229304 <_gp+0xfffee77c>
  229334:	1001b51e 	bne	r2,zero,229a0c <___vfiprintf_internal_r+0xb78>
  229338:	843ffc04 	addi	r16,r16,-16
  22933c:	000d883a 	mov	r6,zero
  229340:	01400044 	movi	r5,1
  229344:	d811883a 	mov	r8,sp
  229348:	3c3ff316 	blt	r7,r16,229318 <_gp+0xfffee790>
  22934c:	8007883a 	mov	r3,r16
  229350:	da402517 	ldw	r9,148(sp)
  229354:	db802817 	ldw	r14,160(sp)
  229358:	dc002917 	ldw	r16,164(sp)
  22935c:	da802417 	ldw	r10,144(sp)
  229360:	1885883a 	add	r2,r3,r2
  229364:	40c00115 	stw	r3,4(r8)
  229368:	42800015 	stw	r10,0(r8)
  22936c:	d8801c15 	stw	r2,112(sp)
  229370:	d9401b15 	stw	r5,108(sp)
  229374:	00c001c4 	movi	r3,7
  229378:	19426016 	blt	r3,r5,229cfc <___vfiprintf_internal_r+0xe68>
  22937c:	d8c01d87 	ldb	r3,118(sp)
  229380:	42000204 	addi	r8,r8,8
  229384:	29000044 	addi	r4,r5,1
  229388:	1801b31e 	bne	r3,zero,229a58 <___vfiprintf_internal_r+0xbc4>
  22938c:	7001c026 	beq	r14,zero,229a90 <___vfiprintf_internal_r+0xbfc>
  229390:	d8c01d04 	addi	r3,sp,116
  229394:	10800084 	addi	r2,r2,2
  229398:	40c00015 	stw	r3,0(r8)
  22939c:	00c00084 	movi	r3,2
  2293a0:	40c00115 	stw	r3,4(r8)
  2293a4:	d8801c15 	stw	r2,112(sp)
  2293a8:	d9001b15 	stw	r4,108(sp)
  2293ac:	00c001c4 	movi	r3,7
  2293b0:	1902650e 	bge	r3,r4,229d48 <___vfiprintf_internal_r+0xeb4>
  2293b4:	10029a1e 	bne	r2,zero,229e20 <___vfiprintf_internal_r+0xf8c>
  2293b8:	00c02004 	movi	r3,128
  2293bc:	01000044 	movi	r4,1
  2293c0:	000b883a 	mov	r5,zero
  2293c4:	d811883a 	mov	r8,sp
  2293c8:	e0c1b31e 	bne	fp,r3,229a98 <___vfiprintf_internal_r+0xc04>
  2293cc:	8cb9c83a 	sub	fp,r17,r18
  2293d0:	0701b10e 	bge	zero,fp,229a98 <___vfiprintf_internal_r+0xc04>
  2293d4:	01c00404 	movi	r7,16
  2293d8:	3f03890e 	bge	r7,fp,22a200 <___vfiprintf_internal_r+0x136c>
  2293dc:	00c008f4 	movhi	r3,35
  2293e0:	18c3b104 	addi	r3,r3,3780
  2293e4:	d8c02415 	stw	r3,144(sp)
  2293e8:	8007883a 	mov	r3,r16
  2293ec:	034001c4 	movi	r13,7
  2293f0:	e021883a 	mov	r16,fp
  2293f4:	da402515 	stw	r9,148(sp)
  2293f8:	1839883a 	mov	fp,r3
  2293fc:	00000506 	br	229414 <___vfiprintf_internal_r+0x580>
  229400:	29800084 	addi	r6,r5,2
  229404:	42000204 	addi	r8,r8,8
  229408:	180b883a 	mov	r5,r3
  22940c:	843ffc04 	addi	r16,r16,-16
  229410:	3c000d0e 	bge	r7,r16,229448 <___vfiprintf_internal_r+0x5b4>
  229414:	10800404 	addi	r2,r2,16
  229418:	28c00044 	addi	r3,r5,1
  22941c:	45c00015 	stw	r23,0(r8)
  229420:	41c00115 	stw	r7,4(r8)
  229424:	d8801c15 	stw	r2,112(sp)
  229428:	d8c01b15 	stw	r3,108(sp)
  22942c:	68fff40e 	bge	r13,r3,229400 <_gp+0xfffee878>
  229430:	1002241e 	bne	r2,zero,229cc4 <___vfiprintf_internal_r+0xe30>
  229434:	843ffc04 	addi	r16,r16,-16
  229438:	01800044 	movi	r6,1
  22943c:	000b883a 	mov	r5,zero
  229440:	d811883a 	mov	r8,sp
  229444:	3c3ff316 	blt	r7,r16,229414 <_gp+0xfffee88c>
  229448:	da402517 	ldw	r9,148(sp)
  22944c:	e007883a 	mov	r3,fp
  229450:	8039883a 	mov	fp,r16
  229454:	1821883a 	mov	r16,r3
  229458:	d8c02417 	ldw	r3,144(sp)
  22945c:	1705883a 	add	r2,r2,fp
  229460:	47000115 	stw	fp,4(r8)
  229464:	40c00015 	stw	r3,0(r8)
  229468:	d8801c15 	stw	r2,112(sp)
  22946c:	d9801b15 	stw	r6,108(sp)
  229470:	00c001c4 	movi	r3,7
  229474:	19827616 	blt	r3,r6,229e50 <___vfiprintf_internal_r+0xfbc>
  229478:	4cf9c83a 	sub	fp,r9,r19
  22947c:	42000204 	addi	r8,r8,8
  229480:	31000044 	addi	r4,r6,1
  229484:	300b883a 	mov	r5,r6
  229488:	07018516 	blt	zero,fp,229aa0 <___vfiprintf_internal_r+0xc0c>
  22948c:	9885883a 	add	r2,r19,r2
  229490:	45400015 	stw	r21,0(r8)
  229494:	44c00115 	stw	r19,4(r8)
  229498:	d8801c15 	stw	r2,112(sp)
  22949c:	d9001b15 	stw	r4,108(sp)
  2294a0:	00c001c4 	movi	r3,7
  2294a4:	1901dd0e 	bge	r3,r4,229c1c <___vfiprintf_internal_r+0xd88>
  2294a8:	1002401e 	bne	r2,zero,229dac <___vfiprintf_internal_r+0xf18>
  2294ac:	d8001b15 	stw	zero,108(sp)
  2294b0:	a2c0010c 	andi	r11,r20,4
  2294b4:	58000226 	beq	r11,zero,2294c0 <___vfiprintf_internal_r+0x62c>
  2294b8:	8ca7c83a 	sub	r19,r17,r18
  2294bc:	04c2f216 	blt	zero,r19,22a088 <___vfiprintf_internal_r+0x11f4>
  2294c0:	8c80010e 	bge	r17,r18,2294c8 <___vfiprintf_internal_r+0x634>
  2294c4:	9023883a 	mov	r17,r18
  2294c8:	da802317 	ldw	r10,140(sp)
  2294cc:	5455883a 	add	r10,r10,r17
  2294d0:	da802315 	stw	r10,140(sp)
  2294d4:	d8001b15 	stw	zero,108(sp)
  2294d8:	d811883a 	mov	r8,sp
  2294dc:	003ea206 	br	228f68 <_gp+0xfffee3e0>
  2294e0:	a5000814 	ori	r20,r20,32
  2294e4:	80c00007 	ldb	r3,0(r16)
  2294e8:	003ec906 	br	229010 <_gp+0xfffee488>
  2294ec:	80c00007 	ldb	r3,0(r16)
  2294f0:	1b030926 	beq	r3,r12,22a118 <___vfiprintf_internal_r+0x1284>
  2294f4:	a5000414 	ori	r20,r20,16
  2294f8:	003ec506 	br	229010 <_gp+0xfffee488>
  2294fc:	21003fcc 	andi	r4,r4,255
  229500:	20035e1e 	bne	r4,zero,22a27c <___vfiprintf_internal_r+0x13e8>
  229504:	a080080c 	andi	r2,r20,32
  229508:	1002a526 	beq	r2,zero,229fa0 <___vfiprintf_internal_r+0x110c>
  22950c:	da802217 	ldw	r10,136(sp)
  229510:	50800017 	ldw	r2,0(r10)
  229514:	da802317 	ldw	r10,140(sp)
  229518:	5007d7fa 	srai	r3,r10,31
  22951c:	da802217 	ldw	r10,136(sp)
  229520:	10c00115 	stw	r3,4(r2)
  229524:	52800104 	addi	r10,r10,4
  229528:	da802215 	stw	r10,136(sp)
  22952c:	da802317 	ldw	r10,140(sp)
  229530:	12800015 	stw	r10,0(r2)
  229534:	003e8c06 	br	228f68 <_gp+0xfffee3e0>
  229538:	21003fcc 	andi	r4,r4,255
  22953c:	2003511e 	bne	r4,zero,22a284 <___vfiprintf_internal_r+0x13f0>
  229540:	a080080c 	andi	r2,r20,32
  229544:	1000a126 	beq	r2,zero,2297cc <___vfiprintf_internal_r+0x938>
  229548:	da802217 	ldw	r10,136(sp)
  22954c:	d8001d85 	stb	zero,118(sp)
  229550:	50800204 	addi	r2,r10,8
  229554:	54800017 	ldw	r18,0(r10)
  229558:	54c00117 	ldw	r19,4(r10)
  22955c:	4802b416 	blt	r9,zero,22a030 <___vfiprintf_internal_r+0x119c>
  229560:	013fdfc4 	movi	r4,-129
  229564:	94c6b03a 	or	r3,r18,r19
  229568:	d8802215 	stw	r2,136(sp)
  22956c:	a128703a 	and	r20,r20,r4
  229570:	1800a226 	beq	r3,zero,2297fc <___vfiprintf_internal_r+0x968>
  229574:	0039883a 	mov	fp,zero
  229578:	dd401a04 	addi	r21,sp,104
  22957c:	9006d0fa 	srli	r3,r18,3
  229580:	9808977a 	slli	r4,r19,29
  229584:	9826d0fa 	srli	r19,r19,3
  229588:	948001cc 	andi	r18,r18,7
  22958c:	90800c04 	addi	r2,r18,48
  229590:	ad7fffc4 	addi	r21,r21,-1
  229594:	20e4b03a 	or	r18,r4,r3
  229598:	a8800005 	stb	r2,0(r21)
  22959c:	94c6b03a 	or	r3,r18,r19
  2295a0:	183ff61e 	bne	r3,zero,22957c <_gp+0xfffee9f4>
  2295a4:	a0c0004c 	andi	r3,r20,1
  2295a8:	18005926 	beq	r3,zero,229710 <___vfiprintf_internal_r+0x87c>
  2295ac:	10803fcc 	andi	r2,r2,255
  2295b0:	1080201c 	xori	r2,r2,128
  2295b4:	10bfe004 	addi	r2,r2,-128
  2295b8:	00c00c04 	movi	r3,48
  2295bc:	10c05426 	beq	r2,r3,229710 <___vfiprintf_internal_r+0x87c>
  2295c0:	da801e17 	ldw	r10,120(sp)
  2295c4:	a8bfffc4 	addi	r2,r21,-1
  2295c8:	a8ffffc5 	stb	r3,-1(r21)
  2295cc:	50a7c83a 	sub	r19,r10,r2
  2295d0:	102b883a 	mov	r21,r2
  2295d4:	003f2f06 	br	229294 <_gp+0xfffee70c>
  2295d8:	21003fcc 	andi	r4,r4,255
  2295dc:	2003421e 	bne	r4,zero,22a2e8 <___vfiprintf_internal_r+0x1454>
  2295e0:	008008f4 	movhi	r2,35
  2295e4:	10835104 	addi	r2,r2,3396
  2295e8:	d8802615 	stw	r2,152(sp)
  2295ec:	a080080c 	andi	r2,r20,32
  2295f0:	1000aa26 	beq	r2,zero,22989c <___vfiprintf_internal_r+0xa08>
  2295f4:	da802217 	ldw	r10,136(sp)
  2295f8:	54800017 	ldw	r18,0(r10)
  2295fc:	54c00117 	ldw	r19,4(r10)
  229600:	52800204 	addi	r10,r10,8
  229604:	da802215 	stw	r10,136(sp)
  229608:	a080004c 	andi	r2,r20,1
  22960c:	1001d226 	beq	r2,zero,229d58 <___vfiprintf_internal_r+0xec4>
  229610:	94c4b03a 	or	r2,r18,r19
  229614:	1002351e 	bne	r2,zero,229eec <___vfiprintf_internal_r+0x1058>
  229618:	d8001d85 	stb	zero,118(sp)
  22961c:	48022216 	blt	r9,zero,229ea8 <___vfiprintf_internal_r+0x1014>
  229620:	00bfdfc4 	movi	r2,-129
  229624:	a0a8703a 	and	r20,r20,r2
  229628:	003f1506 	br	229280 <_gp+0xfffee6f8>
  22962c:	da802217 	ldw	r10,136(sp)
  229630:	04800044 	movi	r18,1
  229634:	d8001d85 	stb	zero,118(sp)
  229638:	50800017 	ldw	r2,0(r10)
  22963c:	52800104 	addi	r10,r10,4
  229640:	da802215 	stw	r10,136(sp)
  229644:	d8801005 	stb	r2,64(sp)
  229648:	9027883a 	mov	r19,r18
  22964c:	dd401004 	addi	r21,sp,64
  229650:	0013883a 	mov	r9,zero
  229654:	003f1706 	br	2292b4 <_gp+0xfffee72c>
  229658:	21003fcc 	andi	r4,r4,255
  22965c:	2003201e 	bne	r4,zero,22a2e0 <___vfiprintf_internal_r+0x144c>
  229660:	a080080c 	andi	r2,r20,32
  229664:	10004b26 	beq	r2,zero,229794 <___vfiprintf_internal_r+0x900>
  229668:	da802217 	ldw	r10,136(sp)
  22966c:	50800117 	ldw	r2,4(r10)
  229670:	54800017 	ldw	r18,0(r10)
  229674:	52800204 	addi	r10,r10,8
  229678:	da802215 	stw	r10,136(sp)
  22967c:	1027883a 	mov	r19,r2
  229680:	10022c16 	blt	r2,zero,229f34 <___vfiprintf_internal_r+0x10a0>
  229684:	df001d83 	ldbu	fp,118(sp)
  229688:	48007216 	blt	r9,zero,229854 <___vfiprintf_internal_r+0x9c0>
  22968c:	00ffdfc4 	movi	r3,-129
  229690:	94c4b03a 	or	r2,r18,r19
  229694:	a0e8703a 	and	r20,r20,r3
  229698:	1000cc26 	beq	r2,zero,2299cc <___vfiprintf_internal_r+0xb38>
  22969c:	98021026 	beq	r19,zero,229ee0 <___vfiprintf_internal_r+0x104c>
  2296a0:	dc402415 	stw	r17,144(sp)
  2296a4:	dc002515 	stw	r16,148(sp)
  2296a8:	9823883a 	mov	r17,r19
  2296ac:	9021883a 	mov	r16,r18
  2296b0:	dd401a04 	addi	r21,sp,104
  2296b4:	4825883a 	mov	r18,r9
  2296b8:	4027883a 	mov	r19,r8
  2296bc:	8009883a 	mov	r4,r16
  2296c0:	880b883a 	mov	r5,r17
  2296c4:	01800284 	movi	r6,10
  2296c8:	000f883a 	mov	r7,zero
  2296cc:	022af4c0 	call	22af4c <__umoddi3>
  2296d0:	10800c04 	addi	r2,r2,48
  2296d4:	ad7fffc4 	addi	r21,r21,-1
  2296d8:	8009883a 	mov	r4,r16
  2296dc:	880b883a 	mov	r5,r17
  2296e0:	a8800005 	stb	r2,0(r21)
  2296e4:	01800284 	movi	r6,10
  2296e8:	000f883a 	mov	r7,zero
  2296ec:	022a9d40 	call	22a9d4 <__udivdi3>
  2296f0:	1021883a 	mov	r16,r2
  2296f4:	10c4b03a 	or	r2,r2,r3
  2296f8:	1823883a 	mov	r17,r3
  2296fc:	103fef1e 	bne	r2,zero,2296bc <_gp+0xfffeeb34>
  229700:	dc402417 	ldw	r17,144(sp)
  229704:	dc002517 	ldw	r16,148(sp)
  229708:	9013883a 	mov	r9,r18
  22970c:	9811883a 	mov	r8,r19
  229710:	da801e17 	ldw	r10,120(sp)
  229714:	5567c83a 	sub	r19,r10,r21
  229718:	003ede06 	br	229294 <_gp+0xfffee70c>
  22971c:	38803fcc 	andi	r2,r7,255
  229720:	1080201c 	xori	r2,r2,128
  229724:	10bfe004 	addi	r2,r2,-128
  229728:	1002371e 	bne	r2,zero,22a008 <___vfiprintf_internal_r+0x1174>
  22972c:	01000044 	movi	r4,1
  229730:	01c00804 	movi	r7,32
  229734:	80c00007 	ldb	r3,0(r16)
  229738:	003e3506 	br	229010 <_gp+0xfffee488>
  22973c:	a5000054 	ori	r20,r20,1
  229740:	80c00007 	ldb	r3,0(r16)
  229744:	003e3206 	br	229010 <_gp+0xfffee488>
  229748:	a5002014 	ori	r20,r20,128
  22974c:	80c00007 	ldb	r3,0(r16)
  229750:	003e2f06 	br	229010 <_gp+0xfffee488>
  229754:	8015883a 	mov	r10,r16
  229758:	0023883a 	mov	r17,zero
  22975c:	18bff404 	addi	r2,r3,-48
  229760:	50c00007 	ldb	r3,0(r10)
  229764:	8c4002a4 	muli	r17,r17,10
  229768:	84000044 	addi	r16,r16,1
  22976c:	8015883a 	mov	r10,r16
  229770:	1463883a 	add	r17,r2,r17
  229774:	18bff404 	addi	r2,r3,-48
  229778:	30bff92e 	bgeu	r6,r2,229760 <_gp+0xfffeebd8>
  22977c:	003e2506 	br	229014 <_gp+0xfffee48c>
  229780:	21003fcc 	andi	r4,r4,255
  229784:	2002d41e 	bne	r4,zero,22a2d8 <___vfiprintf_internal_r+0x1444>
  229788:	a5000414 	ori	r20,r20,16
  22978c:	a080080c 	andi	r2,r20,32
  229790:	103fb51e 	bne	r2,zero,229668 <_gp+0xfffeeae0>
  229794:	a080040c 	andi	r2,r20,16
  229798:	1001f826 	beq	r2,zero,229f7c <___vfiprintf_internal_r+0x10e8>
  22979c:	da802217 	ldw	r10,136(sp)
  2297a0:	54800017 	ldw	r18,0(r10)
  2297a4:	52800104 	addi	r10,r10,4
  2297a8:	da802215 	stw	r10,136(sp)
  2297ac:	9027d7fa 	srai	r19,r18,31
  2297b0:	9805883a 	mov	r2,r19
  2297b4:	003fb206 	br	229680 <_gp+0xfffeeaf8>
  2297b8:	21003fcc 	andi	r4,r4,255
  2297bc:	2002c41e 	bne	r4,zero,22a2d0 <___vfiprintf_internal_r+0x143c>
  2297c0:	a5000414 	ori	r20,r20,16
  2297c4:	a080080c 	andi	r2,r20,32
  2297c8:	103f5f1e 	bne	r2,zero,229548 <_gp+0xfffee9c0>
  2297cc:	a080040c 	andi	r2,r20,16
  2297d0:	10020f26 	beq	r2,zero,22a010 <___vfiprintf_internal_r+0x117c>
  2297d4:	da802217 	ldw	r10,136(sp)
  2297d8:	d8001d85 	stb	zero,118(sp)
  2297dc:	0027883a 	mov	r19,zero
  2297e0:	50800104 	addi	r2,r10,4
  2297e4:	54800017 	ldw	r18,0(r10)
  2297e8:	48021116 	blt	r9,zero,22a030 <___vfiprintf_internal_r+0x119c>
  2297ec:	00ffdfc4 	movi	r3,-129
  2297f0:	d8802215 	stw	r2,136(sp)
  2297f4:	a0e8703a 	and	r20,r20,r3
  2297f8:	903f5e1e 	bne	r18,zero,229574 <_gp+0xfffee9ec>
  2297fc:	0039883a 	mov	fp,zero
  229800:	4802a626 	beq	r9,zero,22a29c <___vfiprintf_internal_r+0x1408>
  229804:	0025883a 	mov	r18,zero
  229808:	0027883a 	mov	r19,zero
  22980c:	003f5a06 	br	229578 <_gp+0xfffee9f0>
  229810:	21003fcc 	andi	r4,r4,255
  229814:	20029f1e 	bne	r4,zero,22a294 <___vfiprintf_internal_r+0x1400>
  229818:	a5000414 	ori	r20,r20,16
  22981c:	a080080c 	andi	r2,r20,32
  229820:	10005e1e 	bne	r2,zero,22999c <___vfiprintf_internal_r+0xb08>
  229824:	a080040c 	andi	r2,r20,16
  229828:	1001a21e 	bne	r2,zero,229eb4 <___vfiprintf_internal_r+0x1020>
  22982c:	a080100c 	andi	r2,r20,64
  229830:	d8001d85 	stb	zero,118(sp)
  229834:	da802217 	ldw	r10,136(sp)
  229838:	1002231e 	bne	r2,zero,22a0c8 <___vfiprintf_internal_r+0x1234>
  22983c:	50800104 	addi	r2,r10,4
  229840:	54800017 	ldw	r18,0(r10)
  229844:	0027883a 	mov	r19,zero
  229848:	4801a00e 	bge	r9,zero,229ecc <___vfiprintf_internal_r+0x1038>
  22984c:	d8802215 	stw	r2,136(sp)
  229850:	0039883a 	mov	fp,zero
  229854:	94c4b03a 	or	r2,r18,r19
  229858:	103f901e 	bne	r2,zero,22969c <_gp+0xfffeeb14>
  22985c:	00800044 	movi	r2,1
  229860:	10803fcc 	andi	r2,r2,255
  229864:	00c00044 	movi	r3,1
  229868:	10c05926 	beq	r2,r3,2299d0 <___vfiprintf_internal_r+0xb3c>
  22986c:	00c00084 	movi	r3,2
  229870:	10ffe41e 	bne	r2,r3,229804 <_gp+0xfffeec7c>
  229874:	0025883a 	mov	r18,zero
  229878:	0027883a 	mov	r19,zero
  22987c:	00013d06 	br	229d74 <___vfiprintf_internal_r+0xee0>
  229880:	21003fcc 	andi	r4,r4,255
  229884:	2002811e 	bne	r4,zero,22a28c <___vfiprintf_internal_r+0x13f8>
  229888:	008008f4 	movhi	r2,35
  22988c:	10834c04 	addi	r2,r2,3376
  229890:	d8802615 	stw	r2,152(sp)
  229894:	a080080c 	andi	r2,r20,32
  229898:	103f561e 	bne	r2,zero,2295f4 <_gp+0xfffeea6c>
  22989c:	a080040c 	andi	r2,r20,16
  2298a0:	1001d126 	beq	r2,zero,229fe8 <___vfiprintf_internal_r+0x1154>
  2298a4:	da802217 	ldw	r10,136(sp)
  2298a8:	0027883a 	mov	r19,zero
  2298ac:	54800017 	ldw	r18,0(r10)
  2298b0:	52800104 	addi	r10,r10,4
  2298b4:	da802215 	stw	r10,136(sp)
  2298b8:	003f5306 	br	229608 <_gp+0xfffeea80>
  2298bc:	da802217 	ldw	r10,136(sp)
  2298c0:	d8001d85 	stb	zero,118(sp)
  2298c4:	55400017 	ldw	r21,0(r10)
  2298c8:	50c00104 	addi	r3,r10,4
  2298cc:	a8024226 	beq	r21,zero,22a1d8 <___vfiprintf_internal_r+0x1344>
  2298d0:	48021816 	blt	r9,zero,22a134 <___vfiprintf_internal_r+0x12a0>
  2298d4:	480d883a 	mov	r6,r9
  2298d8:	000b883a 	mov	r5,zero
  2298dc:	a809883a 	mov	r4,r21
  2298e0:	d8c02a15 	stw	r3,168(sp)
  2298e4:	da002b15 	stw	r8,172(sp)
  2298e8:	da402c15 	stw	r9,176(sp)
  2298ec:	02272e80 	call	2272e8 <memchr>
  2298f0:	d8c02a17 	ldw	r3,168(sp)
  2298f4:	da002b17 	ldw	r8,172(sp)
  2298f8:	da402c17 	ldw	r9,176(sp)
  2298fc:	10024826 	beq	r2,zero,22a220 <___vfiprintf_internal_r+0x138c>
  229900:	1567c83a 	sub	r19,r2,r21
  229904:	df001d83 	ldbu	fp,118(sp)
  229908:	d8c02215 	stw	r3,136(sp)
  22990c:	0013883a 	mov	r9,zero
  229910:	003e6006 	br	229294 <_gp+0xfffee70c>
  229914:	21003fcc 	andi	r4,r4,255
  229918:	203fc026 	beq	r4,zero,22981c <_gp+0xfffeec94>
  22991c:	d9c01d85 	stb	r7,118(sp)
  229920:	003fbe06 	br	22981c <_gp+0xfffeec94>
  229924:	da802217 	ldw	r10,136(sp)
  229928:	54400017 	ldw	r17,0(r10)
  22992c:	50800104 	addi	r2,r10,4
  229930:	883e3b16 	blt	r17,zero,229220 <_gp+0xfffee698>
  229934:	d8802215 	stw	r2,136(sp)
  229938:	80c00007 	ldb	r3,0(r16)
  22993c:	003db406 	br	229010 <_gp+0xfffee488>
  229940:	01000044 	movi	r4,1
  229944:	01c00ac4 	movi	r7,43
  229948:	80c00007 	ldb	r3,0(r16)
  22994c:	003db006 	br	229010 <_gp+0xfffee488>
  229950:	80c00007 	ldb	r3,0(r16)
  229954:	82800044 	addi	r10,r16,1
  229958:	1b423c26 	beq	r3,r13,22a24c <___vfiprintf_internal_r+0x13b8>
  22995c:	18bff404 	addi	r2,r3,-48
  229960:	0013883a 	mov	r9,zero
  229964:	30822b36 	bltu	r6,r2,22a214 <___vfiprintf_internal_r+0x1380>
  229968:	50c00007 	ldb	r3,0(r10)
  22996c:	4a4002a4 	muli	r9,r9,10
  229970:	54000044 	addi	r16,r10,1
  229974:	8015883a 	mov	r10,r16
  229978:	4893883a 	add	r9,r9,r2
  22997c:	18bff404 	addi	r2,r3,-48
  229980:	30bff92e 	bgeu	r6,r2,229968 <_gp+0xfffeede0>
  229984:	483da30e 	bge	r9,zero,229014 <_gp+0xfffee48c>
  229988:	027fffc4 	movi	r9,-1
  22998c:	003da106 	br	229014 <_gp+0xfffee48c>
  229990:	a5001014 	ori	r20,r20,64
  229994:	80c00007 	ldb	r3,0(r16)
  229998:	003d9d06 	br	229010 <_gp+0xfffee488>
  22999c:	da802217 	ldw	r10,136(sp)
  2299a0:	d8001d85 	stb	zero,118(sp)
  2299a4:	50c00204 	addi	r3,r10,8
  2299a8:	54800017 	ldw	r18,0(r10)
  2299ac:	54c00117 	ldw	r19,4(r10)
  2299b0:	4801ca16 	blt	r9,zero,22a0dc <___vfiprintf_internal_r+0x1248>
  2299b4:	013fdfc4 	movi	r4,-129
  2299b8:	94c4b03a 	or	r2,r18,r19
  2299bc:	d8c02215 	stw	r3,136(sp)
  2299c0:	a128703a 	and	r20,r20,r4
  2299c4:	0039883a 	mov	fp,zero
  2299c8:	103f341e 	bne	r2,zero,22969c <_gp+0xfffeeb14>
  2299cc:	483e2e26 	beq	r9,zero,229288 <_gp+0xfffee700>
  2299d0:	0025883a 	mov	r18,zero
  2299d4:	94800c04 	addi	r18,r18,48
  2299d8:	dc8019c5 	stb	r18,103(sp)
  2299dc:	dcc02717 	ldw	r19,156(sp)
  2299e0:	dd4019c4 	addi	r21,sp,103
  2299e4:	003e2b06 	br	229294 <_gp+0xfffee70c>
  2299e8:	21003fcc 	andi	r4,r4,255
  2299ec:	2002361e 	bne	r4,zero,22a2c8 <___vfiprintf_internal_r+0x1434>
  2299f0:	1801c126 	beq	r3,zero,22a0f8 <___vfiprintf_internal_r+0x1264>
  2299f4:	04800044 	movi	r18,1
  2299f8:	d8c01005 	stb	r3,64(sp)
  2299fc:	d8001d85 	stb	zero,118(sp)
  229a00:	9027883a 	mov	r19,r18
  229a04:	dd401004 	addi	r21,sp,64
  229a08:	003f1106 	br	229650 <_gp+0xfffeeac8>
  229a0c:	d9402117 	ldw	r5,132(sp)
  229a10:	d9002017 	ldw	r4,128(sp)
  229a14:	d9801a04 	addi	r6,sp,104
  229a18:	d9c02b15 	stw	r7,172(sp)
  229a1c:	dbc02a15 	stw	r15,168(sp)
  229a20:	0228d800 	call	228d80 <__sprint_r.part.0>
  229a24:	d9c02b17 	ldw	r7,172(sp)
  229a28:	dbc02a17 	ldw	r15,168(sp)
  229a2c:	10006d1e 	bne	r2,zero,229be4 <___vfiprintf_internal_r+0xd50>
  229a30:	d9801b17 	ldw	r6,108(sp)
  229a34:	d8801c17 	ldw	r2,112(sp)
  229a38:	d811883a 	mov	r8,sp
  229a3c:	31400044 	addi	r5,r6,1
  229a40:	003e3306 	br	229310 <_gp+0xfffee788>
  229a44:	d9401b17 	ldw	r5,108(sp)
  229a48:	d8801c17 	ldw	r2,112(sp)
  229a4c:	29000044 	addi	r4,r5,1
  229a50:	d8c01d87 	ldb	r3,118(sp)
  229a54:	183e4d26 	beq	r3,zero,22938c <_gp+0xfffee804>
  229a58:	00c00044 	movi	r3,1
  229a5c:	d9401d84 	addi	r5,sp,118
  229a60:	10c5883a 	add	r2,r2,r3
  229a64:	41400015 	stw	r5,0(r8)
  229a68:	40c00115 	stw	r3,4(r8)
  229a6c:	d8801c15 	stw	r2,112(sp)
  229a70:	d9001b15 	stw	r4,108(sp)
  229a74:	014001c4 	movi	r5,7
  229a78:	2900a90e 	bge	r5,r4,229d20 <___vfiprintf_internal_r+0xe8c>
  229a7c:	1000da1e 	bne	r2,zero,229de8 <___vfiprintf_internal_r+0xf54>
  229a80:	7000ab1e 	bne	r14,zero,229d30 <___vfiprintf_internal_r+0xe9c>
  229a84:	000b883a 	mov	r5,zero
  229a88:	1809883a 	mov	r4,r3
  229a8c:	d811883a 	mov	r8,sp
  229a90:	00c02004 	movi	r3,128
  229a94:	e0fe4d26 	beq	fp,r3,2293cc <_gp+0xfffee844>
  229a98:	4cf9c83a 	sub	fp,r9,r19
  229a9c:	073e7b0e 	bge	zero,fp,22948c <_gp+0xfffee904>
  229aa0:	01c00404 	movi	r7,16
  229aa4:	3f01900e 	bge	r7,fp,22a0e8 <___vfiprintf_internal_r+0x1254>
  229aa8:	00c008f4 	movhi	r3,35
  229aac:	18c3b104 	addi	r3,r3,3780
  229ab0:	d8c02415 	stw	r3,144(sp)
  229ab4:	034001c4 	movi	r13,7
  229ab8:	00000506 	br	229ad0 <___vfiprintf_internal_r+0xc3c>
  229abc:	29000084 	addi	r4,r5,2
  229ac0:	42000204 	addi	r8,r8,8
  229ac4:	180b883a 	mov	r5,r3
  229ac8:	e73ffc04 	addi	fp,fp,-16
  229acc:	3f000d0e 	bge	r7,fp,229b04 <___vfiprintf_internal_r+0xc70>
  229ad0:	10800404 	addi	r2,r2,16
  229ad4:	28c00044 	addi	r3,r5,1
  229ad8:	45c00015 	stw	r23,0(r8)
  229adc:	41c00115 	stw	r7,4(r8)
  229ae0:	d8801c15 	stw	r2,112(sp)
  229ae4:	d8c01b15 	stw	r3,108(sp)
  229ae8:	68fff40e 	bge	r13,r3,229abc <_gp+0xfffeef34>
  229aec:	1000101e 	bne	r2,zero,229b30 <___vfiprintf_internal_r+0xc9c>
  229af0:	e73ffc04 	addi	fp,fp,-16
  229af4:	01000044 	movi	r4,1
  229af8:	000b883a 	mov	r5,zero
  229afc:	d811883a 	mov	r8,sp
  229b00:	3f3ff316 	blt	r7,fp,229ad0 <_gp+0xfffeef48>
  229b04:	da802417 	ldw	r10,144(sp)
  229b08:	1705883a 	add	r2,r2,fp
  229b0c:	47000115 	stw	fp,4(r8)
  229b10:	42800015 	stw	r10,0(r8)
  229b14:	d8801c15 	stw	r2,112(sp)
  229b18:	d9001b15 	stw	r4,108(sp)
  229b1c:	00c001c4 	movi	r3,7
  229b20:	19003616 	blt	r3,r4,229bfc <___vfiprintf_internal_r+0xd68>
  229b24:	42000204 	addi	r8,r8,8
  229b28:	21000044 	addi	r4,r4,1
  229b2c:	003e5706 	br	22948c <_gp+0xfffee904>
  229b30:	d9402117 	ldw	r5,132(sp)
  229b34:	d9002017 	ldw	r4,128(sp)
  229b38:	d9801a04 	addi	r6,sp,104
  229b3c:	d9c02b15 	stw	r7,172(sp)
  229b40:	db402a15 	stw	r13,168(sp)
  229b44:	0228d800 	call	228d80 <__sprint_r.part.0>
  229b48:	d9c02b17 	ldw	r7,172(sp)
  229b4c:	db402a17 	ldw	r13,168(sp)
  229b50:	1000241e 	bne	r2,zero,229be4 <___vfiprintf_internal_r+0xd50>
  229b54:	d9401b17 	ldw	r5,108(sp)
  229b58:	d8801c17 	ldw	r2,112(sp)
  229b5c:	d811883a 	mov	r8,sp
  229b60:	29000044 	addi	r4,r5,1
  229b64:	003fd806 	br	229ac8 <_gp+0xfffeef40>
  229b68:	d9401b17 	ldw	r5,108(sp)
  229b6c:	00c008f4 	movhi	r3,35
  229b70:	18c3b504 	addi	r3,r3,3796
  229b74:	d8c02415 	stw	r3,144(sp)
  229b78:	29400044 	addi	r5,r5,1
  229b7c:	d8c02417 	ldw	r3,144(sp)
  229b80:	14c5883a 	add	r2,r2,r19
  229b84:	44c00115 	stw	r19,4(r8)
  229b88:	40c00015 	stw	r3,0(r8)
  229b8c:	d8801c15 	stw	r2,112(sp)
  229b90:	d9401b15 	stw	r5,108(sp)
  229b94:	00c001c4 	movi	r3,7
  229b98:	1940070e 	bge	r3,r5,229bb8 <___vfiprintf_internal_r+0xd24>
  229b9c:	103e4826 	beq	r2,zero,2294c0 <_gp+0xfffee938>
  229ba0:	d9402117 	ldw	r5,132(sp)
  229ba4:	d9002017 	ldw	r4,128(sp)
  229ba8:	d9801a04 	addi	r6,sp,104
  229bac:	0228d800 	call	228d80 <__sprint_r.part.0>
  229bb0:	10000c1e 	bne	r2,zero,229be4 <___vfiprintf_internal_r+0xd50>
  229bb4:	d8801c17 	ldw	r2,112(sp)
  229bb8:	8c80010e 	bge	r17,r18,229bc0 <___vfiprintf_internal_r+0xd2c>
  229bbc:	9023883a 	mov	r17,r18
  229bc0:	da802317 	ldw	r10,140(sp)
  229bc4:	5455883a 	add	r10,r10,r17
  229bc8:	da802315 	stw	r10,140(sp)
  229bcc:	103e4126 	beq	r2,zero,2294d4 <_gp+0xfffee94c>
  229bd0:	d9402117 	ldw	r5,132(sp)
  229bd4:	d9002017 	ldw	r4,128(sp)
  229bd8:	d9801a04 	addi	r6,sp,104
  229bdc:	0228d800 	call	228d80 <__sprint_r.part.0>
  229be0:	103e3c26 	beq	r2,zero,2294d4 <_gp+0xfffee94c>
  229be4:	dd002117 	ldw	r20,132(sp)
  229be8:	a080030b 	ldhu	r2,12(r20)
  229bec:	1080100c 	andi	r2,r2,64
  229bf0:	1001231e 	bne	r2,zero,22a080 <___vfiprintf_internal_r+0x11ec>
  229bf4:	d8802317 	ldw	r2,140(sp)
  229bf8:	003d7b06 	br	2291e8 <_gp+0xfffee660>
  229bfc:	1000991e 	bne	r2,zero,229e64 <___vfiprintf_internal_r+0xfd0>
  229c00:	00c00044 	movi	r3,1
  229c04:	9805883a 	mov	r2,r19
  229c08:	dd400015 	stw	r21,0(sp)
  229c0c:	dcc00115 	stw	r19,4(sp)
  229c10:	dcc01c15 	stw	r19,112(sp)
  229c14:	d8c01b15 	stw	r3,108(sp)
  229c18:	d811883a 	mov	r8,sp
  229c1c:	42000204 	addi	r8,r8,8
  229c20:	a2c0010c 	andi	r11,r20,4
  229c24:	583fe426 	beq	r11,zero,229bb8 <_gp+0xfffef030>
  229c28:	8ca7c83a 	sub	r19,r17,r18
  229c2c:	04ffe20e 	bge	zero,r19,229bb8 <_gp+0xfffef030>
  229c30:	01c00404 	movi	r7,16
  229c34:	3cffcc0e 	bge	r7,r19,229b68 <_gp+0xfffeefe0>
  229c38:	028008f4 	movhi	r10,35
  229c3c:	5283b504 	addi	r10,r10,3796
  229c40:	d9001b17 	ldw	r4,108(sp)
  229c44:	da802415 	stw	r10,144(sp)
  229c48:	382b883a 	mov	r21,r7
  229c4c:	050001c4 	movi	r20,7
  229c50:	df002017 	ldw	fp,128(sp)
  229c54:	00000506 	br	229c6c <___vfiprintf_internal_r+0xdd8>
  229c58:	21400084 	addi	r5,r4,2
  229c5c:	42000204 	addi	r8,r8,8
  229c60:	1809883a 	mov	r4,r3
  229c64:	9cfffc04 	addi	r19,r19,-16
  229c68:	acffc40e 	bge	r21,r19,229b7c <_gp+0xfffeeff4>
  229c6c:	10800404 	addi	r2,r2,16
  229c70:	20c00044 	addi	r3,r4,1
  229c74:	45800015 	stw	r22,0(r8)
  229c78:	45400115 	stw	r21,4(r8)
  229c7c:	d8801c15 	stw	r2,112(sp)
  229c80:	d8c01b15 	stw	r3,108(sp)
  229c84:	a0fff40e 	bge	r20,r3,229c58 <_gp+0xfffef0d0>
  229c88:	1000041e 	bne	r2,zero,229c9c <___vfiprintf_internal_r+0xe08>
  229c8c:	01400044 	movi	r5,1
  229c90:	0009883a 	mov	r4,zero
  229c94:	d811883a 	mov	r8,sp
  229c98:	003ff206 	br	229c64 <_gp+0xfffef0dc>
  229c9c:	d9402117 	ldw	r5,132(sp)
  229ca0:	d9801a04 	addi	r6,sp,104
  229ca4:	e009883a 	mov	r4,fp
  229ca8:	0228d800 	call	228d80 <__sprint_r.part.0>
  229cac:	103fcd1e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  229cb0:	d9001b17 	ldw	r4,108(sp)
  229cb4:	d8801c17 	ldw	r2,112(sp)
  229cb8:	d811883a 	mov	r8,sp
  229cbc:	21400044 	addi	r5,r4,1
  229cc0:	003fe806 	br	229c64 <_gp+0xfffef0dc>
  229cc4:	d9402117 	ldw	r5,132(sp)
  229cc8:	d9002017 	ldw	r4,128(sp)
  229ccc:	d9801a04 	addi	r6,sp,104
  229cd0:	d9c02b15 	stw	r7,172(sp)
  229cd4:	db402a15 	stw	r13,168(sp)
  229cd8:	0228d800 	call	228d80 <__sprint_r.part.0>
  229cdc:	d9c02b17 	ldw	r7,172(sp)
  229ce0:	db402a17 	ldw	r13,168(sp)
  229ce4:	103fbf1e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  229ce8:	d9401b17 	ldw	r5,108(sp)
  229cec:	d8801c17 	ldw	r2,112(sp)
  229cf0:	d811883a 	mov	r8,sp
  229cf4:	29800044 	addi	r6,r5,1
  229cf8:	003dc406 	br	22940c <_gp+0xfffee884>
  229cfc:	1000d21e 	bne	r2,zero,22a048 <___vfiprintf_internal_r+0x11b4>
  229d00:	d8c01d87 	ldb	r3,118(sp)
  229d04:	18009526 	beq	r3,zero,229f5c <___vfiprintf_internal_r+0x10c8>
  229d08:	00800044 	movi	r2,1
  229d0c:	d8c01d84 	addi	r3,sp,118
  229d10:	1009883a 	mov	r4,r2
  229d14:	d8c00015 	stw	r3,0(sp)
  229d18:	d8800115 	stw	r2,4(sp)
  229d1c:	d811883a 	mov	r8,sp
  229d20:	200b883a 	mov	r5,r4
  229d24:	42000204 	addi	r8,r8,8
  229d28:	21000044 	addi	r4,r4,1
  229d2c:	003d9706 	br	22938c <_gp+0xfffee804>
  229d30:	d9001d04 	addi	r4,sp,116
  229d34:	00800084 	movi	r2,2
  229d38:	d9000015 	stw	r4,0(sp)
  229d3c:	d8800115 	stw	r2,4(sp)
  229d40:	1809883a 	mov	r4,r3
  229d44:	d811883a 	mov	r8,sp
  229d48:	200b883a 	mov	r5,r4
  229d4c:	42000204 	addi	r8,r8,8
  229d50:	21000044 	addi	r4,r4,1
  229d54:	003f4e06 	br	229a90 <_gp+0xfffeef08>
  229d58:	d8001d85 	stb	zero,118(sp)
  229d5c:	48005016 	blt	r9,zero,229ea0 <___vfiprintf_internal_r+0x100c>
  229d60:	00ffdfc4 	movi	r3,-129
  229d64:	94c4b03a 	or	r2,r18,r19
  229d68:	a0e8703a 	and	r20,r20,r3
  229d6c:	103d4426 	beq	r2,zero,229280 <_gp+0xfffee6f8>
  229d70:	0039883a 	mov	fp,zero
  229d74:	d9002617 	ldw	r4,152(sp)
  229d78:	dd401a04 	addi	r21,sp,104
  229d7c:	908003cc 	andi	r2,r18,15
  229d80:	9806973a 	slli	r3,r19,28
  229d84:	2085883a 	add	r2,r4,r2
  229d88:	9024d13a 	srli	r18,r18,4
  229d8c:	10800003 	ldbu	r2,0(r2)
  229d90:	9826d13a 	srli	r19,r19,4
  229d94:	ad7fffc4 	addi	r21,r21,-1
  229d98:	1ca4b03a 	or	r18,r3,r18
  229d9c:	a8800005 	stb	r2,0(r21)
  229da0:	94c4b03a 	or	r2,r18,r19
  229da4:	103ff51e 	bne	r2,zero,229d7c <_gp+0xfffef1f4>
  229da8:	003e5906 	br	229710 <_gp+0xfffeeb88>
  229dac:	d9402117 	ldw	r5,132(sp)
  229db0:	d9002017 	ldw	r4,128(sp)
  229db4:	d9801a04 	addi	r6,sp,104
  229db8:	0228d800 	call	228d80 <__sprint_r.part.0>
  229dbc:	103f891e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  229dc0:	d8801c17 	ldw	r2,112(sp)
  229dc4:	d811883a 	mov	r8,sp
  229dc8:	003f9506 	br	229c20 <_gp+0xfffef098>
  229dcc:	d9402117 	ldw	r5,132(sp)
  229dd0:	d9002017 	ldw	r4,128(sp)
  229dd4:	d9801a04 	addi	r6,sp,104
  229dd8:	0228d800 	call	228d80 <__sprint_r.part.0>
  229ddc:	103f811e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  229de0:	d811883a 	mov	r8,sp
  229de4:	003ced06 	br	22919c <_gp+0xfffee614>
  229de8:	d9402117 	ldw	r5,132(sp)
  229dec:	d9002017 	ldw	r4,128(sp)
  229df0:	d9801a04 	addi	r6,sp,104
  229df4:	da402c15 	stw	r9,176(sp)
  229df8:	db802a15 	stw	r14,168(sp)
  229dfc:	0228d800 	call	228d80 <__sprint_r.part.0>
  229e00:	da402c17 	ldw	r9,176(sp)
  229e04:	db802a17 	ldw	r14,168(sp)
  229e08:	103f761e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  229e0c:	d9401b17 	ldw	r5,108(sp)
  229e10:	d8801c17 	ldw	r2,112(sp)
  229e14:	d811883a 	mov	r8,sp
  229e18:	29000044 	addi	r4,r5,1
  229e1c:	003d5b06 	br	22938c <_gp+0xfffee804>
  229e20:	d9402117 	ldw	r5,132(sp)
  229e24:	d9002017 	ldw	r4,128(sp)
  229e28:	d9801a04 	addi	r6,sp,104
  229e2c:	da402c15 	stw	r9,176(sp)
  229e30:	0228d800 	call	228d80 <__sprint_r.part.0>
  229e34:	da402c17 	ldw	r9,176(sp)
  229e38:	103f6a1e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  229e3c:	d9401b17 	ldw	r5,108(sp)
  229e40:	d8801c17 	ldw	r2,112(sp)
  229e44:	d811883a 	mov	r8,sp
  229e48:	29000044 	addi	r4,r5,1
  229e4c:	003f1006 	br	229a90 <_gp+0xfffeef08>
  229e50:	1000c31e 	bne	r2,zero,22a160 <___vfiprintf_internal_r+0x12cc>
  229e54:	01000044 	movi	r4,1
  229e58:	000b883a 	mov	r5,zero
  229e5c:	d811883a 	mov	r8,sp
  229e60:	003f0d06 	br	229a98 <_gp+0xfffeef10>
  229e64:	d9402117 	ldw	r5,132(sp)
  229e68:	d9002017 	ldw	r4,128(sp)
  229e6c:	d9801a04 	addi	r6,sp,104
  229e70:	0228d800 	call	228d80 <__sprint_r.part.0>
  229e74:	103f5b1e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  229e78:	d9001b17 	ldw	r4,108(sp)
  229e7c:	d8801c17 	ldw	r2,112(sp)
  229e80:	d811883a 	mov	r8,sp
  229e84:	21000044 	addi	r4,r4,1
  229e88:	003d8006 	br	22948c <_gp+0xfffee904>
  229e8c:	010008f4 	movhi	r4,35
  229e90:	21035104 	addi	r4,r4,3396
  229e94:	d9002615 	stw	r4,152(sp)
  229e98:	d8c02215 	stw	r3,136(sp)
  229e9c:	1029883a 	mov	r20,r2
  229ea0:	94c4b03a 	or	r2,r18,r19
  229ea4:	103fb21e 	bne	r2,zero,229d70 <_gp+0xfffef1e8>
  229ea8:	0039883a 	mov	fp,zero
  229eac:	00800084 	movi	r2,2
  229eb0:	003e6b06 	br	229860 <_gp+0xfffeecd8>
  229eb4:	da802217 	ldw	r10,136(sp)
  229eb8:	d8001d85 	stb	zero,118(sp)
  229ebc:	0027883a 	mov	r19,zero
  229ec0:	50800104 	addi	r2,r10,4
  229ec4:	54800017 	ldw	r18,0(r10)
  229ec8:	483e6016 	blt	r9,zero,22984c <_gp+0xfffeecc4>
  229ecc:	00ffdfc4 	movi	r3,-129
  229ed0:	d8802215 	stw	r2,136(sp)
  229ed4:	a0e8703a 	and	r20,r20,r3
  229ed8:	0039883a 	mov	fp,zero
  229edc:	903ebb26 	beq	r18,zero,2299cc <_gp+0xfffeee44>
  229ee0:	00800244 	movi	r2,9
  229ee4:	14bdee36 	bltu	r2,r18,2296a0 <_gp+0xfffeeb18>
  229ee8:	003eba06 	br	2299d4 <_gp+0xfffeee4c>
  229eec:	00800c04 	movi	r2,48
  229ef0:	d8c01d45 	stb	r3,117(sp)
  229ef4:	d8801d05 	stb	r2,116(sp)
  229ef8:	d8001d85 	stb	zero,118(sp)
  229efc:	a0c00094 	ori	r3,r20,2
  229f00:	4800a916 	blt	r9,zero,22a1a8 <___vfiprintf_internal_r+0x1314>
  229f04:	00bfdfc4 	movi	r2,-129
  229f08:	a096703a 	and	r11,r20,r2
  229f0c:	5d000094 	ori	r20,r11,2
  229f10:	0039883a 	mov	fp,zero
  229f14:	003f9706 	br	229d74 <_gp+0xfffef1ec>
  229f18:	8025883a 	mov	r18,r16
  229f1c:	003c2e06 	br	228fd8 <_gp+0xfffee450>
  229f20:	008008f4 	movhi	r2,35
  229f24:	10835104 	addi	r2,r2,3396
  229f28:	0039883a 	mov	fp,zero
  229f2c:	d8802615 	stw	r2,152(sp)
  229f30:	003f9006 	br	229d74 <_gp+0xfffef1ec>
  229f34:	04a5c83a 	sub	r18,zero,r18
  229f38:	07000b44 	movi	fp,45
  229f3c:	9004c03a 	cmpne	r2,r18,zero
  229f40:	04e7c83a 	sub	r19,zero,r19
  229f44:	df001d85 	stb	fp,118(sp)
  229f48:	98a7c83a 	sub	r19,r19,r2
  229f4c:	48009f16 	blt	r9,zero,22a1cc <___vfiprintf_internal_r+0x1338>
  229f50:	00bfdfc4 	movi	r2,-129
  229f54:	a0a8703a 	and	r20,r20,r2
  229f58:	003dd006 	br	22969c <_gp+0xfffeeb14>
  229f5c:	70004c26 	beq	r14,zero,22a090 <___vfiprintf_internal_r+0x11fc>
  229f60:	00800084 	movi	r2,2
  229f64:	d8c01d04 	addi	r3,sp,116
  229f68:	d8c00015 	stw	r3,0(sp)
  229f6c:	d8800115 	stw	r2,4(sp)
  229f70:	01000044 	movi	r4,1
  229f74:	d811883a 	mov	r8,sp
  229f78:	003f7306 	br	229d48 <_gp+0xfffef1c0>
  229f7c:	a080100c 	andi	r2,r20,64
  229f80:	da802217 	ldw	r10,136(sp)
  229f84:	103e0626 	beq	r2,zero,2297a0 <_gp+0xfffeec18>
  229f88:	5480000f 	ldh	r18,0(r10)
  229f8c:	52800104 	addi	r10,r10,4
  229f90:	da802215 	stw	r10,136(sp)
  229f94:	9027d7fa 	srai	r19,r18,31
  229f98:	9805883a 	mov	r2,r19
  229f9c:	003db806 	br	229680 <_gp+0xfffeeaf8>
  229fa0:	a080040c 	andi	r2,r20,16
  229fa4:	1000091e 	bne	r2,zero,229fcc <___vfiprintf_internal_r+0x1138>
  229fa8:	a2c0100c 	andi	r11,r20,64
  229fac:	58000726 	beq	r11,zero,229fcc <___vfiprintf_internal_r+0x1138>
  229fb0:	da802217 	ldw	r10,136(sp)
  229fb4:	50800017 	ldw	r2,0(r10)
  229fb8:	52800104 	addi	r10,r10,4
  229fbc:	da802215 	stw	r10,136(sp)
  229fc0:	da802317 	ldw	r10,140(sp)
  229fc4:	1280000d 	sth	r10,0(r2)
  229fc8:	003be706 	br	228f68 <_gp+0xfffee3e0>
  229fcc:	da802217 	ldw	r10,136(sp)
  229fd0:	50800017 	ldw	r2,0(r10)
  229fd4:	52800104 	addi	r10,r10,4
  229fd8:	da802215 	stw	r10,136(sp)
  229fdc:	da802317 	ldw	r10,140(sp)
  229fe0:	12800015 	stw	r10,0(r2)
  229fe4:	003be006 	br	228f68 <_gp+0xfffee3e0>
  229fe8:	a080100c 	andi	r2,r20,64
  229fec:	da802217 	ldw	r10,136(sp)
  229ff0:	10003026 	beq	r2,zero,22a0b4 <___vfiprintf_internal_r+0x1220>
  229ff4:	5480000b 	ldhu	r18,0(r10)
  229ff8:	52800104 	addi	r10,r10,4
  229ffc:	0027883a 	mov	r19,zero
  22a000:	da802215 	stw	r10,136(sp)
  22a004:	003d8006 	br	229608 <_gp+0xfffeea80>
  22a008:	80c00007 	ldb	r3,0(r16)
  22a00c:	003c0006 	br	229010 <_gp+0xfffee488>
  22a010:	a080100c 	andi	r2,r20,64
  22a014:	d8001d85 	stb	zero,118(sp)
  22a018:	da802217 	ldw	r10,136(sp)
  22a01c:	1000201e 	bne	r2,zero,22a0a0 <___vfiprintf_internal_r+0x120c>
  22a020:	50800104 	addi	r2,r10,4
  22a024:	54800017 	ldw	r18,0(r10)
  22a028:	0027883a 	mov	r19,zero
  22a02c:	483def0e 	bge	r9,zero,2297ec <_gp+0xfffeec64>
  22a030:	94c6b03a 	or	r3,r18,r19
  22a034:	d8802215 	stw	r2,136(sp)
  22a038:	183d4e1e 	bne	r3,zero,229574 <_gp+0xfffee9ec>
  22a03c:	0039883a 	mov	fp,zero
  22a040:	0005883a 	mov	r2,zero
  22a044:	003e0606 	br	229860 <_gp+0xfffeecd8>
  22a048:	d9402117 	ldw	r5,132(sp)
  22a04c:	d9002017 	ldw	r4,128(sp)
  22a050:	d9801a04 	addi	r6,sp,104
  22a054:	da402c15 	stw	r9,176(sp)
  22a058:	db802a15 	stw	r14,168(sp)
  22a05c:	0228d800 	call	228d80 <__sprint_r.part.0>
  22a060:	da402c17 	ldw	r9,176(sp)
  22a064:	db802a17 	ldw	r14,168(sp)
  22a068:	103ede1e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  22a06c:	d9401b17 	ldw	r5,108(sp)
  22a070:	d8801c17 	ldw	r2,112(sp)
  22a074:	d811883a 	mov	r8,sp
  22a078:	29000044 	addi	r4,r5,1
  22a07c:	003e7406 	br	229a50 <_gp+0xfffeeec8>
  22a080:	00bfffc4 	movi	r2,-1
  22a084:	003c5806 	br	2291e8 <_gp+0xfffee660>
  22a088:	d811883a 	mov	r8,sp
  22a08c:	003ee806 	br	229c30 <_gp+0xfffef0a8>
  22a090:	000b883a 	mov	r5,zero
  22a094:	01000044 	movi	r4,1
  22a098:	d811883a 	mov	r8,sp
  22a09c:	003e7c06 	br	229a90 <_gp+0xfffeef08>
  22a0a0:	50800104 	addi	r2,r10,4
  22a0a4:	5480000b 	ldhu	r18,0(r10)
  22a0a8:	0027883a 	mov	r19,zero
  22a0ac:	483dcf0e 	bge	r9,zero,2297ec <_gp+0xfffeec64>
  22a0b0:	003fdf06 	br	22a030 <_gp+0xfffef4a8>
  22a0b4:	54800017 	ldw	r18,0(r10)
  22a0b8:	52800104 	addi	r10,r10,4
  22a0bc:	0027883a 	mov	r19,zero
  22a0c0:	da802215 	stw	r10,136(sp)
  22a0c4:	003d5006 	br	229608 <_gp+0xfffeea80>
  22a0c8:	50800104 	addi	r2,r10,4
  22a0cc:	5480000b 	ldhu	r18,0(r10)
  22a0d0:	0027883a 	mov	r19,zero
  22a0d4:	483f7d0e 	bge	r9,zero,229ecc <_gp+0xfffef344>
  22a0d8:	003ddc06 	br	22984c <_gp+0xfffeecc4>
  22a0dc:	d8c02215 	stw	r3,136(sp)
  22a0e0:	0039883a 	mov	fp,zero
  22a0e4:	003ddb06 	br	229854 <_gp+0xfffeeccc>
  22a0e8:	028008f4 	movhi	r10,35
  22a0ec:	5283b104 	addi	r10,r10,3780
  22a0f0:	da802415 	stw	r10,144(sp)
  22a0f4:	003e8306 	br	229b04 <_gp+0xfffeef7c>
  22a0f8:	d8801c17 	ldw	r2,112(sp)
  22a0fc:	dd002117 	ldw	r20,132(sp)
  22a100:	103eb926 	beq	r2,zero,229be8 <_gp+0xfffef060>
  22a104:	d9002017 	ldw	r4,128(sp)
  22a108:	d9801a04 	addi	r6,sp,104
  22a10c:	a00b883a 	mov	r5,r20
  22a110:	0228d800 	call	228d80 <__sprint_r.part.0>
  22a114:	003eb406 	br	229be8 <_gp+0xfffef060>
  22a118:	80c00043 	ldbu	r3,1(r16)
  22a11c:	a5000814 	ori	r20,r20,32
  22a120:	84000044 	addi	r16,r16,1
  22a124:	18c03fcc 	andi	r3,r3,255
  22a128:	18c0201c 	xori	r3,r3,128
  22a12c:	18ffe004 	addi	r3,r3,-128
  22a130:	003bb706 	br	229010 <_gp+0xfffee488>
  22a134:	a809883a 	mov	r4,r21
  22a138:	d8c02a15 	stw	r3,168(sp)
  22a13c:	da002b15 	stw	r8,172(sp)
  22a140:	0222c9c0 	call	222c9c <strlen>
  22a144:	d8c02a17 	ldw	r3,168(sp)
  22a148:	1027883a 	mov	r19,r2
  22a14c:	df001d83 	ldbu	fp,118(sp)
  22a150:	d8c02215 	stw	r3,136(sp)
  22a154:	0013883a 	mov	r9,zero
  22a158:	da002b17 	ldw	r8,172(sp)
  22a15c:	003c4d06 	br	229294 <_gp+0xfffee70c>
  22a160:	d9402117 	ldw	r5,132(sp)
  22a164:	d9002017 	ldw	r4,128(sp)
  22a168:	d9801a04 	addi	r6,sp,104
  22a16c:	da402c15 	stw	r9,176(sp)
  22a170:	0228d800 	call	228d80 <__sprint_r.part.0>
  22a174:	da402c17 	ldw	r9,176(sp)
  22a178:	103e9a1e 	bne	r2,zero,229be4 <_gp+0xfffef05c>
  22a17c:	d9401b17 	ldw	r5,108(sp)
  22a180:	d8801c17 	ldw	r2,112(sp)
  22a184:	d811883a 	mov	r8,sp
  22a188:	29000044 	addi	r4,r5,1
  22a18c:	003e4206 	br	229a98 <_gp+0xfffeef10>
  22a190:	d9401b17 	ldw	r5,108(sp)
  22a194:	010008f4 	movhi	r4,35
  22a198:	2103b504 	addi	r4,r4,3796
  22a19c:	d9002415 	stw	r4,144(sp)
  22a1a0:	29400044 	addi	r5,r5,1
  22a1a4:	003c6d06 	br	22935c <_gp+0xfffee7d4>
  22a1a8:	0039883a 	mov	fp,zero
  22a1ac:	00800084 	movi	r2,2
  22a1b0:	10803fcc 	andi	r2,r2,255
  22a1b4:	01000044 	movi	r4,1
  22a1b8:	11001e26 	beq	r2,r4,22a234 <___vfiprintf_internal_r+0x13a0>
  22a1bc:	01000084 	movi	r4,2
  22a1c0:	11001e1e 	bne	r2,r4,22a23c <___vfiprintf_internal_r+0x13a8>
  22a1c4:	1829883a 	mov	r20,r3
  22a1c8:	003eea06 	br	229d74 <_gp+0xfffef1ec>
  22a1cc:	a007883a 	mov	r3,r20
  22a1d0:	00800044 	movi	r2,1
  22a1d4:	003ff606 	br	22a1b0 <_gp+0xfffef628>
  22a1d8:	00800184 	movi	r2,6
  22a1dc:	1240012e 	bgeu	r2,r9,22a1e4 <___vfiprintf_internal_r+0x1350>
  22a1e0:	1013883a 	mov	r9,r2
  22a1e4:	4827883a 	mov	r19,r9
  22a1e8:	4825883a 	mov	r18,r9
  22a1ec:	48001516 	blt	r9,zero,22a244 <___vfiprintf_internal_r+0x13b0>
  22a1f0:	054008f4 	movhi	r21,35
  22a1f4:	d8c02215 	stw	r3,136(sp)
  22a1f8:	ad435604 	addi	r21,r21,3416
  22a1fc:	003d1406 	br	229650 <_gp+0xfffeeac8>
  22a200:	028008f4 	movhi	r10,35
  22a204:	5283b104 	addi	r10,r10,3780
  22a208:	da802415 	stw	r10,144(sp)
  22a20c:	200d883a 	mov	r6,r4
  22a210:	003c9106 	br	229458 <_gp+0xfffee8d0>
  22a214:	5021883a 	mov	r16,r10
  22a218:	0013883a 	mov	r9,zero
  22a21c:	003b7d06 	br	229014 <_gp+0xfffee48c>
  22a220:	4827883a 	mov	r19,r9
  22a224:	df001d83 	ldbu	fp,118(sp)
  22a228:	d8c02215 	stw	r3,136(sp)
  22a22c:	0013883a 	mov	r9,zero
  22a230:	003c1806 	br	229294 <_gp+0xfffee70c>
  22a234:	1829883a 	mov	r20,r3
  22a238:	003d1806 	br	22969c <_gp+0xfffeeb14>
  22a23c:	1829883a 	mov	r20,r3
  22a240:	003ccd06 	br	229578 <_gp+0xfffee9f0>
  22a244:	0025883a 	mov	r18,zero
  22a248:	003fe906 	br	22a1f0 <_gp+0xfffef668>
  22a24c:	d8802217 	ldw	r2,136(sp)
  22a250:	80c00043 	ldbu	r3,1(r16)
  22a254:	5021883a 	mov	r16,r10
  22a258:	12400017 	ldw	r9,0(r2)
  22a25c:	10800104 	addi	r2,r2,4
  22a260:	d8802215 	stw	r2,136(sp)
  22a264:	483faf0e 	bge	r9,zero,22a124 <_gp+0xfffef59c>
  22a268:	18c03fcc 	andi	r3,r3,255
  22a26c:	18c0201c 	xori	r3,r3,128
  22a270:	027fffc4 	movi	r9,-1
  22a274:	18ffe004 	addi	r3,r3,-128
  22a278:	003b6506 	br	229010 <_gp+0xfffee488>
  22a27c:	d9c01d85 	stb	r7,118(sp)
  22a280:	003ca006 	br	229504 <_gp+0xfffee97c>
  22a284:	d9c01d85 	stb	r7,118(sp)
  22a288:	003cad06 	br	229540 <_gp+0xfffee9b8>
  22a28c:	d9c01d85 	stb	r7,118(sp)
  22a290:	003d7d06 	br	229888 <_gp+0xfffeed00>
  22a294:	d9c01d85 	stb	r7,118(sp)
  22a298:	003d5f06 	br	229818 <_gp+0xfffeec90>
  22a29c:	a080004c 	andi	r2,r20,1
  22a2a0:	0039883a 	mov	fp,zero
  22a2a4:	10000526 	beq	r2,zero,22a2bc <___vfiprintf_internal_r+0x1428>
  22a2a8:	00800c04 	movi	r2,48
  22a2ac:	d88019c5 	stb	r2,103(sp)
  22a2b0:	dcc02717 	ldw	r19,156(sp)
  22a2b4:	dd4019c4 	addi	r21,sp,103
  22a2b8:	003bf606 	br	229294 <_gp+0xfffee70c>
  22a2bc:	0027883a 	mov	r19,zero
  22a2c0:	dd401a04 	addi	r21,sp,104
  22a2c4:	003bf306 	br	229294 <_gp+0xfffee70c>
  22a2c8:	d9c01d85 	stb	r7,118(sp)
  22a2cc:	003dc806 	br	2299f0 <_gp+0xfffeee68>
  22a2d0:	d9c01d85 	stb	r7,118(sp)
  22a2d4:	003d3a06 	br	2297c0 <_gp+0xfffeec38>
  22a2d8:	d9c01d85 	stb	r7,118(sp)
  22a2dc:	003d2a06 	br	229788 <_gp+0xfffeec00>
  22a2e0:	d9c01d85 	stb	r7,118(sp)
  22a2e4:	003cde06 	br	229660 <_gp+0xfffeead8>
  22a2e8:	d9c01d85 	stb	r7,118(sp)
  22a2ec:	003cbc06 	br	2295e0 <_gp+0xfffeea58>

0022a2f0 <__vfiprintf_internal>:
  22a2f0:	008008f4 	movhi	r2,35
  22a2f4:	108ae304 	addi	r2,r2,11148
  22a2f8:	300f883a 	mov	r7,r6
  22a2fc:	280d883a 	mov	r6,r5
  22a300:	200b883a 	mov	r5,r4
  22a304:	11000017 	ldw	r4,0(r2)
  22a308:	0228e941 	jmpi	228e94 <___vfiprintf_internal_r>

0022a30c <__sbprintf>:
  22a30c:	2880030b 	ldhu	r2,12(r5)
  22a310:	2ac01917 	ldw	r11,100(r5)
  22a314:	2a80038b 	ldhu	r10,14(r5)
  22a318:	2a400717 	ldw	r9,28(r5)
  22a31c:	2a000917 	ldw	r8,36(r5)
  22a320:	defee204 	addi	sp,sp,-1144
  22a324:	00c10004 	movi	r3,1024
  22a328:	dc011a15 	stw	r16,1128(sp)
  22a32c:	10bfff4c 	andi	r2,r2,65533
  22a330:	2821883a 	mov	r16,r5
  22a334:	d8cb883a 	add	r5,sp,r3
  22a338:	dc811c15 	stw	r18,1136(sp)
  22a33c:	dc411b15 	stw	r17,1132(sp)
  22a340:	dfc11d15 	stw	ra,1140(sp)
  22a344:	2025883a 	mov	r18,r4
  22a348:	d881030d 	sth	r2,1036(sp)
  22a34c:	dac11915 	stw	r11,1124(sp)
  22a350:	da81038d 	sth	r10,1038(sp)
  22a354:	da410715 	stw	r9,1052(sp)
  22a358:	da010915 	stw	r8,1060(sp)
  22a35c:	dec10015 	stw	sp,1024(sp)
  22a360:	dec10415 	stw	sp,1040(sp)
  22a364:	d8c10215 	stw	r3,1032(sp)
  22a368:	d8c10515 	stw	r3,1044(sp)
  22a36c:	d8010615 	stw	zero,1048(sp)
  22a370:	0228e940 	call	228e94 <___vfiprintf_internal_r>
  22a374:	1023883a 	mov	r17,r2
  22a378:	10000416 	blt	r2,zero,22a38c <__sbprintf+0x80>
  22a37c:	d9410004 	addi	r5,sp,1024
  22a380:	9009883a 	mov	r4,r18
  22a384:	0220c700 	call	220c70 <_fflush_r>
  22a388:	10000d1e 	bne	r2,zero,22a3c0 <__sbprintf+0xb4>
  22a38c:	d881030b 	ldhu	r2,1036(sp)
  22a390:	1080100c 	andi	r2,r2,64
  22a394:	10000326 	beq	r2,zero,22a3a4 <__sbprintf+0x98>
  22a398:	8080030b 	ldhu	r2,12(r16)
  22a39c:	10801014 	ori	r2,r2,64
  22a3a0:	8080030d 	sth	r2,12(r16)
  22a3a4:	8805883a 	mov	r2,r17
  22a3a8:	dfc11d17 	ldw	ra,1140(sp)
  22a3ac:	dc811c17 	ldw	r18,1136(sp)
  22a3b0:	dc411b17 	ldw	r17,1132(sp)
  22a3b4:	dc011a17 	ldw	r16,1128(sp)
  22a3b8:	dec11e04 	addi	sp,sp,1144
  22a3bc:	f800283a 	ret
  22a3c0:	047fffc4 	movi	r17,-1
  22a3c4:	003ff106 	br	22a38c <_gp+0xfffef804>

0022a3c8 <_calloc_r>:
  22a3c8:	298b383a 	mul	r5,r5,r6
  22a3cc:	defffe04 	addi	sp,sp,-8
  22a3d0:	dfc00115 	stw	ra,4(sp)
  22a3d4:	dc000015 	stw	r16,0(sp)
  22a3d8:	0221eb40 	call	221eb4 <_malloc_r>
  22a3dc:	10002926 	beq	r2,zero,22a484 <_calloc_r+0xbc>
  22a3e0:	11bfff17 	ldw	r6,-4(r2)
  22a3e4:	1021883a 	mov	r16,r2
  22a3e8:	00bfff04 	movi	r2,-4
  22a3ec:	308c703a 	and	r6,r6,r2
  22a3f0:	00c00904 	movi	r3,36
  22a3f4:	308d883a 	add	r6,r6,r2
  22a3f8:	19801636 	bltu	r3,r6,22a454 <_calloc_r+0x8c>
  22a3fc:	008004c4 	movi	r2,19
  22a400:	11800b2e 	bgeu	r2,r6,22a430 <_calloc_r+0x68>
  22a404:	80000015 	stw	zero,0(r16)
  22a408:	80000115 	stw	zero,4(r16)
  22a40c:	008006c4 	movi	r2,27
  22a410:	11801a2e 	bgeu	r2,r6,22a47c <_calloc_r+0xb4>
  22a414:	80000215 	stw	zero,8(r16)
  22a418:	80000315 	stw	zero,12(r16)
  22a41c:	30c0151e 	bne	r6,r3,22a474 <_calloc_r+0xac>
  22a420:	80000415 	stw	zero,16(r16)
  22a424:	80800604 	addi	r2,r16,24
  22a428:	80000515 	stw	zero,20(r16)
  22a42c:	00000106 	br	22a434 <_calloc_r+0x6c>
  22a430:	8005883a 	mov	r2,r16
  22a434:	10000015 	stw	zero,0(r2)
  22a438:	10000115 	stw	zero,4(r2)
  22a43c:	10000215 	stw	zero,8(r2)
  22a440:	8005883a 	mov	r2,r16
  22a444:	dfc00117 	ldw	ra,4(sp)
  22a448:	dc000017 	ldw	r16,0(sp)
  22a44c:	dec00204 	addi	sp,sp,8
  22a450:	f800283a 	ret
  22a454:	000b883a 	mov	r5,zero
  22a458:	8009883a 	mov	r4,r16
  22a45c:	02226c00 	call	2226c0 <memset>
  22a460:	8005883a 	mov	r2,r16
  22a464:	dfc00117 	ldw	ra,4(sp)
  22a468:	dc000017 	ldw	r16,0(sp)
  22a46c:	dec00204 	addi	sp,sp,8
  22a470:	f800283a 	ret
  22a474:	80800404 	addi	r2,r16,16
  22a478:	003fee06 	br	22a434 <_gp+0xfffef8ac>
  22a47c:	80800204 	addi	r2,r16,8
  22a480:	003fec06 	br	22a434 <_gp+0xfffef8ac>
  22a484:	0005883a 	mov	r2,zero
  22a488:	003fee06 	br	22a444 <_gp+0xfffef8bc>

0022a48c <__fputwc>:
  22a48c:	defff804 	addi	sp,sp,-32
  22a490:	dcc00415 	stw	r19,16(sp)
  22a494:	dc800315 	stw	r18,12(sp)
  22a498:	dc000115 	stw	r16,4(sp)
  22a49c:	dfc00715 	stw	ra,28(sp)
  22a4a0:	dd400615 	stw	r21,24(sp)
  22a4a4:	dd000515 	stw	r20,20(sp)
  22a4a8:	dc400215 	stw	r17,8(sp)
  22a4ac:	2027883a 	mov	r19,r4
  22a4b0:	2825883a 	mov	r18,r5
  22a4b4:	3021883a 	mov	r16,r6
  22a4b8:	02272340 	call	227234 <__locale_mb_cur_max>
  22a4bc:	00c00044 	movi	r3,1
  22a4c0:	10c03e26 	beq	r2,r3,22a5bc <__fputwc+0x130>
  22a4c4:	81c01704 	addi	r7,r16,92
  22a4c8:	900d883a 	mov	r6,r18
  22a4cc:	d80b883a 	mov	r5,sp
  22a4d0:	9809883a 	mov	r4,r19
  22a4d4:	022a7ec0 	call	22a7ec <_wcrtomb_r>
  22a4d8:	1029883a 	mov	r20,r2
  22a4dc:	00bfffc4 	movi	r2,-1
  22a4e0:	a0802026 	beq	r20,r2,22a564 <__fputwc+0xd8>
  22a4e4:	d9400003 	ldbu	r5,0(sp)
  22a4e8:	a0001c26 	beq	r20,zero,22a55c <__fputwc+0xd0>
  22a4ec:	0023883a 	mov	r17,zero
  22a4f0:	05400284 	movi	r21,10
  22a4f4:	00000906 	br	22a51c <__fputwc+0x90>
  22a4f8:	80800017 	ldw	r2,0(r16)
  22a4fc:	11400005 	stb	r5,0(r2)
  22a500:	80c00017 	ldw	r3,0(r16)
  22a504:	18c00044 	addi	r3,r3,1
  22a508:	80c00015 	stw	r3,0(r16)
  22a50c:	8c400044 	addi	r17,r17,1
  22a510:	dc45883a 	add	r2,sp,r17
  22a514:	8d00112e 	bgeu	r17,r20,22a55c <__fputwc+0xd0>
  22a518:	11400003 	ldbu	r5,0(r2)
  22a51c:	80c00217 	ldw	r3,8(r16)
  22a520:	18ffffc4 	addi	r3,r3,-1
  22a524:	80c00215 	stw	r3,8(r16)
  22a528:	183ff30e 	bge	r3,zero,22a4f8 <_gp+0xfffef970>
  22a52c:	80800617 	ldw	r2,24(r16)
  22a530:	18801916 	blt	r3,r2,22a598 <__fputwc+0x10c>
  22a534:	80800017 	ldw	r2,0(r16)
  22a538:	11400005 	stb	r5,0(r2)
  22a53c:	80800017 	ldw	r2,0(r16)
  22a540:	10c00003 	ldbu	r3,0(r2)
  22a544:	10800044 	addi	r2,r2,1
  22a548:	1d402326 	beq	r3,r21,22a5d8 <__fputwc+0x14c>
  22a54c:	80800015 	stw	r2,0(r16)
  22a550:	8c400044 	addi	r17,r17,1
  22a554:	dc45883a 	add	r2,sp,r17
  22a558:	8d3fef36 	bltu	r17,r20,22a518 <_gp+0xfffef990>
  22a55c:	9005883a 	mov	r2,r18
  22a560:	00000406 	br	22a574 <__fputwc+0xe8>
  22a564:	80c0030b 	ldhu	r3,12(r16)
  22a568:	a005883a 	mov	r2,r20
  22a56c:	18c01014 	ori	r3,r3,64
  22a570:	80c0030d 	sth	r3,12(r16)
  22a574:	dfc00717 	ldw	ra,28(sp)
  22a578:	dd400617 	ldw	r21,24(sp)
  22a57c:	dd000517 	ldw	r20,20(sp)
  22a580:	dcc00417 	ldw	r19,16(sp)
  22a584:	dc800317 	ldw	r18,12(sp)
  22a588:	dc400217 	ldw	r17,8(sp)
  22a58c:	dc000117 	ldw	r16,4(sp)
  22a590:	dec00804 	addi	sp,sp,32
  22a594:	f800283a 	ret
  22a598:	800d883a 	mov	r6,r16
  22a59c:	29403fcc 	andi	r5,r5,255
  22a5a0:	9809883a 	mov	r4,r19
  22a5a4:	022a6940 	call	22a694 <__swbuf_r>
  22a5a8:	10bfffe0 	cmpeqi	r2,r2,-1
  22a5ac:	10803fcc 	andi	r2,r2,255
  22a5b0:	103fd626 	beq	r2,zero,22a50c <_gp+0xfffef984>
  22a5b4:	00bfffc4 	movi	r2,-1
  22a5b8:	003fee06 	br	22a574 <_gp+0xfffef9ec>
  22a5bc:	90ffffc4 	addi	r3,r18,-1
  22a5c0:	01003f84 	movi	r4,254
  22a5c4:	20ffbf36 	bltu	r4,r3,22a4c4 <_gp+0xfffef93c>
  22a5c8:	900b883a 	mov	r5,r18
  22a5cc:	dc800005 	stb	r18,0(sp)
  22a5d0:	1029883a 	mov	r20,r2
  22a5d4:	003fc506 	br	22a4ec <_gp+0xfffef964>
  22a5d8:	800d883a 	mov	r6,r16
  22a5dc:	a80b883a 	mov	r5,r21
  22a5e0:	9809883a 	mov	r4,r19
  22a5e4:	022a6940 	call	22a694 <__swbuf_r>
  22a5e8:	10bfffe0 	cmpeqi	r2,r2,-1
  22a5ec:	003fef06 	br	22a5ac <_gp+0xfffefa24>

0022a5f0 <_fputwc_r>:
  22a5f0:	3080030b 	ldhu	r2,12(r6)
  22a5f4:	10c8000c 	andi	r3,r2,8192
  22a5f8:	1800051e 	bne	r3,zero,22a610 <_fputwc_r+0x20>
  22a5fc:	30c01917 	ldw	r3,100(r6)
  22a600:	10880014 	ori	r2,r2,8192
  22a604:	3080030d 	sth	r2,12(r6)
  22a608:	18880014 	ori	r2,r3,8192
  22a60c:	30801915 	stw	r2,100(r6)
  22a610:	022a48c1 	jmpi	22a48c <__fputwc>

0022a614 <fputwc>:
  22a614:	008008f4 	movhi	r2,35
  22a618:	defffc04 	addi	sp,sp,-16
  22a61c:	108ae304 	addi	r2,r2,11148
  22a620:	dc000115 	stw	r16,4(sp)
  22a624:	14000017 	ldw	r16,0(r2)
  22a628:	dc400215 	stw	r17,8(sp)
  22a62c:	dfc00315 	stw	ra,12(sp)
  22a630:	2023883a 	mov	r17,r4
  22a634:	80000226 	beq	r16,zero,22a640 <fputwc+0x2c>
  22a638:	80800e17 	ldw	r2,56(r16)
  22a63c:	10001026 	beq	r2,zero,22a680 <fputwc+0x6c>
  22a640:	2880030b 	ldhu	r2,12(r5)
  22a644:	10c8000c 	andi	r3,r2,8192
  22a648:	1800051e 	bne	r3,zero,22a660 <fputwc+0x4c>
  22a64c:	28c01917 	ldw	r3,100(r5)
  22a650:	10880014 	ori	r2,r2,8192
  22a654:	2880030d 	sth	r2,12(r5)
  22a658:	18880014 	ori	r2,r3,8192
  22a65c:	28801915 	stw	r2,100(r5)
  22a660:	280d883a 	mov	r6,r5
  22a664:	8009883a 	mov	r4,r16
  22a668:	880b883a 	mov	r5,r17
  22a66c:	dfc00317 	ldw	ra,12(sp)
  22a670:	dc400217 	ldw	r17,8(sp)
  22a674:	dc000117 	ldw	r16,4(sp)
  22a678:	dec00404 	addi	sp,sp,16
  22a67c:	022a48c1 	jmpi	22a48c <__fputwc>
  22a680:	8009883a 	mov	r4,r16
  22a684:	d9400015 	stw	r5,0(sp)
  22a688:	022104c0 	call	22104c <__sinit>
  22a68c:	d9400017 	ldw	r5,0(sp)
  22a690:	003feb06 	br	22a640 <_gp+0xfffefab8>

0022a694 <__swbuf_r>:
  22a694:	defffb04 	addi	sp,sp,-20
  22a698:	dcc00315 	stw	r19,12(sp)
  22a69c:	dc800215 	stw	r18,8(sp)
  22a6a0:	dc000015 	stw	r16,0(sp)
  22a6a4:	dfc00415 	stw	ra,16(sp)
  22a6a8:	dc400115 	stw	r17,4(sp)
  22a6ac:	2025883a 	mov	r18,r4
  22a6b0:	2827883a 	mov	r19,r5
  22a6b4:	3021883a 	mov	r16,r6
  22a6b8:	20000226 	beq	r4,zero,22a6c4 <__swbuf_r+0x30>
  22a6bc:	20800e17 	ldw	r2,56(r4)
  22a6c0:	10004226 	beq	r2,zero,22a7cc <__swbuf_r+0x138>
  22a6c4:	80800617 	ldw	r2,24(r16)
  22a6c8:	8100030b 	ldhu	r4,12(r16)
  22a6cc:	80800215 	stw	r2,8(r16)
  22a6d0:	2080020c 	andi	r2,r4,8
  22a6d4:	10003626 	beq	r2,zero,22a7b0 <__swbuf_r+0x11c>
  22a6d8:	80c00417 	ldw	r3,16(r16)
  22a6dc:	18003426 	beq	r3,zero,22a7b0 <__swbuf_r+0x11c>
  22a6e0:	2088000c 	andi	r2,r4,8192
  22a6e4:	9c403fcc 	andi	r17,r19,255
  22a6e8:	10001a26 	beq	r2,zero,22a754 <__swbuf_r+0xc0>
  22a6ec:	80800017 	ldw	r2,0(r16)
  22a6f0:	81000517 	ldw	r4,20(r16)
  22a6f4:	10c7c83a 	sub	r3,r2,r3
  22a6f8:	1900200e 	bge	r3,r4,22a77c <__swbuf_r+0xe8>
  22a6fc:	18c00044 	addi	r3,r3,1
  22a700:	81000217 	ldw	r4,8(r16)
  22a704:	11400044 	addi	r5,r2,1
  22a708:	81400015 	stw	r5,0(r16)
  22a70c:	213fffc4 	addi	r4,r4,-1
  22a710:	81000215 	stw	r4,8(r16)
  22a714:	14c00005 	stb	r19,0(r2)
  22a718:	80800517 	ldw	r2,20(r16)
  22a71c:	10c01e26 	beq	r2,r3,22a798 <__swbuf_r+0x104>
  22a720:	8080030b 	ldhu	r2,12(r16)
  22a724:	1080004c 	andi	r2,r2,1
  22a728:	10000226 	beq	r2,zero,22a734 <__swbuf_r+0xa0>
  22a72c:	00800284 	movi	r2,10
  22a730:	88801926 	beq	r17,r2,22a798 <__swbuf_r+0x104>
  22a734:	8805883a 	mov	r2,r17
  22a738:	dfc00417 	ldw	ra,16(sp)
  22a73c:	dcc00317 	ldw	r19,12(sp)
  22a740:	dc800217 	ldw	r18,8(sp)
  22a744:	dc400117 	ldw	r17,4(sp)
  22a748:	dc000017 	ldw	r16,0(sp)
  22a74c:	dec00504 	addi	sp,sp,20
  22a750:	f800283a 	ret
  22a754:	81401917 	ldw	r5,100(r16)
  22a758:	00b7ffc4 	movi	r2,-8193
  22a75c:	21080014 	ori	r4,r4,8192
  22a760:	2884703a 	and	r2,r5,r2
  22a764:	80801915 	stw	r2,100(r16)
  22a768:	80800017 	ldw	r2,0(r16)
  22a76c:	8100030d 	sth	r4,12(r16)
  22a770:	81000517 	ldw	r4,20(r16)
  22a774:	10c7c83a 	sub	r3,r2,r3
  22a778:	193fe016 	blt	r3,r4,22a6fc <_gp+0xfffefb74>
  22a77c:	800b883a 	mov	r5,r16
  22a780:	9009883a 	mov	r4,r18
  22a784:	0220c700 	call	220c70 <_fflush_r>
  22a788:	1000071e 	bne	r2,zero,22a7a8 <__swbuf_r+0x114>
  22a78c:	80800017 	ldw	r2,0(r16)
  22a790:	00c00044 	movi	r3,1
  22a794:	003fda06 	br	22a700 <_gp+0xfffefb78>
  22a798:	800b883a 	mov	r5,r16
  22a79c:	9009883a 	mov	r4,r18
  22a7a0:	0220c700 	call	220c70 <_fflush_r>
  22a7a4:	103fe326 	beq	r2,zero,22a734 <_gp+0xfffefbac>
  22a7a8:	00bfffc4 	movi	r2,-1
  22a7ac:	003fe206 	br	22a738 <_gp+0xfffefbb0>
  22a7b0:	800b883a 	mov	r5,r16
  22a7b4:	9009883a 	mov	r4,r18
  22a7b8:	02251c00 	call	2251c0 <__swsetup_r>
  22a7bc:	103ffa1e 	bne	r2,zero,22a7a8 <_gp+0xfffefc20>
  22a7c0:	8100030b 	ldhu	r4,12(r16)
  22a7c4:	80c00417 	ldw	r3,16(r16)
  22a7c8:	003fc506 	br	22a6e0 <_gp+0xfffefb58>
  22a7cc:	022104c0 	call	22104c <__sinit>
  22a7d0:	003fbc06 	br	22a6c4 <_gp+0xfffefb3c>

0022a7d4 <__swbuf>:
  22a7d4:	008008f4 	movhi	r2,35
  22a7d8:	108ae304 	addi	r2,r2,11148
  22a7dc:	280d883a 	mov	r6,r5
  22a7e0:	200b883a 	mov	r5,r4
  22a7e4:	11000017 	ldw	r4,0(r2)
  22a7e8:	022a6941 	jmpi	22a694 <__swbuf_r>

0022a7ec <_wcrtomb_r>:
  22a7ec:	defff604 	addi	sp,sp,-40
  22a7f0:	008008f4 	movhi	r2,35
  22a7f4:	dc800815 	stw	r18,32(sp)
  22a7f8:	dc400715 	stw	r17,28(sp)
  22a7fc:	dc000615 	stw	r16,24(sp)
  22a800:	108ae704 	addi	r2,r2,11164
  22a804:	dfc00915 	stw	ra,36(sp)
  22a808:	2021883a 	mov	r16,r4
  22a80c:	3823883a 	mov	r17,r7
  22a810:	14800017 	ldw	r18,0(r2)
  22a814:	28001426 	beq	r5,zero,22a868 <_wcrtomb_r+0x7c>
  22a818:	d9400415 	stw	r5,16(sp)
  22a81c:	d9800515 	stw	r6,20(sp)
  22a820:	02272280 	call	227228 <__locale_charset>
  22a824:	d9800517 	ldw	r6,20(sp)
  22a828:	d9400417 	ldw	r5,16(sp)
  22a82c:	100f883a 	mov	r7,r2
  22a830:	dc400015 	stw	r17,0(sp)
  22a834:	8009883a 	mov	r4,r16
  22a838:	903ee83a 	callr	r18
  22a83c:	00ffffc4 	movi	r3,-1
  22a840:	10c0031e 	bne	r2,r3,22a850 <_wcrtomb_r+0x64>
  22a844:	88000015 	stw	zero,0(r17)
  22a848:	00c02284 	movi	r3,138
  22a84c:	80c00015 	stw	r3,0(r16)
  22a850:	dfc00917 	ldw	ra,36(sp)
  22a854:	dc800817 	ldw	r18,32(sp)
  22a858:	dc400717 	ldw	r17,28(sp)
  22a85c:	dc000617 	ldw	r16,24(sp)
  22a860:	dec00a04 	addi	sp,sp,40
  22a864:	f800283a 	ret
  22a868:	02272280 	call	227228 <__locale_charset>
  22a86c:	100f883a 	mov	r7,r2
  22a870:	dc400015 	stw	r17,0(sp)
  22a874:	000d883a 	mov	r6,zero
  22a878:	d9400104 	addi	r5,sp,4
  22a87c:	8009883a 	mov	r4,r16
  22a880:	903ee83a 	callr	r18
  22a884:	003fed06 	br	22a83c <_gp+0xfffefcb4>

0022a888 <wcrtomb>:
  22a888:	defff604 	addi	sp,sp,-40
  22a88c:	008008f4 	movhi	r2,35
  22a890:	dc800615 	stw	r18,24(sp)
  22a894:	dc400515 	stw	r17,20(sp)
  22a898:	108ae304 	addi	r2,r2,11148
  22a89c:	dfc00915 	stw	ra,36(sp)
  22a8a0:	dd000815 	stw	r20,32(sp)
  22a8a4:	dcc00715 	stw	r19,28(sp)
  22a8a8:	dc000415 	stw	r16,16(sp)
  22a8ac:	3025883a 	mov	r18,r6
  22a8b0:	14400017 	ldw	r17,0(r2)
  22a8b4:	20001926 	beq	r4,zero,22a91c <wcrtomb+0x94>
  22a8b8:	008008f4 	movhi	r2,35
  22a8bc:	108ae704 	addi	r2,r2,11164
  22a8c0:	15000017 	ldw	r20,0(r2)
  22a8c4:	2021883a 	mov	r16,r4
  22a8c8:	2827883a 	mov	r19,r5
  22a8cc:	02272280 	call	227228 <__locale_charset>
  22a8d0:	100f883a 	mov	r7,r2
  22a8d4:	dc800015 	stw	r18,0(sp)
  22a8d8:	980d883a 	mov	r6,r19
  22a8dc:	800b883a 	mov	r5,r16
  22a8e0:	8809883a 	mov	r4,r17
  22a8e4:	a03ee83a 	callr	r20
  22a8e8:	00ffffc4 	movi	r3,-1
  22a8ec:	10c0031e 	bne	r2,r3,22a8fc <wcrtomb+0x74>
  22a8f0:	90000015 	stw	zero,0(r18)
  22a8f4:	00c02284 	movi	r3,138
  22a8f8:	88c00015 	stw	r3,0(r17)
  22a8fc:	dfc00917 	ldw	ra,36(sp)
  22a900:	dd000817 	ldw	r20,32(sp)
  22a904:	dcc00717 	ldw	r19,28(sp)
  22a908:	dc800617 	ldw	r18,24(sp)
  22a90c:	dc400517 	ldw	r17,20(sp)
  22a910:	dc000417 	ldw	r16,16(sp)
  22a914:	dec00a04 	addi	sp,sp,40
  22a918:	f800283a 	ret
  22a91c:	008008f4 	movhi	r2,35
  22a920:	108ae704 	addi	r2,r2,11164
  22a924:	14000017 	ldw	r16,0(r2)
  22a928:	02272280 	call	227228 <__locale_charset>
  22a92c:	100f883a 	mov	r7,r2
  22a930:	dc800015 	stw	r18,0(sp)
  22a934:	000d883a 	mov	r6,zero
  22a938:	d9400104 	addi	r5,sp,4
  22a93c:	8809883a 	mov	r4,r17
  22a940:	803ee83a 	callr	r16
  22a944:	003fe806 	br	22a8e8 <_gp+0xfffefd60>

0022a948 <__ascii_wctomb>:
  22a948:	28000526 	beq	r5,zero,22a960 <__ascii_wctomb+0x18>
  22a94c:	00803fc4 	movi	r2,255
  22a950:	11800536 	bltu	r2,r6,22a968 <__ascii_wctomb+0x20>
  22a954:	29800005 	stb	r6,0(r5)
  22a958:	00800044 	movi	r2,1
  22a95c:	f800283a 	ret
  22a960:	0005883a 	mov	r2,zero
  22a964:	f800283a 	ret
  22a968:	00802284 	movi	r2,138
  22a96c:	20800015 	stw	r2,0(r4)
  22a970:	00bfffc4 	movi	r2,-1
  22a974:	f800283a 	ret

0022a978 <_wctomb_r>:
  22a978:	008008f4 	movhi	r2,35
  22a97c:	defff904 	addi	sp,sp,-28
  22a980:	108ae704 	addi	r2,r2,11164
  22a984:	dfc00615 	stw	ra,24(sp)
  22a988:	dc400515 	stw	r17,20(sp)
  22a98c:	dc000415 	stw	r16,16(sp)
  22a990:	3823883a 	mov	r17,r7
  22a994:	14000017 	ldw	r16,0(r2)
  22a998:	d9000115 	stw	r4,4(sp)
  22a99c:	d9400215 	stw	r5,8(sp)
  22a9a0:	d9800315 	stw	r6,12(sp)
  22a9a4:	02272280 	call	227228 <__locale_charset>
  22a9a8:	d9800317 	ldw	r6,12(sp)
  22a9ac:	d9400217 	ldw	r5,8(sp)
  22a9b0:	d9000117 	ldw	r4,4(sp)
  22a9b4:	100f883a 	mov	r7,r2
  22a9b8:	dc400015 	stw	r17,0(sp)
  22a9bc:	803ee83a 	callr	r16
  22a9c0:	dfc00617 	ldw	ra,24(sp)
  22a9c4:	dc400517 	ldw	r17,20(sp)
  22a9c8:	dc000417 	ldw	r16,16(sp)
  22a9cc:	dec00704 	addi	sp,sp,28
  22a9d0:	f800283a 	ret

0022a9d4 <__udivdi3>:
  22a9d4:	defff504 	addi	sp,sp,-44
  22a9d8:	dcc00415 	stw	r19,16(sp)
  22a9dc:	dc000115 	stw	r16,4(sp)
  22a9e0:	dfc00a15 	stw	ra,40(sp)
  22a9e4:	df000915 	stw	fp,36(sp)
  22a9e8:	ddc00815 	stw	r23,32(sp)
  22a9ec:	dd800715 	stw	r22,28(sp)
  22a9f0:	dd400615 	stw	r21,24(sp)
  22a9f4:	dd000515 	stw	r20,20(sp)
  22a9f8:	dc800315 	stw	r18,12(sp)
  22a9fc:	dc400215 	stw	r17,8(sp)
  22aa00:	2027883a 	mov	r19,r4
  22aa04:	2821883a 	mov	r16,r5
  22aa08:	3800411e 	bne	r7,zero,22ab10 <__udivdi3+0x13c>
  22aa0c:	3023883a 	mov	r17,r6
  22aa10:	2025883a 	mov	r18,r4
  22aa14:	2980522e 	bgeu	r5,r6,22ab60 <__udivdi3+0x18c>
  22aa18:	00bfffd4 	movui	r2,65535
  22aa1c:	282d883a 	mov	r22,r5
  22aa20:	1180a836 	bltu	r2,r6,22acc4 <__udivdi3+0x2f0>
  22aa24:	00803fc4 	movi	r2,255
  22aa28:	1185803a 	cmpltu	r2,r2,r6
  22aa2c:	100490fa 	slli	r2,r2,3
  22aa30:	3086d83a 	srl	r3,r6,r2
  22aa34:	010008f4 	movhi	r4,35
  22aa38:	2103b904 	addi	r4,r4,3812
  22aa3c:	20c7883a 	add	r3,r4,r3
  22aa40:	18c00003 	ldbu	r3,0(r3)
  22aa44:	1885883a 	add	r2,r3,r2
  22aa48:	00c00804 	movi	r3,32
  22aa4c:	1887c83a 	sub	r3,r3,r2
  22aa50:	18000526 	beq	r3,zero,22aa68 <__udivdi3+0x94>
  22aa54:	80e0983a 	sll	r16,r16,r3
  22aa58:	9884d83a 	srl	r2,r19,r2
  22aa5c:	30e2983a 	sll	r17,r6,r3
  22aa60:	98e4983a 	sll	r18,r19,r3
  22aa64:	142cb03a 	or	r22,r2,r16
  22aa68:	882ad43a 	srli	r21,r17,16
  22aa6c:	b009883a 	mov	r4,r22
  22aa70:	8d3fffcc 	andi	r20,r17,65535
  22aa74:	a80b883a 	mov	r5,r21
  22aa78:	022b5e00 	call	22b5e0 <__umodsi3>
  22aa7c:	b009883a 	mov	r4,r22
  22aa80:	a80b883a 	mov	r5,r21
  22aa84:	1027883a 	mov	r19,r2
  22aa88:	022b57c0 	call	22b57c <__udivsi3>
  22aa8c:	102d883a 	mov	r22,r2
  22aa90:	9826943a 	slli	r19,r19,16
  22aa94:	9004d43a 	srli	r2,r18,16
  22aa98:	a5a1383a 	mul	r16,r20,r22
  22aa9c:	14c4b03a 	or	r2,r2,r19
  22aaa0:	1400052e 	bgeu	r2,r16,22aab8 <__udivdi3+0xe4>
  22aaa4:	1445883a 	add	r2,r2,r17
  22aaa8:	b0ffffc4 	addi	r3,r22,-1
  22aaac:	14400136 	bltu	r2,r17,22aab4 <__udivdi3+0xe0>
  22aab0:	14012336 	bltu	r2,r16,22af40 <__udivdi3+0x56c>
  22aab4:	182d883a 	mov	r22,r3
  22aab8:	1421c83a 	sub	r16,r2,r16
  22aabc:	a80b883a 	mov	r5,r21
  22aac0:	8009883a 	mov	r4,r16
  22aac4:	022b5e00 	call	22b5e0 <__umodsi3>
  22aac8:	1027883a 	mov	r19,r2
  22aacc:	a80b883a 	mov	r5,r21
  22aad0:	8009883a 	mov	r4,r16
  22aad4:	022b57c0 	call	22b57c <__udivsi3>
  22aad8:	9826943a 	slli	r19,r19,16
  22aadc:	a0a9383a 	mul	r20,r20,r2
  22aae0:	94bfffcc 	andi	r18,r18,65535
  22aae4:	94e4b03a 	or	r18,r18,r19
  22aae8:	9500052e 	bgeu	r18,r20,22ab00 <__udivdi3+0x12c>
  22aaec:	8ca5883a 	add	r18,r17,r18
  22aaf0:	10ffffc4 	addi	r3,r2,-1
  22aaf4:	9440f136 	bltu	r18,r17,22aebc <__udivdi3+0x4e8>
  22aaf8:	9500f02e 	bgeu	r18,r20,22aebc <__udivdi3+0x4e8>
  22aafc:	10bfff84 	addi	r2,r2,-2
  22ab00:	b00c943a 	slli	r6,r22,16
  22ab04:	0007883a 	mov	r3,zero
  22ab08:	3084b03a 	or	r2,r6,r2
  22ab0c:	00005906 	br	22ac74 <__udivdi3+0x2a0>
  22ab10:	29c05636 	bltu	r5,r7,22ac6c <__udivdi3+0x298>
  22ab14:	00bfffd4 	movui	r2,65535
  22ab18:	11c0622e 	bgeu	r2,r7,22aca4 <__udivdi3+0x2d0>
  22ab1c:	00804034 	movhi	r2,256
  22ab20:	10bfffc4 	addi	r2,r2,-1
  22ab24:	11c0ee36 	bltu	r2,r7,22aee0 <__udivdi3+0x50c>
  22ab28:	00800404 	movi	r2,16
  22ab2c:	3886d83a 	srl	r3,r7,r2
  22ab30:	010008f4 	movhi	r4,35
  22ab34:	2103b904 	addi	r4,r4,3812
  22ab38:	20c7883a 	add	r3,r4,r3
  22ab3c:	18c00003 	ldbu	r3,0(r3)
  22ab40:	05400804 	movi	r21,32
  22ab44:	1885883a 	add	r2,r3,r2
  22ab48:	a8abc83a 	sub	r21,r21,r2
  22ab4c:	a800621e 	bne	r21,zero,22acd8 <__udivdi3+0x304>
  22ab50:	3c00e936 	bltu	r7,r16,22aef8 <__udivdi3+0x524>
  22ab54:	9985403a 	cmpgeu	r2,r19,r6
  22ab58:	0007883a 	mov	r3,zero
  22ab5c:	00004506 	br	22ac74 <__udivdi3+0x2a0>
  22ab60:	3000041e 	bne	r6,zero,22ab74 <__udivdi3+0x1a0>
  22ab64:	000b883a 	mov	r5,zero
  22ab68:	01000044 	movi	r4,1
  22ab6c:	022b57c0 	call	22b57c <__udivsi3>
  22ab70:	1023883a 	mov	r17,r2
  22ab74:	00bfffd4 	movui	r2,65535
  22ab78:	14404e2e 	bgeu	r2,r17,22acb4 <__udivdi3+0x2e0>
  22ab7c:	00804034 	movhi	r2,256
  22ab80:	10bfffc4 	addi	r2,r2,-1
  22ab84:	1440d836 	bltu	r2,r17,22aee8 <__udivdi3+0x514>
  22ab88:	00800404 	movi	r2,16
  22ab8c:	8886d83a 	srl	r3,r17,r2
  22ab90:	010008f4 	movhi	r4,35
  22ab94:	2103b904 	addi	r4,r4,3812
  22ab98:	20c7883a 	add	r3,r4,r3
  22ab9c:	18c00003 	ldbu	r3,0(r3)
  22aba0:	1885883a 	add	r2,r3,r2
  22aba4:	00c00804 	movi	r3,32
  22aba8:	1887c83a 	sub	r3,r3,r2
  22abac:	18008f1e 	bne	r3,zero,22adec <__udivdi3+0x418>
  22abb0:	882ad43a 	srli	r21,r17,16
  22abb4:	8461c83a 	sub	r16,r16,r17
  22abb8:	8d3fffcc 	andi	r20,r17,65535
  22abbc:	00c00044 	movi	r3,1
  22abc0:	8009883a 	mov	r4,r16
  22abc4:	a80b883a 	mov	r5,r21
  22abc8:	d8c00015 	stw	r3,0(sp)
  22abcc:	022b5e00 	call	22b5e0 <__umodsi3>
  22abd0:	8009883a 	mov	r4,r16
  22abd4:	a80b883a 	mov	r5,r21
  22abd8:	1027883a 	mov	r19,r2
  22abdc:	022b57c0 	call	22b57c <__udivsi3>
  22abe0:	9826943a 	slli	r19,r19,16
  22abe4:	9008d43a 	srli	r4,r18,16
  22abe8:	1521383a 	mul	r16,r2,r20
  22abec:	102d883a 	mov	r22,r2
  22abf0:	24c8b03a 	or	r4,r4,r19
  22abf4:	d8c00017 	ldw	r3,0(sp)
  22abf8:	2400052e 	bgeu	r4,r16,22ac10 <__udivdi3+0x23c>
  22abfc:	2449883a 	add	r4,r4,r17
  22ac00:	b0bfffc4 	addi	r2,r22,-1
  22ac04:	24400136 	bltu	r4,r17,22ac0c <__udivdi3+0x238>
  22ac08:	2400ca36 	bltu	r4,r16,22af34 <__udivdi3+0x560>
  22ac0c:	102d883a 	mov	r22,r2
  22ac10:	2421c83a 	sub	r16,r4,r16
  22ac14:	a80b883a 	mov	r5,r21
  22ac18:	8009883a 	mov	r4,r16
  22ac1c:	d8c00015 	stw	r3,0(sp)
  22ac20:	022b5e00 	call	22b5e0 <__umodsi3>
  22ac24:	1027883a 	mov	r19,r2
  22ac28:	a80b883a 	mov	r5,r21
  22ac2c:	8009883a 	mov	r4,r16
  22ac30:	022b57c0 	call	22b57c <__udivsi3>
  22ac34:	9826943a 	slli	r19,r19,16
  22ac38:	1529383a 	mul	r20,r2,r20
  22ac3c:	94bfffcc 	andi	r18,r18,65535
  22ac40:	94e4b03a 	or	r18,r18,r19
  22ac44:	d8c00017 	ldw	r3,0(sp)
  22ac48:	9500052e 	bgeu	r18,r20,22ac60 <__udivdi3+0x28c>
  22ac4c:	8ca5883a 	add	r18,r17,r18
  22ac50:	113fffc4 	addi	r4,r2,-1
  22ac54:	94409736 	bltu	r18,r17,22aeb4 <__udivdi3+0x4e0>
  22ac58:	9500962e 	bgeu	r18,r20,22aeb4 <__udivdi3+0x4e0>
  22ac5c:	10bfff84 	addi	r2,r2,-2
  22ac60:	b00c943a 	slli	r6,r22,16
  22ac64:	3084b03a 	or	r2,r6,r2
  22ac68:	00000206 	br	22ac74 <__udivdi3+0x2a0>
  22ac6c:	0007883a 	mov	r3,zero
  22ac70:	0005883a 	mov	r2,zero
  22ac74:	dfc00a17 	ldw	ra,40(sp)
  22ac78:	df000917 	ldw	fp,36(sp)
  22ac7c:	ddc00817 	ldw	r23,32(sp)
  22ac80:	dd800717 	ldw	r22,28(sp)
  22ac84:	dd400617 	ldw	r21,24(sp)
  22ac88:	dd000517 	ldw	r20,20(sp)
  22ac8c:	dcc00417 	ldw	r19,16(sp)
  22ac90:	dc800317 	ldw	r18,12(sp)
  22ac94:	dc400217 	ldw	r17,8(sp)
  22ac98:	dc000117 	ldw	r16,4(sp)
  22ac9c:	dec00b04 	addi	sp,sp,44
  22aca0:	f800283a 	ret
  22aca4:	00803fc4 	movi	r2,255
  22aca8:	11c5803a 	cmpltu	r2,r2,r7
  22acac:	100490fa 	slli	r2,r2,3
  22acb0:	003f9e06 	br	22ab2c <_gp+0xfffeffa4>
  22acb4:	00803fc4 	movi	r2,255
  22acb8:	1445803a 	cmpltu	r2,r2,r17
  22acbc:	100490fa 	slli	r2,r2,3
  22acc0:	003fb206 	br	22ab8c <_gp+0xffff0004>
  22acc4:	00804034 	movhi	r2,256
  22acc8:	10bfffc4 	addi	r2,r2,-1
  22accc:	11808836 	bltu	r2,r6,22aef0 <__udivdi3+0x51c>
  22acd0:	00800404 	movi	r2,16
  22acd4:	003f5606 	br	22aa30 <_gp+0xfffefea8>
  22acd8:	30aed83a 	srl	r23,r6,r2
  22acdc:	3d4e983a 	sll	r7,r7,r21
  22ace0:	80acd83a 	srl	r22,r16,r2
  22ace4:	9884d83a 	srl	r2,r19,r2
  22ace8:	3deeb03a 	or	r23,r7,r23
  22acec:	b824d43a 	srli	r18,r23,16
  22acf0:	8560983a 	sll	r16,r16,r21
  22acf4:	b009883a 	mov	r4,r22
  22acf8:	900b883a 	mov	r5,r18
  22acfc:	3568983a 	sll	r20,r6,r21
  22ad00:	1420b03a 	or	r16,r2,r16
  22ad04:	022b5e00 	call	22b5e0 <__umodsi3>
  22ad08:	b009883a 	mov	r4,r22
  22ad0c:	900b883a 	mov	r5,r18
  22ad10:	1023883a 	mov	r17,r2
  22ad14:	022b57c0 	call	22b57c <__udivsi3>
  22ad18:	8808943a 	slli	r4,r17,16
  22ad1c:	bf3fffcc 	andi	fp,r23,65535
  22ad20:	8006d43a 	srli	r3,r16,16
  22ad24:	e0a3383a 	mul	r17,fp,r2
  22ad28:	100d883a 	mov	r6,r2
  22ad2c:	1906b03a 	or	r3,r3,r4
  22ad30:	1c40042e 	bgeu	r3,r17,22ad44 <__udivdi3+0x370>
  22ad34:	1dc7883a 	add	r3,r3,r23
  22ad38:	10bfffc4 	addi	r2,r2,-1
  22ad3c:	1dc0752e 	bgeu	r3,r23,22af14 <__udivdi3+0x540>
  22ad40:	100d883a 	mov	r6,r2
  22ad44:	1c63c83a 	sub	r17,r3,r17
  22ad48:	900b883a 	mov	r5,r18
  22ad4c:	8809883a 	mov	r4,r17
  22ad50:	d9800015 	stw	r6,0(sp)
  22ad54:	022b5e00 	call	22b5e0 <__umodsi3>
  22ad58:	102d883a 	mov	r22,r2
  22ad5c:	8809883a 	mov	r4,r17
  22ad60:	900b883a 	mov	r5,r18
  22ad64:	022b57c0 	call	22b57c <__udivsi3>
  22ad68:	b02c943a 	slli	r22,r22,16
  22ad6c:	e089383a 	mul	r4,fp,r2
  22ad70:	843fffcc 	andi	r16,r16,65535
  22ad74:	85a0b03a 	or	r16,r16,r22
  22ad78:	d9800017 	ldw	r6,0(sp)
  22ad7c:	8100042e 	bgeu	r16,r4,22ad90 <__udivdi3+0x3bc>
  22ad80:	85e1883a 	add	r16,r16,r23
  22ad84:	10ffffc4 	addi	r3,r2,-1
  22ad88:	85c05e2e 	bgeu	r16,r23,22af04 <__udivdi3+0x530>
  22ad8c:	1805883a 	mov	r2,r3
  22ad90:	300c943a 	slli	r6,r6,16
  22ad94:	a17fffcc 	andi	r5,r20,65535
  22ad98:	a028d43a 	srli	r20,r20,16
  22ad9c:	3084b03a 	or	r2,r6,r2
  22ada0:	10ffffcc 	andi	r3,r2,65535
  22ada4:	100cd43a 	srli	r6,r2,16
  22ada8:	194f383a 	mul	r7,r3,r5
  22adac:	1d07383a 	mul	r3,r3,r20
  22adb0:	314b383a 	mul	r5,r6,r5
  22adb4:	3810d43a 	srli	r8,r7,16
  22adb8:	8121c83a 	sub	r16,r16,r4
  22adbc:	1947883a 	add	r3,r3,r5
  22adc0:	40c7883a 	add	r3,r8,r3
  22adc4:	350d383a 	mul	r6,r6,r20
  22adc8:	1940022e 	bgeu	r3,r5,22add4 <__udivdi3+0x400>
  22adcc:	01000074 	movhi	r4,1
  22add0:	310d883a 	add	r6,r6,r4
  22add4:	1828d43a 	srli	r20,r3,16
  22add8:	a18d883a 	add	r6,r20,r6
  22addc:	81803e36 	bltu	r16,r6,22aed8 <__udivdi3+0x504>
  22ade0:	81803826 	beq	r16,r6,22aec4 <__udivdi3+0x4f0>
  22ade4:	0007883a 	mov	r3,zero
  22ade8:	003fa206 	br	22ac74 <_gp+0xffff00ec>
  22adec:	88e2983a 	sll	r17,r17,r3
  22adf0:	80a8d83a 	srl	r20,r16,r2
  22adf4:	80e0983a 	sll	r16,r16,r3
  22adf8:	882ad43a 	srli	r21,r17,16
  22adfc:	9884d83a 	srl	r2,r19,r2
  22ae00:	a009883a 	mov	r4,r20
  22ae04:	a80b883a 	mov	r5,r21
  22ae08:	142eb03a 	or	r23,r2,r16
  22ae0c:	98e4983a 	sll	r18,r19,r3
  22ae10:	022b5e00 	call	22b5e0 <__umodsi3>
  22ae14:	a009883a 	mov	r4,r20
  22ae18:	a80b883a 	mov	r5,r21
  22ae1c:	1021883a 	mov	r16,r2
  22ae20:	022b57c0 	call	22b57c <__udivsi3>
  22ae24:	1039883a 	mov	fp,r2
  22ae28:	8d3fffcc 	andi	r20,r17,65535
  22ae2c:	8020943a 	slli	r16,r16,16
  22ae30:	b804d43a 	srli	r2,r23,16
  22ae34:	a72d383a 	mul	r22,r20,fp
  22ae38:	1404b03a 	or	r2,r2,r16
  22ae3c:	1580062e 	bgeu	r2,r22,22ae58 <__udivdi3+0x484>
  22ae40:	1445883a 	add	r2,r2,r17
  22ae44:	e0ffffc4 	addi	r3,fp,-1
  22ae48:	14403836 	bltu	r2,r17,22af2c <__udivdi3+0x558>
  22ae4c:	1580372e 	bgeu	r2,r22,22af2c <__udivdi3+0x558>
  22ae50:	e73fff84 	addi	fp,fp,-2
  22ae54:	1445883a 	add	r2,r2,r17
  22ae58:	15adc83a 	sub	r22,r2,r22
  22ae5c:	a80b883a 	mov	r5,r21
  22ae60:	b009883a 	mov	r4,r22
  22ae64:	022b5e00 	call	22b5e0 <__umodsi3>
  22ae68:	1027883a 	mov	r19,r2
  22ae6c:	b009883a 	mov	r4,r22
  22ae70:	a80b883a 	mov	r5,r21
  22ae74:	022b57c0 	call	22b57c <__udivsi3>
  22ae78:	9826943a 	slli	r19,r19,16
  22ae7c:	a0a1383a 	mul	r16,r20,r2
  22ae80:	b93fffcc 	andi	r4,r23,65535
  22ae84:	24c8b03a 	or	r4,r4,r19
  22ae88:	2400062e 	bgeu	r4,r16,22aea4 <__udivdi3+0x4d0>
  22ae8c:	2449883a 	add	r4,r4,r17
  22ae90:	10ffffc4 	addi	r3,r2,-1
  22ae94:	24402336 	bltu	r4,r17,22af24 <__udivdi3+0x550>
  22ae98:	2400222e 	bgeu	r4,r16,22af24 <__udivdi3+0x550>
  22ae9c:	10bfff84 	addi	r2,r2,-2
  22aea0:	2449883a 	add	r4,r4,r17
  22aea4:	e038943a 	slli	fp,fp,16
  22aea8:	2421c83a 	sub	r16,r4,r16
  22aeac:	e086b03a 	or	r3,fp,r2
  22aeb0:	003f4306 	br	22abc0 <_gp+0xffff0038>
  22aeb4:	2005883a 	mov	r2,r4
  22aeb8:	003f6906 	br	22ac60 <_gp+0xffff00d8>
  22aebc:	1805883a 	mov	r2,r3
  22aec0:	003f0f06 	br	22ab00 <_gp+0xfffeff78>
  22aec4:	1806943a 	slli	r3,r3,16
  22aec8:	9d66983a 	sll	r19,r19,r21
  22aecc:	39ffffcc 	andi	r7,r7,65535
  22aed0:	19c7883a 	add	r3,r3,r7
  22aed4:	98ffc32e 	bgeu	r19,r3,22ade4 <_gp+0xffff025c>
  22aed8:	10bfffc4 	addi	r2,r2,-1
  22aedc:	003fc106 	br	22ade4 <_gp+0xffff025c>
  22aee0:	00800604 	movi	r2,24
  22aee4:	003f1106 	br	22ab2c <_gp+0xfffeffa4>
  22aee8:	00800604 	movi	r2,24
  22aeec:	003f2706 	br	22ab8c <_gp+0xffff0004>
  22aef0:	00800604 	movi	r2,24
  22aef4:	003ece06 	br	22aa30 <_gp+0xfffefea8>
  22aef8:	0007883a 	mov	r3,zero
  22aefc:	00800044 	movi	r2,1
  22af00:	003f5c06 	br	22ac74 <_gp+0xffff00ec>
  22af04:	813fa12e 	bgeu	r16,r4,22ad8c <_gp+0xffff0204>
  22af08:	10bfff84 	addi	r2,r2,-2
  22af0c:	85e1883a 	add	r16,r16,r23
  22af10:	003f9f06 	br	22ad90 <_gp+0xffff0208>
  22af14:	1c7f8a2e 	bgeu	r3,r17,22ad40 <_gp+0xffff01b8>
  22af18:	31bfff84 	addi	r6,r6,-2
  22af1c:	1dc7883a 	add	r3,r3,r23
  22af20:	003f8806 	br	22ad44 <_gp+0xffff01bc>
  22af24:	1805883a 	mov	r2,r3
  22af28:	003fde06 	br	22aea4 <_gp+0xffff031c>
  22af2c:	1839883a 	mov	fp,r3
  22af30:	003fc906 	br	22ae58 <_gp+0xffff02d0>
  22af34:	b5bfff84 	addi	r22,r22,-2
  22af38:	2449883a 	add	r4,r4,r17
  22af3c:	003f3406 	br	22ac10 <_gp+0xffff0088>
  22af40:	b5bfff84 	addi	r22,r22,-2
  22af44:	1445883a 	add	r2,r2,r17
  22af48:	003edb06 	br	22aab8 <_gp+0xfffeff30>

0022af4c <__umoddi3>:
  22af4c:	defff404 	addi	sp,sp,-48
  22af50:	df000a15 	stw	fp,40(sp)
  22af54:	dc400315 	stw	r17,12(sp)
  22af58:	dc000215 	stw	r16,8(sp)
  22af5c:	dfc00b15 	stw	ra,44(sp)
  22af60:	ddc00915 	stw	r23,36(sp)
  22af64:	dd800815 	stw	r22,32(sp)
  22af68:	dd400715 	stw	r21,28(sp)
  22af6c:	dd000615 	stw	r20,24(sp)
  22af70:	dcc00515 	stw	r19,20(sp)
  22af74:	dc800415 	stw	r18,16(sp)
  22af78:	2021883a 	mov	r16,r4
  22af7c:	2823883a 	mov	r17,r5
  22af80:	2839883a 	mov	fp,r5
  22af84:	38003c1e 	bne	r7,zero,22b078 <__umoddi3+0x12c>
  22af88:	3027883a 	mov	r19,r6
  22af8c:	2029883a 	mov	r20,r4
  22af90:	2980512e 	bgeu	r5,r6,22b0d8 <__umoddi3+0x18c>
  22af94:	00bfffd4 	movui	r2,65535
  22af98:	11809a36 	bltu	r2,r6,22b204 <__umoddi3+0x2b8>
  22af9c:	01003fc4 	movi	r4,255
  22afa0:	2189803a 	cmpltu	r4,r4,r6
  22afa4:	200890fa 	slli	r4,r4,3
  22afa8:	3104d83a 	srl	r2,r6,r4
  22afac:	00c008f4 	movhi	r3,35
  22afb0:	18c3b904 	addi	r3,r3,3812
  22afb4:	1885883a 	add	r2,r3,r2
  22afb8:	10c00003 	ldbu	r3,0(r2)
  22afbc:	00800804 	movi	r2,32
  22afc0:	1909883a 	add	r4,r3,r4
  22afc4:	1125c83a 	sub	r18,r2,r4
  22afc8:	90000526 	beq	r18,zero,22afe0 <__umoddi3+0x94>
  22afcc:	8ca2983a 	sll	r17,r17,r18
  22afd0:	8108d83a 	srl	r4,r16,r4
  22afd4:	34a6983a 	sll	r19,r6,r18
  22afd8:	84a8983a 	sll	r20,r16,r18
  22afdc:	2478b03a 	or	fp,r4,r17
  22afe0:	982ed43a 	srli	r23,r19,16
  22afe4:	e009883a 	mov	r4,fp
  22afe8:	9dbfffcc 	andi	r22,r19,65535
  22afec:	b80b883a 	mov	r5,r23
  22aff0:	022b5e00 	call	22b5e0 <__umodsi3>
  22aff4:	e009883a 	mov	r4,fp
  22aff8:	b80b883a 	mov	r5,r23
  22affc:	102b883a 	mov	r21,r2
  22b000:	022b57c0 	call	22b57c <__udivsi3>
  22b004:	a806943a 	slli	r3,r21,16
  22b008:	a008d43a 	srli	r4,r20,16
  22b00c:	b085383a 	mul	r2,r22,r2
  22b010:	20c8b03a 	or	r4,r4,r3
  22b014:	2080032e 	bgeu	r4,r2,22b024 <__umoddi3+0xd8>
  22b018:	24c9883a 	add	r4,r4,r19
  22b01c:	24c00136 	bltu	r4,r19,22b024 <__umoddi3+0xd8>
  22b020:	20811036 	bltu	r4,r2,22b464 <__umoddi3+0x518>
  22b024:	20abc83a 	sub	r21,r4,r2
  22b028:	b80b883a 	mov	r5,r23
  22b02c:	a809883a 	mov	r4,r21
  22b030:	022b5e00 	call	22b5e0 <__umodsi3>
  22b034:	1023883a 	mov	r17,r2
  22b038:	b80b883a 	mov	r5,r23
  22b03c:	a809883a 	mov	r4,r21
  22b040:	022b57c0 	call	22b57c <__udivsi3>
  22b044:	8822943a 	slli	r17,r17,16
  22b048:	b085383a 	mul	r2,r22,r2
  22b04c:	a0ffffcc 	andi	r3,r20,65535
  22b050:	1c46b03a 	or	r3,r3,r17
  22b054:	1880042e 	bgeu	r3,r2,22b068 <__umoddi3+0x11c>
  22b058:	1cc7883a 	add	r3,r3,r19
  22b05c:	1cc00236 	bltu	r3,r19,22b068 <__umoddi3+0x11c>
  22b060:	1880012e 	bgeu	r3,r2,22b068 <__umoddi3+0x11c>
  22b064:	1cc7883a 	add	r3,r3,r19
  22b068:	1885c83a 	sub	r2,r3,r2
  22b06c:	1484d83a 	srl	r2,r2,r18
  22b070:	0007883a 	mov	r3,zero
  22b074:	00004f06 	br	22b1b4 <__umoddi3+0x268>
  22b078:	29c04c36 	bltu	r5,r7,22b1ac <__umoddi3+0x260>
  22b07c:	00bfffd4 	movui	r2,65535
  22b080:	11c0582e 	bgeu	r2,r7,22b1e4 <__umoddi3+0x298>
  22b084:	00804034 	movhi	r2,256
  22b088:	10bfffc4 	addi	r2,r2,-1
  22b08c:	11c0e736 	bltu	r2,r7,22b42c <__umoddi3+0x4e0>
  22b090:	01000404 	movi	r4,16
  22b094:	3904d83a 	srl	r2,r7,r4
  22b098:	00c008f4 	movhi	r3,35
  22b09c:	18c3b904 	addi	r3,r3,3812
  22b0a0:	1885883a 	add	r2,r3,r2
  22b0a4:	14c00003 	ldbu	r19,0(r2)
  22b0a8:	00c00804 	movi	r3,32
  22b0ac:	9927883a 	add	r19,r19,r4
  22b0b0:	1ce9c83a 	sub	r20,r3,r19
  22b0b4:	a000581e 	bne	r20,zero,22b218 <__umoddi3+0x2cc>
  22b0b8:	3c400136 	bltu	r7,r17,22b0c0 <__umoddi3+0x174>
  22b0bc:	8180eb36 	bltu	r16,r6,22b46c <__umoddi3+0x520>
  22b0c0:	8185c83a 	sub	r2,r16,r6
  22b0c4:	89e3c83a 	sub	r17,r17,r7
  22b0c8:	8089803a 	cmpltu	r4,r16,r2
  22b0cc:	8939c83a 	sub	fp,r17,r4
  22b0d0:	e007883a 	mov	r3,fp
  22b0d4:	00003706 	br	22b1b4 <__umoddi3+0x268>
  22b0d8:	3000041e 	bne	r6,zero,22b0ec <__umoddi3+0x1a0>
  22b0dc:	000b883a 	mov	r5,zero
  22b0e0:	01000044 	movi	r4,1
  22b0e4:	022b57c0 	call	22b57c <__udivsi3>
  22b0e8:	1027883a 	mov	r19,r2
  22b0ec:	00bfffd4 	movui	r2,65535
  22b0f0:	14c0402e 	bgeu	r2,r19,22b1f4 <__umoddi3+0x2a8>
  22b0f4:	00804034 	movhi	r2,256
  22b0f8:	10bfffc4 	addi	r2,r2,-1
  22b0fc:	14c0cd36 	bltu	r2,r19,22b434 <__umoddi3+0x4e8>
  22b100:	00800404 	movi	r2,16
  22b104:	9886d83a 	srl	r3,r19,r2
  22b108:	010008f4 	movhi	r4,35
  22b10c:	2103b904 	addi	r4,r4,3812
  22b110:	20c7883a 	add	r3,r4,r3
  22b114:	18c00003 	ldbu	r3,0(r3)
  22b118:	1887883a 	add	r3,r3,r2
  22b11c:	00800804 	movi	r2,32
  22b120:	10e5c83a 	sub	r18,r2,r3
  22b124:	9000901e 	bne	r18,zero,22b368 <__umoddi3+0x41c>
  22b128:	982cd43a 	srli	r22,r19,16
  22b12c:	8ce3c83a 	sub	r17,r17,r19
  22b130:	9d7fffcc 	andi	r21,r19,65535
  22b134:	b00b883a 	mov	r5,r22
  22b138:	8809883a 	mov	r4,r17
  22b13c:	022b5e00 	call	22b5e0 <__umodsi3>
  22b140:	8809883a 	mov	r4,r17
  22b144:	b00b883a 	mov	r5,r22
  22b148:	1021883a 	mov	r16,r2
  22b14c:	022b57c0 	call	22b57c <__udivsi3>
  22b150:	8006943a 	slli	r3,r16,16
  22b154:	a008d43a 	srli	r4,r20,16
  22b158:	1545383a 	mul	r2,r2,r21
  22b15c:	20c8b03a 	or	r4,r4,r3
  22b160:	2080042e 	bgeu	r4,r2,22b174 <__umoddi3+0x228>
  22b164:	24c9883a 	add	r4,r4,r19
  22b168:	24c00236 	bltu	r4,r19,22b174 <__umoddi3+0x228>
  22b16c:	2080012e 	bgeu	r4,r2,22b174 <__umoddi3+0x228>
  22b170:	24c9883a 	add	r4,r4,r19
  22b174:	20a1c83a 	sub	r16,r4,r2
  22b178:	b00b883a 	mov	r5,r22
  22b17c:	8009883a 	mov	r4,r16
  22b180:	022b5e00 	call	22b5e0 <__umodsi3>
  22b184:	1023883a 	mov	r17,r2
  22b188:	b00b883a 	mov	r5,r22
  22b18c:	8009883a 	mov	r4,r16
  22b190:	022b57c0 	call	22b57c <__udivsi3>
  22b194:	8822943a 	slli	r17,r17,16
  22b198:	1545383a 	mul	r2,r2,r21
  22b19c:	a53fffcc 	andi	r20,r20,65535
  22b1a0:	a446b03a 	or	r3,r20,r17
  22b1a4:	18bfb02e 	bgeu	r3,r2,22b068 <_gp+0xffff04e0>
  22b1a8:	003fab06 	br	22b058 <_gp+0xffff04d0>
  22b1ac:	2005883a 	mov	r2,r4
  22b1b0:	2807883a 	mov	r3,r5
  22b1b4:	dfc00b17 	ldw	ra,44(sp)
  22b1b8:	df000a17 	ldw	fp,40(sp)
  22b1bc:	ddc00917 	ldw	r23,36(sp)
  22b1c0:	dd800817 	ldw	r22,32(sp)
  22b1c4:	dd400717 	ldw	r21,28(sp)
  22b1c8:	dd000617 	ldw	r20,24(sp)
  22b1cc:	dcc00517 	ldw	r19,20(sp)
  22b1d0:	dc800417 	ldw	r18,16(sp)
  22b1d4:	dc400317 	ldw	r17,12(sp)
  22b1d8:	dc000217 	ldw	r16,8(sp)
  22b1dc:	dec00c04 	addi	sp,sp,48
  22b1e0:	f800283a 	ret
  22b1e4:	04c03fc4 	movi	r19,255
  22b1e8:	99c9803a 	cmpltu	r4,r19,r7
  22b1ec:	200890fa 	slli	r4,r4,3
  22b1f0:	003fa806 	br	22b094 <_gp+0xffff050c>
  22b1f4:	00803fc4 	movi	r2,255
  22b1f8:	14c5803a 	cmpltu	r2,r2,r19
  22b1fc:	100490fa 	slli	r2,r2,3
  22b200:	003fc006 	br	22b104 <_gp+0xffff057c>
  22b204:	00804034 	movhi	r2,256
  22b208:	10bfffc4 	addi	r2,r2,-1
  22b20c:	11808b36 	bltu	r2,r6,22b43c <__umoddi3+0x4f0>
  22b210:	01000404 	movi	r4,16
  22b214:	003f6406 	br	22afa8 <_gp+0xffff0420>
  22b218:	34c4d83a 	srl	r2,r6,r19
  22b21c:	3d0e983a 	sll	r7,r7,r20
  22b220:	8cf8d83a 	srl	fp,r17,r19
  22b224:	8d10983a 	sll	r8,r17,r20
  22b228:	38aab03a 	or	r21,r7,r2
  22b22c:	a82cd43a 	srli	r22,r21,16
  22b230:	84e2d83a 	srl	r17,r16,r19
  22b234:	e009883a 	mov	r4,fp
  22b238:	b00b883a 	mov	r5,r22
  22b23c:	8a22b03a 	or	r17,r17,r8
  22b240:	3524983a 	sll	r18,r6,r20
  22b244:	022b5e00 	call	22b5e0 <__umodsi3>
  22b248:	e009883a 	mov	r4,fp
  22b24c:	b00b883a 	mov	r5,r22
  22b250:	102f883a 	mov	r23,r2
  22b254:	022b57c0 	call	22b57c <__udivsi3>
  22b258:	100d883a 	mov	r6,r2
  22b25c:	b808943a 	slli	r4,r23,16
  22b260:	aa3fffcc 	andi	r8,r21,65535
  22b264:	8804d43a 	srli	r2,r17,16
  22b268:	41af383a 	mul	r23,r8,r6
  22b26c:	8520983a 	sll	r16,r16,r20
  22b270:	1104b03a 	or	r2,r2,r4
  22b274:	15c0042e 	bgeu	r2,r23,22b288 <__umoddi3+0x33c>
  22b278:	1545883a 	add	r2,r2,r21
  22b27c:	30ffffc4 	addi	r3,r6,-1
  22b280:	1540742e 	bgeu	r2,r21,22b454 <__umoddi3+0x508>
  22b284:	180d883a 	mov	r6,r3
  22b288:	15efc83a 	sub	r23,r2,r23
  22b28c:	b00b883a 	mov	r5,r22
  22b290:	b809883a 	mov	r4,r23
  22b294:	d9800115 	stw	r6,4(sp)
  22b298:	da000015 	stw	r8,0(sp)
  22b29c:	022b5e00 	call	22b5e0 <__umodsi3>
  22b2a0:	b00b883a 	mov	r5,r22
  22b2a4:	b809883a 	mov	r4,r23
  22b2a8:	1039883a 	mov	fp,r2
  22b2ac:	022b57c0 	call	22b57c <__udivsi3>
  22b2b0:	da000017 	ldw	r8,0(sp)
  22b2b4:	e038943a 	slli	fp,fp,16
  22b2b8:	100b883a 	mov	r5,r2
  22b2bc:	4089383a 	mul	r4,r8,r2
  22b2c0:	8a3fffcc 	andi	r8,r17,65535
  22b2c4:	4710b03a 	or	r8,r8,fp
  22b2c8:	d9800117 	ldw	r6,4(sp)
  22b2cc:	4100042e 	bgeu	r8,r4,22b2e0 <__umoddi3+0x394>
  22b2d0:	4551883a 	add	r8,r8,r21
  22b2d4:	10bfffc4 	addi	r2,r2,-1
  22b2d8:	45405a2e 	bgeu	r8,r21,22b444 <__umoddi3+0x4f8>
  22b2dc:	100b883a 	mov	r5,r2
  22b2e0:	300c943a 	slli	r6,r6,16
  22b2e4:	91ffffcc 	andi	r7,r18,65535
  22b2e8:	9004d43a 	srli	r2,r18,16
  22b2ec:	314cb03a 	or	r6,r6,r5
  22b2f0:	317fffcc 	andi	r5,r6,65535
  22b2f4:	300cd43a 	srli	r6,r6,16
  22b2f8:	29d3383a 	mul	r9,r5,r7
  22b2fc:	288b383a 	mul	r5,r5,r2
  22b300:	31cf383a 	mul	r7,r6,r7
  22b304:	4806d43a 	srli	r3,r9,16
  22b308:	4111c83a 	sub	r8,r8,r4
  22b30c:	29cb883a 	add	r5,r5,r7
  22b310:	194b883a 	add	r5,r3,r5
  22b314:	3085383a 	mul	r2,r6,r2
  22b318:	29c0022e 	bgeu	r5,r7,22b324 <__umoddi3+0x3d8>
  22b31c:	00c00074 	movhi	r3,1
  22b320:	10c5883a 	add	r2,r2,r3
  22b324:	2808d43a 	srli	r4,r5,16
  22b328:	280a943a 	slli	r5,r5,16
  22b32c:	4a7fffcc 	andi	r9,r9,65535
  22b330:	2085883a 	add	r2,r4,r2
  22b334:	2a4b883a 	add	r5,r5,r9
  22b338:	40803636 	bltu	r8,r2,22b414 <__umoddi3+0x4c8>
  22b33c:	40804d26 	beq	r8,r2,22b474 <__umoddi3+0x528>
  22b340:	4089c83a 	sub	r4,r8,r2
  22b344:	280f883a 	mov	r7,r5
  22b348:	81cfc83a 	sub	r7,r16,r7
  22b34c:	81c7803a 	cmpltu	r3,r16,r7
  22b350:	20c7c83a 	sub	r3,r4,r3
  22b354:	1cc4983a 	sll	r2,r3,r19
  22b358:	3d0ed83a 	srl	r7,r7,r20
  22b35c:	1d06d83a 	srl	r3,r3,r20
  22b360:	11c4b03a 	or	r2,r2,r7
  22b364:	003f9306 	br	22b1b4 <_gp+0xffff062c>
  22b368:	9ca6983a 	sll	r19,r19,r18
  22b36c:	88e8d83a 	srl	r20,r17,r3
  22b370:	80c4d83a 	srl	r2,r16,r3
  22b374:	982cd43a 	srli	r22,r19,16
  22b378:	8ca2983a 	sll	r17,r17,r18
  22b37c:	a009883a 	mov	r4,r20
  22b380:	b00b883a 	mov	r5,r22
  22b384:	1478b03a 	or	fp,r2,r17
  22b388:	022b5e00 	call	22b5e0 <__umodsi3>
  22b38c:	a009883a 	mov	r4,r20
  22b390:	b00b883a 	mov	r5,r22
  22b394:	1023883a 	mov	r17,r2
  22b398:	022b57c0 	call	22b57c <__udivsi3>
  22b39c:	9d7fffcc 	andi	r21,r19,65535
  22b3a0:	880a943a 	slli	r5,r17,16
  22b3a4:	e008d43a 	srli	r4,fp,16
  22b3a8:	a885383a 	mul	r2,r21,r2
  22b3ac:	84a8983a 	sll	r20,r16,r18
  22b3b0:	2148b03a 	or	r4,r4,r5
  22b3b4:	2080042e 	bgeu	r4,r2,22b3c8 <__umoddi3+0x47c>
  22b3b8:	24c9883a 	add	r4,r4,r19
  22b3bc:	24c00236 	bltu	r4,r19,22b3c8 <__umoddi3+0x47c>
  22b3c0:	2080012e 	bgeu	r4,r2,22b3c8 <__umoddi3+0x47c>
  22b3c4:	24c9883a 	add	r4,r4,r19
  22b3c8:	20a3c83a 	sub	r17,r4,r2
  22b3cc:	b00b883a 	mov	r5,r22
  22b3d0:	8809883a 	mov	r4,r17
  22b3d4:	022b5e00 	call	22b5e0 <__umodsi3>
  22b3d8:	102f883a 	mov	r23,r2
  22b3dc:	8809883a 	mov	r4,r17
  22b3e0:	b00b883a 	mov	r5,r22
  22b3e4:	022b57c0 	call	22b57c <__udivsi3>
  22b3e8:	b82e943a 	slli	r23,r23,16
  22b3ec:	a885383a 	mul	r2,r21,r2
  22b3f0:	e13fffcc 	andi	r4,fp,65535
  22b3f4:	25c8b03a 	or	r4,r4,r23
  22b3f8:	2080042e 	bgeu	r4,r2,22b40c <__umoddi3+0x4c0>
  22b3fc:	24c9883a 	add	r4,r4,r19
  22b400:	24c00236 	bltu	r4,r19,22b40c <__umoddi3+0x4c0>
  22b404:	2080012e 	bgeu	r4,r2,22b40c <__umoddi3+0x4c0>
  22b408:	24c9883a 	add	r4,r4,r19
  22b40c:	20a3c83a 	sub	r17,r4,r2
  22b410:	003f4806 	br	22b134 <_gp+0xffff05ac>
  22b414:	2c8fc83a 	sub	r7,r5,r18
  22b418:	1545c83a 	sub	r2,r2,r21
  22b41c:	29cb803a 	cmpltu	r5,r5,r7
  22b420:	1145c83a 	sub	r2,r2,r5
  22b424:	4089c83a 	sub	r4,r8,r2
  22b428:	003fc706 	br	22b348 <_gp+0xffff07c0>
  22b42c:	01000604 	movi	r4,24
  22b430:	003f1806 	br	22b094 <_gp+0xffff050c>
  22b434:	00800604 	movi	r2,24
  22b438:	003f3206 	br	22b104 <_gp+0xffff057c>
  22b43c:	01000604 	movi	r4,24
  22b440:	003ed906 	br	22afa8 <_gp+0xffff0420>
  22b444:	413fa52e 	bgeu	r8,r4,22b2dc <_gp+0xffff0754>
  22b448:	297fff84 	addi	r5,r5,-2
  22b44c:	4551883a 	add	r8,r8,r21
  22b450:	003fa306 	br	22b2e0 <_gp+0xffff0758>
  22b454:	15ff8b2e 	bgeu	r2,r23,22b284 <_gp+0xffff06fc>
  22b458:	31bfff84 	addi	r6,r6,-2
  22b45c:	1545883a 	add	r2,r2,r21
  22b460:	003f8906 	br	22b288 <_gp+0xffff0700>
  22b464:	24c9883a 	add	r4,r4,r19
  22b468:	003eee06 	br	22b024 <_gp+0xffff049c>
  22b46c:	8005883a 	mov	r2,r16
  22b470:	003f1706 	br	22b0d0 <_gp+0xffff0548>
  22b474:	817fe736 	bltu	r16,r5,22b414 <_gp+0xffff088c>
  22b478:	280f883a 	mov	r7,r5
  22b47c:	0009883a 	mov	r4,zero
  22b480:	003fb106 	br	22b348 <_gp+0xffff07c0>

0022b484 <__divsi3>:
  22b484:	20001b16 	blt	r4,zero,22b4f4 <__divsi3+0x70>
  22b488:	000f883a 	mov	r7,zero
  22b48c:	28001616 	blt	r5,zero,22b4e8 <__divsi3+0x64>
  22b490:	200d883a 	mov	r6,r4
  22b494:	29001a2e 	bgeu	r5,r4,22b500 <__divsi3+0x7c>
  22b498:	00800804 	movi	r2,32
  22b49c:	00c00044 	movi	r3,1
  22b4a0:	00000106 	br	22b4a8 <__divsi3+0x24>
  22b4a4:	10000d26 	beq	r2,zero,22b4dc <__divsi3+0x58>
  22b4a8:	294b883a 	add	r5,r5,r5
  22b4ac:	10bfffc4 	addi	r2,r2,-1
  22b4b0:	18c7883a 	add	r3,r3,r3
  22b4b4:	293ffb36 	bltu	r5,r4,22b4a4 <_gp+0xffff091c>
  22b4b8:	0005883a 	mov	r2,zero
  22b4bc:	18000726 	beq	r3,zero,22b4dc <__divsi3+0x58>
  22b4c0:	0005883a 	mov	r2,zero
  22b4c4:	31400236 	bltu	r6,r5,22b4d0 <__divsi3+0x4c>
  22b4c8:	314dc83a 	sub	r6,r6,r5
  22b4cc:	10c4b03a 	or	r2,r2,r3
  22b4d0:	1806d07a 	srli	r3,r3,1
  22b4d4:	280ad07a 	srli	r5,r5,1
  22b4d8:	183ffa1e 	bne	r3,zero,22b4c4 <_gp+0xffff093c>
  22b4dc:	38000126 	beq	r7,zero,22b4e4 <__divsi3+0x60>
  22b4e0:	0085c83a 	sub	r2,zero,r2
  22b4e4:	f800283a 	ret
  22b4e8:	014bc83a 	sub	r5,zero,r5
  22b4ec:	39c0005c 	xori	r7,r7,1
  22b4f0:	003fe706 	br	22b490 <_gp+0xffff0908>
  22b4f4:	0109c83a 	sub	r4,zero,r4
  22b4f8:	01c00044 	movi	r7,1
  22b4fc:	003fe306 	br	22b48c <_gp+0xffff0904>
  22b500:	00c00044 	movi	r3,1
  22b504:	003fee06 	br	22b4c0 <_gp+0xffff0938>

0022b508 <__modsi3>:
  22b508:	20001716 	blt	r4,zero,22b568 <__modsi3+0x60>
  22b50c:	000f883a 	mov	r7,zero
  22b510:	2005883a 	mov	r2,r4
  22b514:	28001216 	blt	r5,zero,22b560 <__modsi3+0x58>
  22b518:	2900162e 	bgeu	r5,r4,22b574 <__modsi3+0x6c>
  22b51c:	01800804 	movi	r6,32
  22b520:	00c00044 	movi	r3,1
  22b524:	00000106 	br	22b52c <__modsi3+0x24>
  22b528:	30000a26 	beq	r6,zero,22b554 <__modsi3+0x4c>
  22b52c:	294b883a 	add	r5,r5,r5
  22b530:	31bfffc4 	addi	r6,r6,-1
  22b534:	18c7883a 	add	r3,r3,r3
  22b538:	293ffb36 	bltu	r5,r4,22b528 <_gp+0xffff09a0>
  22b53c:	18000526 	beq	r3,zero,22b554 <__modsi3+0x4c>
  22b540:	1806d07a 	srli	r3,r3,1
  22b544:	11400136 	bltu	r2,r5,22b54c <__modsi3+0x44>
  22b548:	1145c83a 	sub	r2,r2,r5
  22b54c:	280ad07a 	srli	r5,r5,1
  22b550:	183ffb1e 	bne	r3,zero,22b540 <_gp+0xffff09b8>
  22b554:	38000126 	beq	r7,zero,22b55c <__modsi3+0x54>
  22b558:	0085c83a 	sub	r2,zero,r2
  22b55c:	f800283a 	ret
  22b560:	014bc83a 	sub	r5,zero,r5
  22b564:	003fec06 	br	22b518 <_gp+0xffff0990>
  22b568:	0109c83a 	sub	r4,zero,r4
  22b56c:	01c00044 	movi	r7,1
  22b570:	003fe706 	br	22b510 <_gp+0xffff0988>
  22b574:	00c00044 	movi	r3,1
  22b578:	003ff106 	br	22b540 <_gp+0xffff09b8>

0022b57c <__udivsi3>:
  22b57c:	200d883a 	mov	r6,r4
  22b580:	2900152e 	bgeu	r5,r4,22b5d8 <__udivsi3+0x5c>
  22b584:	28001416 	blt	r5,zero,22b5d8 <__udivsi3+0x5c>
  22b588:	00800804 	movi	r2,32
  22b58c:	00c00044 	movi	r3,1
  22b590:	00000206 	br	22b59c <__udivsi3+0x20>
  22b594:	10000e26 	beq	r2,zero,22b5d0 <__udivsi3+0x54>
  22b598:	28000516 	blt	r5,zero,22b5b0 <__udivsi3+0x34>
  22b59c:	294b883a 	add	r5,r5,r5
  22b5a0:	10bfffc4 	addi	r2,r2,-1
  22b5a4:	18c7883a 	add	r3,r3,r3
  22b5a8:	293ffa36 	bltu	r5,r4,22b594 <_gp+0xffff0a0c>
  22b5ac:	18000826 	beq	r3,zero,22b5d0 <__udivsi3+0x54>
  22b5b0:	0005883a 	mov	r2,zero
  22b5b4:	31400236 	bltu	r6,r5,22b5c0 <__udivsi3+0x44>
  22b5b8:	314dc83a 	sub	r6,r6,r5
  22b5bc:	10c4b03a 	or	r2,r2,r3
  22b5c0:	1806d07a 	srli	r3,r3,1
  22b5c4:	280ad07a 	srli	r5,r5,1
  22b5c8:	183ffa1e 	bne	r3,zero,22b5b4 <_gp+0xffff0a2c>
  22b5cc:	f800283a 	ret
  22b5d0:	0005883a 	mov	r2,zero
  22b5d4:	f800283a 	ret
  22b5d8:	00c00044 	movi	r3,1
  22b5dc:	003ff406 	br	22b5b0 <_gp+0xffff0a28>

0022b5e0 <__umodsi3>:
  22b5e0:	2005883a 	mov	r2,r4
  22b5e4:	2900122e 	bgeu	r5,r4,22b630 <__umodsi3+0x50>
  22b5e8:	28001116 	blt	r5,zero,22b630 <__umodsi3+0x50>
  22b5ec:	01800804 	movi	r6,32
  22b5f0:	00c00044 	movi	r3,1
  22b5f4:	00000206 	br	22b600 <__umodsi3+0x20>
  22b5f8:	30000c26 	beq	r6,zero,22b62c <__umodsi3+0x4c>
  22b5fc:	28000516 	blt	r5,zero,22b614 <__umodsi3+0x34>
  22b600:	294b883a 	add	r5,r5,r5
  22b604:	31bfffc4 	addi	r6,r6,-1
  22b608:	18c7883a 	add	r3,r3,r3
  22b60c:	293ffa36 	bltu	r5,r4,22b5f8 <_gp+0xffff0a70>
  22b610:	18000626 	beq	r3,zero,22b62c <__umodsi3+0x4c>
  22b614:	1806d07a 	srli	r3,r3,1
  22b618:	11400136 	bltu	r2,r5,22b620 <__umodsi3+0x40>
  22b61c:	1145c83a 	sub	r2,r2,r5
  22b620:	280ad07a 	srli	r5,r5,1
  22b624:	183ffb1e 	bne	r3,zero,22b614 <_gp+0xffff0a8c>
  22b628:	f800283a 	ret
  22b62c:	f800283a 	ret
  22b630:	00c00044 	movi	r3,1
  22b634:	003ff706 	br	22b614 <_gp+0xffff0a8c>

0022b638 <__adddf3>:
  22b638:	02c00434 	movhi	r11,16
  22b63c:	5affffc4 	addi	r11,r11,-1
  22b640:	2806d7fa 	srli	r3,r5,31
  22b644:	2ad4703a 	and	r10,r5,r11
  22b648:	3ad2703a 	and	r9,r7,r11
  22b64c:	3804d53a 	srli	r2,r7,20
  22b650:	3018d77a 	srli	r12,r6,29
  22b654:	280ad53a 	srli	r5,r5,20
  22b658:	501490fa 	slli	r10,r10,3
  22b65c:	2010d77a 	srli	r8,r4,29
  22b660:	481290fa 	slli	r9,r9,3
  22b664:	380ed7fa 	srli	r7,r7,31
  22b668:	defffb04 	addi	sp,sp,-20
  22b66c:	dc800215 	stw	r18,8(sp)
  22b670:	dc400115 	stw	r17,4(sp)
  22b674:	dc000015 	stw	r16,0(sp)
  22b678:	dfc00415 	stw	ra,16(sp)
  22b67c:	dcc00315 	stw	r19,12(sp)
  22b680:	1c803fcc 	andi	r18,r3,255
  22b684:	2c01ffcc 	andi	r16,r5,2047
  22b688:	5210b03a 	or	r8,r10,r8
  22b68c:	202290fa 	slli	r17,r4,3
  22b690:	1081ffcc 	andi	r2,r2,2047
  22b694:	4b12b03a 	or	r9,r9,r12
  22b698:	300c90fa 	slli	r6,r6,3
  22b69c:	91c07526 	beq	r18,r7,22b874 <__adddf3+0x23c>
  22b6a0:	8087c83a 	sub	r3,r16,r2
  22b6a4:	00c0ab0e 	bge	zero,r3,22b954 <__adddf3+0x31c>
  22b6a8:	10002a1e 	bne	r2,zero,22b754 <__adddf3+0x11c>
  22b6ac:	4984b03a 	or	r2,r9,r6
  22b6b0:	1000961e 	bne	r2,zero,22b90c <__adddf3+0x2d4>
  22b6b4:	888001cc 	andi	r2,r17,7
  22b6b8:	10000726 	beq	r2,zero,22b6d8 <__adddf3+0xa0>
  22b6bc:	888003cc 	andi	r2,r17,15
  22b6c0:	00c00104 	movi	r3,4
  22b6c4:	10c00426 	beq	r2,r3,22b6d8 <__adddf3+0xa0>
  22b6c8:	88c7883a 	add	r3,r17,r3
  22b6cc:	1c63803a 	cmpltu	r17,r3,r17
  22b6d0:	4451883a 	add	r8,r8,r17
  22b6d4:	1823883a 	mov	r17,r3
  22b6d8:	4080202c 	andhi	r2,r8,128
  22b6dc:	10005926 	beq	r2,zero,22b844 <__adddf3+0x20c>
  22b6e0:	84000044 	addi	r16,r16,1
  22b6e4:	0081ffc4 	movi	r2,2047
  22b6e8:	8080ba26 	beq	r16,r2,22b9d4 <__adddf3+0x39c>
  22b6ec:	00bfe034 	movhi	r2,65408
  22b6f0:	10bfffc4 	addi	r2,r2,-1
  22b6f4:	4090703a 	and	r8,r8,r2
  22b6f8:	4004977a 	slli	r2,r8,29
  22b6fc:	4010927a 	slli	r8,r8,9
  22b700:	8822d0fa 	srli	r17,r17,3
  22b704:	8401ffcc 	andi	r16,r16,2047
  22b708:	4010d33a 	srli	r8,r8,12
  22b70c:	9007883a 	mov	r3,r18
  22b710:	1444b03a 	or	r2,r2,r17
  22b714:	8401ffcc 	andi	r16,r16,2047
  22b718:	8020953a 	slli	r16,r16,20
  22b71c:	18c03fcc 	andi	r3,r3,255
  22b720:	01000434 	movhi	r4,16
  22b724:	213fffc4 	addi	r4,r4,-1
  22b728:	180697fa 	slli	r3,r3,31
  22b72c:	4110703a 	and	r8,r8,r4
  22b730:	4410b03a 	or	r8,r8,r16
  22b734:	40c6b03a 	or	r3,r8,r3
  22b738:	dfc00417 	ldw	ra,16(sp)
  22b73c:	dcc00317 	ldw	r19,12(sp)
  22b740:	dc800217 	ldw	r18,8(sp)
  22b744:	dc400117 	ldw	r17,4(sp)
  22b748:	dc000017 	ldw	r16,0(sp)
  22b74c:	dec00504 	addi	sp,sp,20
  22b750:	f800283a 	ret
  22b754:	0081ffc4 	movi	r2,2047
  22b758:	80bfd626 	beq	r16,r2,22b6b4 <_gp+0xffff0b2c>
  22b75c:	4a402034 	orhi	r9,r9,128
  22b760:	00800e04 	movi	r2,56
  22b764:	10c09f16 	blt	r2,r3,22b9e4 <__adddf3+0x3ac>
  22b768:	008007c4 	movi	r2,31
  22b76c:	10c0c216 	blt	r2,r3,22ba78 <__adddf3+0x440>
  22b770:	00800804 	movi	r2,32
  22b774:	10c5c83a 	sub	r2,r2,r3
  22b778:	488a983a 	sll	r5,r9,r2
  22b77c:	30c8d83a 	srl	r4,r6,r3
  22b780:	3084983a 	sll	r2,r6,r2
  22b784:	48c6d83a 	srl	r3,r9,r3
  22b788:	290cb03a 	or	r6,r5,r4
  22b78c:	1004c03a 	cmpne	r2,r2,zero
  22b790:	308cb03a 	or	r6,r6,r2
  22b794:	898dc83a 	sub	r6,r17,r6
  22b798:	89a3803a 	cmpltu	r17,r17,r6
  22b79c:	40d1c83a 	sub	r8,r8,r3
  22b7a0:	4451c83a 	sub	r8,r8,r17
  22b7a4:	3023883a 	mov	r17,r6
  22b7a8:	4080202c 	andhi	r2,r8,128
  22b7ac:	10002326 	beq	r2,zero,22b83c <__adddf3+0x204>
  22b7b0:	04c02034 	movhi	r19,128
  22b7b4:	9cffffc4 	addi	r19,r19,-1
  22b7b8:	44e6703a 	and	r19,r8,r19
  22b7bc:	98007626 	beq	r19,zero,22b998 <__adddf3+0x360>
  22b7c0:	9809883a 	mov	r4,r19
  22b7c4:	022dc3c0 	call	22dc3c <__clzsi2>
  22b7c8:	10fffe04 	addi	r3,r2,-8
  22b7cc:	010007c4 	movi	r4,31
  22b7d0:	20c07716 	blt	r4,r3,22b9b0 <__adddf3+0x378>
  22b7d4:	00800804 	movi	r2,32
  22b7d8:	10c5c83a 	sub	r2,r2,r3
  22b7dc:	8884d83a 	srl	r2,r17,r2
  22b7e0:	98d0983a 	sll	r8,r19,r3
  22b7e4:	88e2983a 	sll	r17,r17,r3
  22b7e8:	1204b03a 	or	r2,r2,r8
  22b7ec:	1c007416 	blt	r3,r16,22b9c0 <__adddf3+0x388>
  22b7f0:	1c21c83a 	sub	r16,r3,r16
  22b7f4:	82000044 	addi	r8,r16,1
  22b7f8:	00c007c4 	movi	r3,31
  22b7fc:	1a009116 	blt	r3,r8,22ba44 <__adddf3+0x40c>
  22b800:	00c00804 	movi	r3,32
  22b804:	1a07c83a 	sub	r3,r3,r8
  22b808:	8a08d83a 	srl	r4,r17,r8
  22b80c:	88e2983a 	sll	r17,r17,r3
  22b810:	10c6983a 	sll	r3,r2,r3
  22b814:	1210d83a 	srl	r8,r2,r8
  22b818:	8804c03a 	cmpne	r2,r17,zero
  22b81c:	1906b03a 	or	r3,r3,r4
  22b820:	18a2b03a 	or	r17,r3,r2
  22b824:	0021883a 	mov	r16,zero
  22b828:	003fa206 	br	22b6b4 <_gp+0xffff0b2c>
  22b82c:	1890b03a 	or	r8,r3,r2
  22b830:	40017d26 	beq	r8,zero,22be28 <__adddf3+0x7f0>
  22b834:	1011883a 	mov	r8,r2
  22b838:	1823883a 	mov	r17,r3
  22b83c:	888001cc 	andi	r2,r17,7
  22b840:	103f9e1e 	bne	r2,zero,22b6bc <_gp+0xffff0b34>
  22b844:	4004977a 	slli	r2,r8,29
  22b848:	8822d0fa 	srli	r17,r17,3
  22b84c:	4010d0fa 	srli	r8,r8,3
  22b850:	9007883a 	mov	r3,r18
  22b854:	1444b03a 	or	r2,r2,r17
  22b858:	0101ffc4 	movi	r4,2047
  22b85c:	81002426 	beq	r16,r4,22b8f0 <__adddf3+0x2b8>
  22b860:	8120703a 	and	r16,r16,r4
  22b864:	01000434 	movhi	r4,16
  22b868:	213fffc4 	addi	r4,r4,-1
  22b86c:	4110703a 	and	r8,r8,r4
  22b870:	003fa806 	br	22b714 <_gp+0xffff0b8c>
  22b874:	8089c83a 	sub	r4,r16,r2
  22b878:	01005e0e 	bge	zero,r4,22b9f4 <__adddf3+0x3bc>
  22b87c:	10002b26 	beq	r2,zero,22b92c <__adddf3+0x2f4>
  22b880:	0081ffc4 	movi	r2,2047
  22b884:	80bf8b26 	beq	r16,r2,22b6b4 <_gp+0xffff0b2c>
  22b888:	4a402034 	orhi	r9,r9,128
  22b88c:	00800e04 	movi	r2,56
  22b890:	1100a40e 	bge	r2,r4,22bb24 <__adddf3+0x4ec>
  22b894:	498cb03a 	or	r6,r9,r6
  22b898:	300ac03a 	cmpne	r5,r6,zero
  22b89c:	0013883a 	mov	r9,zero
  22b8a0:	2c4b883a 	add	r5,r5,r17
  22b8a4:	2c63803a 	cmpltu	r17,r5,r17
  22b8a8:	4a11883a 	add	r8,r9,r8
  22b8ac:	8a11883a 	add	r8,r17,r8
  22b8b0:	2823883a 	mov	r17,r5
  22b8b4:	4080202c 	andhi	r2,r8,128
  22b8b8:	103fe026 	beq	r2,zero,22b83c <_gp+0xffff0cb4>
  22b8bc:	84000044 	addi	r16,r16,1
  22b8c0:	0081ffc4 	movi	r2,2047
  22b8c4:	8080d226 	beq	r16,r2,22bc10 <__adddf3+0x5d8>
  22b8c8:	00bfe034 	movhi	r2,65408
  22b8cc:	10bfffc4 	addi	r2,r2,-1
  22b8d0:	4090703a 	and	r8,r8,r2
  22b8d4:	880ad07a 	srli	r5,r17,1
  22b8d8:	400897fa 	slli	r4,r8,31
  22b8dc:	88c0004c 	andi	r3,r17,1
  22b8e0:	28e2b03a 	or	r17,r5,r3
  22b8e4:	4010d07a 	srli	r8,r8,1
  22b8e8:	2462b03a 	or	r17,r4,r17
  22b8ec:	003f7106 	br	22b6b4 <_gp+0xffff0b2c>
  22b8f0:	4088b03a 	or	r4,r8,r2
  22b8f4:	20014526 	beq	r4,zero,22be0c <__adddf3+0x7d4>
  22b8f8:	01000434 	movhi	r4,16
  22b8fc:	42000234 	orhi	r8,r8,8
  22b900:	213fffc4 	addi	r4,r4,-1
  22b904:	4110703a 	and	r8,r8,r4
  22b908:	003f8206 	br	22b714 <_gp+0xffff0b8c>
  22b90c:	18ffffc4 	addi	r3,r3,-1
  22b910:	1800491e 	bne	r3,zero,22ba38 <__adddf3+0x400>
  22b914:	898bc83a 	sub	r5,r17,r6
  22b918:	8963803a 	cmpltu	r17,r17,r5
  22b91c:	4251c83a 	sub	r8,r8,r9
  22b920:	4451c83a 	sub	r8,r8,r17
  22b924:	2823883a 	mov	r17,r5
  22b928:	003f9f06 	br	22b7a8 <_gp+0xffff0c20>
  22b92c:	4984b03a 	or	r2,r9,r6
  22b930:	103f6026 	beq	r2,zero,22b6b4 <_gp+0xffff0b2c>
  22b934:	213fffc4 	addi	r4,r4,-1
  22b938:	2000931e 	bne	r4,zero,22bb88 <__adddf3+0x550>
  22b93c:	898d883a 	add	r6,r17,r6
  22b940:	3463803a 	cmpltu	r17,r6,r17
  22b944:	4251883a 	add	r8,r8,r9
  22b948:	8a11883a 	add	r8,r17,r8
  22b94c:	3023883a 	mov	r17,r6
  22b950:	003fd806 	br	22b8b4 <_gp+0xffff0d2c>
  22b954:	1800541e 	bne	r3,zero,22baa8 <__adddf3+0x470>
  22b958:	80800044 	addi	r2,r16,1
  22b95c:	1081ffcc 	andi	r2,r2,2047
  22b960:	00c00044 	movi	r3,1
  22b964:	1880a00e 	bge	r3,r2,22bbe8 <__adddf3+0x5b0>
  22b968:	8989c83a 	sub	r4,r17,r6
  22b96c:	8905803a 	cmpltu	r2,r17,r4
  22b970:	4267c83a 	sub	r19,r8,r9
  22b974:	98a7c83a 	sub	r19,r19,r2
  22b978:	9880202c 	andhi	r2,r19,128
  22b97c:	10006326 	beq	r2,zero,22bb0c <__adddf3+0x4d4>
  22b980:	3463c83a 	sub	r17,r6,r17
  22b984:	4a07c83a 	sub	r3,r9,r8
  22b988:	344d803a 	cmpltu	r6,r6,r17
  22b98c:	19a7c83a 	sub	r19,r3,r6
  22b990:	3825883a 	mov	r18,r7
  22b994:	983f8a1e 	bne	r19,zero,22b7c0 <_gp+0xffff0c38>
  22b998:	8809883a 	mov	r4,r17
  22b99c:	022dc3c0 	call	22dc3c <__clzsi2>
  22b9a0:	10800804 	addi	r2,r2,32
  22b9a4:	10fffe04 	addi	r3,r2,-8
  22b9a8:	010007c4 	movi	r4,31
  22b9ac:	20ff890e 	bge	r4,r3,22b7d4 <_gp+0xffff0c4c>
  22b9b0:	10bff604 	addi	r2,r2,-40
  22b9b4:	8884983a 	sll	r2,r17,r2
  22b9b8:	0023883a 	mov	r17,zero
  22b9bc:	1c3f8c0e 	bge	r3,r16,22b7f0 <_gp+0xffff0c68>
  22b9c0:	023fe034 	movhi	r8,65408
  22b9c4:	423fffc4 	addi	r8,r8,-1
  22b9c8:	80e1c83a 	sub	r16,r16,r3
  22b9cc:	1210703a 	and	r8,r2,r8
  22b9d0:	003f3806 	br	22b6b4 <_gp+0xffff0b2c>
  22b9d4:	9007883a 	mov	r3,r18
  22b9d8:	0011883a 	mov	r8,zero
  22b9dc:	0005883a 	mov	r2,zero
  22b9e0:	003f4c06 	br	22b714 <_gp+0xffff0b8c>
  22b9e4:	498cb03a 	or	r6,r9,r6
  22b9e8:	300cc03a 	cmpne	r6,r6,zero
  22b9ec:	0007883a 	mov	r3,zero
  22b9f0:	003f6806 	br	22b794 <_gp+0xffff0c0c>
  22b9f4:	20009c1e 	bne	r4,zero,22bc68 <__adddf3+0x630>
  22b9f8:	80800044 	addi	r2,r16,1
  22b9fc:	1141ffcc 	andi	r5,r2,2047
  22ba00:	01000044 	movi	r4,1
  22ba04:	2140670e 	bge	r4,r5,22bba4 <__adddf3+0x56c>
  22ba08:	0101ffc4 	movi	r4,2047
  22ba0c:	11007f26 	beq	r2,r4,22bc0c <__adddf3+0x5d4>
  22ba10:	898d883a 	add	r6,r17,r6
  22ba14:	4247883a 	add	r3,r8,r9
  22ba18:	3451803a 	cmpltu	r8,r6,r17
  22ba1c:	40d1883a 	add	r8,r8,r3
  22ba20:	402297fa 	slli	r17,r8,31
  22ba24:	300cd07a 	srli	r6,r6,1
  22ba28:	4010d07a 	srli	r8,r8,1
  22ba2c:	1021883a 	mov	r16,r2
  22ba30:	89a2b03a 	or	r17,r17,r6
  22ba34:	003f1f06 	br	22b6b4 <_gp+0xffff0b2c>
  22ba38:	0081ffc4 	movi	r2,2047
  22ba3c:	80bf481e 	bne	r16,r2,22b760 <_gp+0xffff0bd8>
  22ba40:	003f1c06 	br	22b6b4 <_gp+0xffff0b2c>
  22ba44:	843ff844 	addi	r16,r16,-31
  22ba48:	01000804 	movi	r4,32
  22ba4c:	1406d83a 	srl	r3,r2,r16
  22ba50:	41005026 	beq	r8,r4,22bb94 <__adddf3+0x55c>
  22ba54:	01001004 	movi	r4,64
  22ba58:	2211c83a 	sub	r8,r4,r8
  22ba5c:	1204983a 	sll	r2,r2,r8
  22ba60:	88a2b03a 	or	r17,r17,r2
  22ba64:	8822c03a 	cmpne	r17,r17,zero
  22ba68:	1c62b03a 	or	r17,r3,r17
  22ba6c:	0011883a 	mov	r8,zero
  22ba70:	0021883a 	mov	r16,zero
  22ba74:	003f7106 	br	22b83c <_gp+0xffff0cb4>
  22ba78:	193ff804 	addi	r4,r3,-32
  22ba7c:	00800804 	movi	r2,32
  22ba80:	4908d83a 	srl	r4,r9,r4
  22ba84:	18804526 	beq	r3,r2,22bb9c <__adddf3+0x564>
  22ba88:	00801004 	movi	r2,64
  22ba8c:	10c5c83a 	sub	r2,r2,r3
  22ba90:	4886983a 	sll	r3,r9,r2
  22ba94:	198cb03a 	or	r6,r3,r6
  22ba98:	300cc03a 	cmpne	r6,r6,zero
  22ba9c:	218cb03a 	or	r6,r4,r6
  22baa0:	0007883a 	mov	r3,zero
  22baa4:	003f3b06 	br	22b794 <_gp+0xffff0c0c>
  22baa8:	80002a26 	beq	r16,zero,22bb54 <__adddf3+0x51c>
  22baac:	0101ffc4 	movi	r4,2047
  22bab0:	11006826 	beq	r2,r4,22bc54 <__adddf3+0x61c>
  22bab4:	00c7c83a 	sub	r3,zero,r3
  22bab8:	42002034 	orhi	r8,r8,128
  22babc:	01000e04 	movi	r4,56
  22bac0:	20c07c16 	blt	r4,r3,22bcb4 <__adddf3+0x67c>
  22bac4:	010007c4 	movi	r4,31
  22bac8:	20c0da16 	blt	r4,r3,22be34 <__adddf3+0x7fc>
  22bacc:	01000804 	movi	r4,32
  22bad0:	20c9c83a 	sub	r4,r4,r3
  22bad4:	4114983a 	sll	r10,r8,r4
  22bad8:	88cad83a 	srl	r5,r17,r3
  22badc:	8908983a 	sll	r4,r17,r4
  22bae0:	40c6d83a 	srl	r3,r8,r3
  22bae4:	5162b03a 	or	r17,r10,r5
  22bae8:	2008c03a 	cmpne	r4,r4,zero
  22baec:	8922b03a 	or	r17,r17,r4
  22baf0:	3463c83a 	sub	r17,r6,r17
  22baf4:	48c7c83a 	sub	r3,r9,r3
  22baf8:	344d803a 	cmpltu	r6,r6,r17
  22bafc:	1991c83a 	sub	r8,r3,r6
  22bb00:	1021883a 	mov	r16,r2
  22bb04:	3825883a 	mov	r18,r7
  22bb08:	003f2706 	br	22b7a8 <_gp+0xffff0c20>
  22bb0c:	24d0b03a 	or	r8,r4,r19
  22bb10:	40001b1e 	bne	r8,zero,22bb80 <__adddf3+0x548>
  22bb14:	0005883a 	mov	r2,zero
  22bb18:	0007883a 	mov	r3,zero
  22bb1c:	0021883a 	mov	r16,zero
  22bb20:	003f4d06 	br	22b858 <_gp+0xffff0cd0>
  22bb24:	008007c4 	movi	r2,31
  22bb28:	11003c16 	blt	r2,r4,22bc1c <__adddf3+0x5e4>
  22bb2c:	00800804 	movi	r2,32
  22bb30:	1105c83a 	sub	r2,r2,r4
  22bb34:	488e983a 	sll	r7,r9,r2
  22bb38:	310ad83a 	srl	r5,r6,r4
  22bb3c:	3084983a 	sll	r2,r6,r2
  22bb40:	4912d83a 	srl	r9,r9,r4
  22bb44:	394ab03a 	or	r5,r7,r5
  22bb48:	1004c03a 	cmpne	r2,r2,zero
  22bb4c:	288ab03a 	or	r5,r5,r2
  22bb50:	003f5306 	br	22b8a0 <_gp+0xffff0d18>
  22bb54:	4448b03a 	or	r4,r8,r17
  22bb58:	20003e26 	beq	r4,zero,22bc54 <__adddf3+0x61c>
  22bb5c:	00c6303a 	nor	r3,zero,r3
  22bb60:	18003a1e 	bne	r3,zero,22bc4c <__adddf3+0x614>
  22bb64:	3463c83a 	sub	r17,r6,r17
  22bb68:	4a07c83a 	sub	r3,r9,r8
  22bb6c:	344d803a 	cmpltu	r6,r6,r17
  22bb70:	1991c83a 	sub	r8,r3,r6
  22bb74:	1021883a 	mov	r16,r2
  22bb78:	3825883a 	mov	r18,r7
  22bb7c:	003f0a06 	br	22b7a8 <_gp+0xffff0c20>
  22bb80:	2023883a 	mov	r17,r4
  22bb84:	003f0d06 	br	22b7bc <_gp+0xffff0c34>
  22bb88:	0081ffc4 	movi	r2,2047
  22bb8c:	80bf3f1e 	bne	r16,r2,22b88c <_gp+0xffff0d04>
  22bb90:	003ec806 	br	22b6b4 <_gp+0xffff0b2c>
  22bb94:	0005883a 	mov	r2,zero
  22bb98:	003fb106 	br	22ba60 <_gp+0xffff0ed8>
  22bb9c:	0007883a 	mov	r3,zero
  22bba0:	003fbc06 	br	22ba94 <_gp+0xffff0f0c>
  22bba4:	4444b03a 	or	r2,r8,r17
  22bba8:	8000871e 	bne	r16,zero,22bdc8 <__adddf3+0x790>
  22bbac:	1000ba26 	beq	r2,zero,22be98 <__adddf3+0x860>
  22bbb0:	4984b03a 	or	r2,r9,r6
  22bbb4:	103ebf26 	beq	r2,zero,22b6b4 <_gp+0xffff0b2c>
  22bbb8:	8985883a 	add	r2,r17,r6
  22bbbc:	4247883a 	add	r3,r8,r9
  22bbc0:	1451803a 	cmpltu	r8,r2,r17
  22bbc4:	40d1883a 	add	r8,r8,r3
  22bbc8:	40c0202c 	andhi	r3,r8,128
  22bbcc:	1023883a 	mov	r17,r2
  22bbd0:	183f1a26 	beq	r3,zero,22b83c <_gp+0xffff0cb4>
  22bbd4:	00bfe034 	movhi	r2,65408
  22bbd8:	10bfffc4 	addi	r2,r2,-1
  22bbdc:	2021883a 	mov	r16,r4
  22bbe0:	4090703a 	and	r8,r8,r2
  22bbe4:	003eb306 	br	22b6b4 <_gp+0xffff0b2c>
  22bbe8:	4444b03a 	or	r2,r8,r17
  22bbec:	8000291e 	bne	r16,zero,22bc94 <__adddf3+0x65c>
  22bbf0:	10004b1e 	bne	r2,zero,22bd20 <__adddf3+0x6e8>
  22bbf4:	4990b03a 	or	r8,r9,r6
  22bbf8:	40008b26 	beq	r8,zero,22be28 <__adddf3+0x7f0>
  22bbfc:	4811883a 	mov	r8,r9
  22bc00:	3023883a 	mov	r17,r6
  22bc04:	3825883a 	mov	r18,r7
  22bc08:	003eaa06 	br	22b6b4 <_gp+0xffff0b2c>
  22bc0c:	1021883a 	mov	r16,r2
  22bc10:	0011883a 	mov	r8,zero
  22bc14:	0005883a 	mov	r2,zero
  22bc18:	003f0f06 	br	22b858 <_gp+0xffff0cd0>
  22bc1c:	217ff804 	addi	r5,r4,-32
  22bc20:	00800804 	movi	r2,32
  22bc24:	494ad83a 	srl	r5,r9,r5
  22bc28:	20807d26 	beq	r4,r2,22be20 <__adddf3+0x7e8>
  22bc2c:	00801004 	movi	r2,64
  22bc30:	1109c83a 	sub	r4,r2,r4
  22bc34:	4912983a 	sll	r9,r9,r4
  22bc38:	498cb03a 	or	r6,r9,r6
  22bc3c:	300cc03a 	cmpne	r6,r6,zero
  22bc40:	298ab03a 	or	r5,r5,r6
  22bc44:	0013883a 	mov	r9,zero
  22bc48:	003f1506 	br	22b8a0 <_gp+0xffff0d18>
  22bc4c:	0101ffc4 	movi	r4,2047
  22bc50:	113f9a1e 	bne	r2,r4,22babc <_gp+0xffff0f34>
  22bc54:	4811883a 	mov	r8,r9
  22bc58:	3023883a 	mov	r17,r6
  22bc5c:	1021883a 	mov	r16,r2
  22bc60:	3825883a 	mov	r18,r7
  22bc64:	003e9306 	br	22b6b4 <_gp+0xffff0b2c>
  22bc68:	8000161e 	bne	r16,zero,22bcc4 <__adddf3+0x68c>
  22bc6c:	444ab03a 	or	r5,r8,r17
  22bc70:	28005126 	beq	r5,zero,22bdb8 <__adddf3+0x780>
  22bc74:	0108303a 	nor	r4,zero,r4
  22bc78:	20004d1e 	bne	r4,zero,22bdb0 <__adddf3+0x778>
  22bc7c:	89a3883a 	add	r17,r17,r6
  22bc80:	4253883a 	add	r9,r8,r9
  22bc84:	898d803a 	cmpltu	r6,r17,r6
  22bc88:	3251883a 	add	r8,r6,r9
  22bc8c:	1021883a 	mov	r16,r2
  22bc90:	003f0806 	br	22b8b4 <_gp+0xffff0d2c>
  22bc94:	1000301e 	bne	r2,zero,22bd58 <__adddf3+0x720>
  22bc98:	4984b03a 	or	r2,r9,r6
  22bc9c:	10007126 	beq	r2,zero,22be64 <__adddf3+0x82c>
  22bca0:	4811883a 	mov	r8,r9
  22bca4:	3023883a 	mov	r17,r6
  22bca8:	3825883a 	mov	r18,r7
  22bcac:	0401ffc4 	movi	r16,2047
  22bcb0:	003e8006 	br	22b6b4 <_gp+0xffff0b2c>
  22bcb4:	4462b03a 	or	r17,r8,r17
  22bcb8:	8822c03a 	cmpne	r17,r17,zero
  22bcbc:	0007883a 	mov	r3,zero
  22bcc0:	003f8b06 	br	22baf0 <_gp+0xffff0f68>
  22bcc4:	0141ffc4 	movi	r5,2047
  22bcc8:	11403b26 	beq	r2,r5,22bdb8 <__adddf3+0x780>
  22bccc:	0109c83a 	sub	r4,zero,r4
  22bcd0:	42002034 	orhi	r8,r8,128
  22bcd4:	01400e04 	movi	r5,56
  22bcd8:	29006716 	blt	r5,r4,22be78 <__adddf3+0x840>
  22bcdc:	014007c4 	movi	r5,31
  22bce0:	29007016 	blt	r5,r4,22bea4 <__adddf3+0x86c>
  22bce4:	01400804 	movi	r5,32
  22bce8:	290bc83a 	sub	r5,r5,r4
  22bcec:	4154983a 	sll	r10,r8,r5
  22bcf0:	890ed83a 	srl	r7,r17,r4
  22bcf4:	894a983a 	sll	r5,r17,r5
  22bcf8:	4108d83a 	srl	r4,r8,r4
  22bcfc:	51e2b03a 	or	r17,r10,r7
  22bd00:	280ac03a 	cmpne	r5,r5,zero
  22bd04:	8962b03a 	or	r17,r17,r5
  22bd08:	89a3883a 	add	r17,r17,r6
  22bd0c:	2253883a 	add	r9,r4,r9
  22bd10:	898d803a 	cmpltu	r6,r17,r6
  22bd14:	3251883a 	add	r8,r6,r9
  22bd18:	1021883a 	mov	r16,r2
  22bd1c:	003ee506 	br	22b8b4 <_gp+0xffff0d2c>
  22bd20:	4984b03a 	or	r2,r9,r6
  22bd24:	103e6326 	beq	r2,zero,22b6b4 <_gp+0xffff0b2c>
  22bd28:	8987c83a 	sub	r3,r17,r6
  22bd2c:	88c9803a 	cmpltu	r4,r17,r3
  22bd30:	4245c83a 	sub	r2,r8,r9
  22bd34:	1105c83a 	sub	r2,r2,r4
  22bd38:	1100202c 	andhi	r4,r2,128
  22bd3c:	203ebb26 	beq	r4,zero,22b82c <_gp+0xffff0ca4>
  22bd40:	3463c83a 	sub	r17,r6,r17
  22bd44:	4a07c83a 	sub	r3,r9,r8
  22bd48:	344d803a 	cmpltu	r6,r6,r17
  22bd4c:	1991c83a 	sub	r8,r3,r6
  22bd50:	3825883a 	mov	r18,r7
  22bd54:	003e5706 	br	22b6b4 <_gp+0xffff0b2c>
  22bd58:	4984b03a 	or	r2,r9,r6
  22bd5c:	10002e26 	beq	r2,zero,22be18 <__adddf3+0x7e0>
  22bd60:	4004d0fa 	srli	r2,r8,3
  22bd64:	8822d0fa 	srli	r17,r17,3
  22bd68:	4010977a 	slli	r8,r8,29
  22bd6c:	10c0022c 	andhi	r3,r2,8
  22bd70:	4462b03a 	or	r17,r8,r17
  22bd74:	18000826 	beq	r3,zero,22bd98 <__adddf3+0x760>
  22bd78:	4808d0fa 	srli	r4,r9,3
  22bd7c:	20c0022c 	andhi	r3,r4,8
  22bd80:	1800051e 	bne	r3,zero,22bd98 <__adddf3+0x760>
  22bd84:	300cd0fa 	srli	r6,r6,3
  22bd88:	4806977a 	slli	r3,r9,29
  22bd8c:	2005883a 	mov	r2,r4
  22bd90:	3825883a 	mov	r18,r7
  22bd94:	19a2b03a 	or	r17,r3,r6
  22bd98:	8810d77a 	srli	r8,r17,29
  22bd9c:	100490fa 	slli	r2,r2,3
  22bda0:	882290fa 	slli	r17,r17,3
  22bda4:	0401ffc4 	movi	r16,2047
  22bda8:	4090b03a 	or	r8,r8,r2
  22bdac:	003e4106 	br	22b6b4 <_gp+0xffff0b2c>
  22bdb0:	0141ffc4 	movi	r5,2047
  22bdb4:	117fc71e 	bne	r2,r5,22bcd4 <_gp+0xffff114c>
  22bdb8:	4811883a 	mov	r8,r9
  22bdbc:	3023883a 	mov	r17,r6
  22bdc0:	1021883a 	mov	r16,r2
  22bdc4:	003e3b06 	br	22b6b4 <_gp+0xffff0b2c>
  22bdc8:	10002f26 	beq	r2,zero,22be88 <__adddf3+0x850>
  22bdcc:	4984b03a 	or	r2,r9,r6
  22bdd0:	10001126 	beq	r2,zero,22be18 <__adddf3+0x7e0>
  22bdd4:	4004d0fa 	srli	r2,r8,3
  22bdd8:	8822d0fa 	srli	r17,r17,3
  22bddc:	4010977a 	slli	r8,r8,29
  22bde0:	10c0022c 	andhi	r3,r2,8
  22bde4:	4462b03a 	or	r17,r8,r17
  22bde8:	183feb26 	beq	r3,zero,22bd98 <_gp+0xffff1210>
  22bdec:	4808d0fa 	srli	r4,r9,3
  22bdf0:	20c0022c 	andhi	r3,r4,8
  22bdf4:	183fe81e 	bne	r3,zero,22bd98 <_gp+0xffff1210>
  22bdf8:	300cd0fa 	srli	r6,r6,3
  22bdfc:	4806977a 	slli	r3,r9,29
  22be00:	2005883a 	mov	r2,r4
  22be04:	19a2b03a 	or	r17,r3,r6
  22be08:	003fe306 	br	22bd98 <_gp+0xffff1210>
  22be0c:	0011883a 	mov	r8,zero
  22be10:	0005883a 	mov	r2,zero
  22be14:	003e3f06 	br	22b714 <_gp+0xffff0b8c>
  22be18:	0401ffc4 	movi	r16,2047
  22be1c:	003e2506 	br	22b6b4 <_gp+0xffff0b2c>
  22be20:	0013883a 	mov	r9,zero
  22be24:	003f8406 	br	22bc38 <_gp+0xffff10b0>
  22be28:	0005883a 	mov	r2,zero
  22be2c:	0007883a 	mov	r3,zero
  22be30:	003e8906 	br	22b858 <_gp+0xffff0cd0>
  22be34:	197ff804 	addi	r5,r3,-32
  22be38:	01000804 	movi	r4,32
  22be3c:	414ad83a 	srl	r5,r8,r5
  22be40:	19002426 	beq	r3,r4,22bed4 <__adddf3+0x89c>
  22be44:	01001004 	movi	r4,64
  22be48:	20c7c83a 	sub	r3,r4,r3
  22be4c:	40c6983a 	sll	r3,r8,r3
  22be50:	1c46b03a 	or	r3,r3,r17
  22be54:	1806c03a 	cmpne	r3,r3,zero
  22be58:	28e2b03a 	or	r17,r5,r3
  22be5c:	0007883a 	mov	r3,zero
  22be60:	003f2306 	br	22baf0 <_gp+0xffff0f68>
  22be64:	0007883a 	mov	r3,zero
  22be68:	5811883a 	mov	r8,r11
  22be6c:	00bfffc4 	movi	r2,-1
  22be70:	0401ffc4 	movi	r16,2047
  22be74:	003e7806 	br	22b858 <_gp+0xffff0cd0>
  22be78:	4462b03a 	or	r17,r8,r17
  22be7c:	8822c03a 	cmpne	r17,r17,zero
  22be80:	0009883a 	mov	r4,zero
  22be84:	003fa006 	br	22bd08 <_gp+0xffff1180>
  22be88:	4811883a 	mov	r8,r9
  22be8c:	3023883a 	mov	r17,r6
  22be90:	0401ffc4 	movi	r16,2047
  22be94:	003e0706 	br	22b6b4 <_gp+0xffff0b2c>
  22be98:	4811883a 	mov	r8,r9
  22be9c:	3023883a 	mov	r17,r6
  22bea0:	003e0406 	br	22b6b4 <_gp+0xffff0b2c>
  22bea4:	21fff804 	addi	r7,r4,-32
  22bea8:	01400804 	movi	r5,32
  22beac:	41ced83a 	srl	r7,r8,r7
  22beb0:	21400a26 	beq	r4,r5,22bedc <__adddf3+0x8a4>
  22beb4:	01401004 	movi	r5,64
  22beb8:	2909c83a 	sub	r4,r5,r4
  22bebc:	4108983a 	sll	r4,r8,r4
  22bec0:	2448b03a 	or	r4,r4,r17
  22bec4:	2008c03a 	cmpne	r4,r4,zero
  22bec8:	3922b03a 	or	r17,r7,r4
  22becc:	0009883a 	mov	r4,zero
  22bed0:	003f8d06 	br	22bd08 <_gp+0xffff1180>
  22bed4:	0007883a 	mov	r3,zero
  22bed8:	003fdd06 	br	22be50 <_gp+0xffff12c8>
  22bedc:	0009883a 	mov	r4,zero
  22bee0:	003ff706 	br	22bec0 <_gp+0xffff1338>

0022bee4 <__divdf3>:
  22bee4:	defff204 	addi	sp,sp,-56
  22bee8:	dd400915 	stw	r21,36(sp)
  22beec:	282ad53a 	srli	r21,r5,20
  22bef0:	dd000815 	stw	r20,32(sp)
  22bef4:	2828d7fa 	srli	r20,r5,31
  22bef8:	dc000415 	stw	r16,16(sp)
  22befc:	04000434 	movhi	r16,16
  22bf00:	df000c15 	stw	fp,48(sp)
  22bf04:	843fffc4 	addi	r16,r16,-1
  22bf08:	dfc00d15 	stw	ra,52(sp)
  22bf0c:	ddc00b15 	stw	r23,44(sp)
  22bf10:	dd800a15 	stw	r22,40(sp)
  22bf14:	dcc00715 	stw	r19,28(sp)
  22bf18:	dc800615 	stw	r18,24(sp)
  22bf1c:	dc400515 	stw	r17,20(sp)
  22bf20:	ad41ffcc 	andi	r21,r21,2047
  22bf24:	2c20703a 	and	r16,r5,r16
  22bf28:	a7003fcc 	andi	fp,r20,255
  22bf2c:	a8006126 	beq	r21,zero,22c0b4 <__divdf3+0x1d0>
  22bf30:	0081ffc4 	movi	r2,2047
  22bf34:	2025883a 	mov	r18,r4
  22bf38:	a8803726 	beq	r21,r2,22c018 <__divdf3+0x134>
  22bf3c:	80800434 	orhi	r2,r16,16
  22bf40:	100490fa 	slli	r2,r2,3
  22bf44:	2020d77a 	srli	r16,r4,29
  22bf48:	202490fa 	slli	r18,r4,3
  22bf4c:	ad7f0044 	addi	r21,r21,-1023
  22bf50:	80a0b03a 	or	r16,r16,r2
  22bf54:	0027883a 	mov	r19,zero
  22bf58:	0013883a 	mov	r9,zero
  22bf5c:	3804d53a 	srli	r2,r7,20
  22bf60:	382cd7fa 	srli	r22,r7,31
  22bf64:	04400434 	movhi	r17,16
  22bf68:	8c7fffc4 	addi	r17,r17,-1
  22bf6c:	1081ffcc 	andi	r2,r2,2047
  22bf70:	3011883a 	mov	r8,r6
  22bf74:	3c62703a 	and	r17,r7,r17
  22bf78:	b5c03fcc 	andi	r23,r22,255
  22bf7c:	10006c26 	beq	r2,zero,22c130 <__divdf3+0x24c>
  22bf80:	00c1ffc4 	movi	r3,2047
  22bf84:	10c06426 	beq	r2,r3,22c118 <__divdf3+0x234>
  22bf88:	88c00434 	orhi	r3,r17,16
  22bf8c:	180690fa 	slli	r3,r3,3
  22bf90:	3022d77a 	srli	r17,r6,29
  22bf94:	301090fa 	slli	r8,r6,3
  22bf98:	10bf0044 	addi	r2,r2,-1023
  22bf9c:	88e2b03a 	or	r17,r17,r3
  22bfa0:	000f883a 	mov	r7,zero
  22bfa4:	a58cf03a 	xor	r6,r20,r22
  22bfa8:	3cc8b03a 	or	r4,r7,r19
  22bfac:	a8abc83a 	sub	r21,r21,r2
  22bfb0:	008003c4 	movi	r2,15
  22bfb4:	3007883a 	mov	r3,r6
  22bfb8:	34c03fcc 	andi	r19,r6,255
  22bfbc:	11009036 	bltu	r2,r4,22c200 <__divdf3+0x31c>
  22bfc0:	200890ba 	slli	r4,r4,2
  22bfc4:	008008f4 	movhi	r2,35
  22bfc8:	10aff604 	addi	r2,r2,-16424
  22bfcc:	2089883a 	add	r4,r4,r2
  22bfd0:	20800017 	ldw	r2,0(r4)
  22bfd4:	1000683a 	jmp	r2
  22bfd8:	0022c200 	call	22c20 <__alt_mem_OnChip_Memory-0x1fd3e0>
  22bfdc:	0022c050 	cmplti	zero,zero,-29951
  22bfe0:	0022c1f0 	cmpltui	zero,zero,35591
  22bfe4:	0022c044 	movi	zero,-29951
  22bfe8:	0022c1f0 	cmpltui	zero,zero,35591
  22bfec:	0022c1c4 	movi	zero,-29945
  22bff0:	0022c1f0 	cmpltui	zero,zero,35591
  22bff4:	0022c044 	movi	zero,-29951
  22bff8:	0022c050 	cmplti	zero,zero,-29951
  22bffc:	0022c050 	cmplti	zero,zero,-29951
  22c000:	0022c1c4 	movi	zero,-29945
  22c004:	0022c044 	movi	zero,-29951
  22c008:	0022c034 	movhi	zero,35584
  22c00c:	0022c034 	movhi	zero,35584
  22c010:	0022c034 	movhi	zero,35584
  22c014:	0022c4e4 	muli	zero,zero,-29933
  22c018:	2404b03a 	or	r2,r4,r16
  22c01c:	1000661e 	bne	r2,zero,22c1b8 <__divdf3+0x2d4>
  22c020:	04c00204 	movi	r19,8
  22c024:	0021883a 	mov	r16,zero
  22c028:	0025883a 	mov	r18,zero
  22c02c:	02400084 	movi	r9,2
  22c030:	003fca06 	br	22bf5c <_gp+0xffff13d4>
  22c034:	8023883a 	mov	r17,r16
  22c038:	9011883a 	mov	r8,r18
  22c03c:	e02f883a 	mov	r23,fp
  22c040:	480f883a 	mov	r7,r9
  22c044:	00800084 	movi	r2,2
  22c048:	3881311e 	bne	r7,r2,22c510 <__divdf3+0x62c>
  22c04c:	b827883a 	mov	r19,r23
  22c050:	98c0004c 	andi	r3,r19,1
  22c054:	0081ffc4 	movi	r2,2047
  22c058:	000b883a 	mov	r5,zero
  22c05c:	0025883a 	mov	r18,zero
  22c060:	1004953a 	slli	r2,r2,20
  22c064:	18c03fcc 	andi	r3,r3,255
  22c068:	04400434 	movhi	r17,16
  22c06c:	8c7fffc4 	addi	r17,r17,-1
  22c070:	180697fa 	slli	r3,r3,31
  22c074:	2c4a703a 	and	r5,r5,r17
  22c078:	288ab03a 	or	r5,r5,r2
  22c07c:	28c6b03a 	or	r3,r5,r3
  22c080:	9005883a 	mov	r2,r18
  22c084:	dfc00d17 	ldw	ra,52(sp)
  22c088:	df000c17 	ldw	fp,48(sp)
  22c08c:	ddc00b17 	ldw	r23,44(sp)
  22c090:	dd800a17 	ldw	r22,40(sp)
  22c094:	dd400917 	ldw	r21,36(sp)
  22c098:	dd000817 	ldw	r20,32(sp)
  22c09c:	dcc00717 	ldw	r19,28(sp)
  22c0a0:	dc800617 	ldw	r18,24(sp)
  22c0a4:	dc400517 	ldw	r17,20(sp)
  22c0a8:	dc000417 	ldw	r16,16(sp)
  22c0ac:	dec00e04 	addi	sp,sp,56
  22c0b0:	f800283a 	ret
  22c0b4:	2404b03a 	or	r2,r4,r16
  22c0b8:	2027883a 	mov	r19,r4
  22c0bc:	10003926 	beq	r2,zero,22c1a4 <__divdf3+0x2c0>
  22c0c0:	80012e26 	beq	r16,zero,22c57c <__divdf3+0x698>
  22c0c4:	8009883a 	mov	r4,r16
  22c0c8:	d9800315 	stw	r6,12(sp)
  22c0cc:	d9c00215 	stw	r7,8(sp)
  22c0d0:	022dc3c0 	call	22dc3c <__clzsi2>
  22c0d4:	d9800317 	ldw	r6,12(sp)
  22c0d8:	d9c00217 	ldw	r7,8(sp)
  22c0dc:	113ffd44 	addi	r4,r2,-11
  22c0e0:	00c00704 	movi	r3,28
  22c0e4:	19012116 	blt	r3,r4,22c56c <__divdf3+0x688>
  22c0e8:	00c00744 	movi	r3,29
  22c0ec:	147ffe04 	addi	r17,r2,-8
  22c0f0:	1907c83a 	sub	r3,r3,r4
  22c0f4:	8460983a 	sll	r16,r16,r17
  22c0f8:	98c6d83a 	srl	r3,r19,r3
  22c0fc:	9c64983a 	sll	r18,r19,r17
  22c100:	1c20b03a 	or	r16,r3,r16
  22c104:	1080fcc4 	addi	r2,r2,1011
  22c108:	00abc83a 	sub	r21,zero,r2
  22c10c:	0027883a 	mov	r19,zero
  22c110:	0013883a 	mov	r9,zero
  22c114:	003f9106 	br	22bf5c <_gp+0xffff13d4>
  22c118:	3446b03a 	or	r3,r6,r17
  22c11c:	18001f1e 	bne	r3,zero,22c19c <__divdf3+0x2b8>
  22c120:	0023883a 	mov	r17,zero
  22c124:	0011883a 	mov	r8,zero
  22c128:	01c00084 	movi	r7,2
  22c12c:	003f9d06 	br	22bfa4 <_gp+0xffff141c>
  22c130:	3446b03a 	or	r3,r6,r17
  22c134:	18001526 	beq	r3,zero,22c18c <__divdf3+0x2a8>
  22c138:	88011b26 	beq	r17,zero,22c5a8 <__divdf3+0x6c4>
  22c13c:	8809883a 	mov	r4,r17
  22c140:	d9800315 	stw	r6,12(sp)
  22c144:	da400115 	stw	r9,4(sp)
  22c148:	022dc3c0 	call	22dc3c <__clzsi2>
  22c14c:	d9800317 	ldw	r6,12(sp)
  22c150:	da400117 	ldw	r9,4(sp)
  22c154:	113ffd44 	addi	r4,r2,-11
  22c158:	00c00704 	movi	r3,28
  22c15c:	19010e16 	blt	r3,r4,22c598 <__divdf3+0x6b4>
  22c160:	00c00744 	movi	r3,29
  22c164:	123ffe04 	addi	r8,r2,-8
  22c168:	1907c83a 	sub	r3,r3,r4
  22c16c:	8a22983a 	sll	r17,r17,r8
  22c170:	30c6d83a 	srl	r3,r6,r3
  22c174:	3210983a 	sll	r8,r6,r8
  22c178:	1c62b03a 	or	r17,r3,r17
  22c17c:	1080fcc4 	addi	r2,r2,1011
  22c180:	0085c83a 	sub	r2,zero,r2
  22c184:	000f883a 	mov	r7,zero
  22c188:	003f8606 	br	22bfa4 <_gp+0xffff141c>
  22c18c:	0023883a 	mov	r17,zero
  22c190:	0011883a 	mov	r8,zero
  22c194:	01c00044 	movi	r7,1
  22c198:	003f8206 	br	22bfa4 <_gp+0xffff141c>
  22c19c:	01c000c4 	movi	r7,3
  22c1a0:	003f8006 	br	22bfa4 <_gp+0xffff141c>
  22c1a4:	04c00104 	movi	r19,4
  22c1a8:	0021883a 	mov	r16,zero
  22c1ac:	0025883a 	mov	r18,zero
  22c1b0:	02400044 	movi	r9,1
  22c1b4:	003f6906 	br	22bf5c <_gp+0xffff13d4>
  22c1b8:	04c00304 	movi	r19,12
  22c1bc:	024000c4 	movi	r9,3
  22c1c0:	003f6606 	br	22bf5c <_gp+0xffff13d4>
  22c1c4:	01400434 	movhi	r5,16
  22c1c8:	0007883a 	mov	r3,zero
  22c1cc:	297fffc4 	addi	r5,r5,-1
  22c1d0:	04bfffc4 	movi	r18,-1
  22c1d4:	0081ffc4 	movi	r2,2047
  22c1d8:	003fa106 	br	22c060 <_gp+0xffff14d8>
  22c1dc:	00c00044 	movi	r3,1
  22c1e0:	1887c83a 	sub	r3,r3,r2
  22c1e4:	01000e04 	movi	r4,56
  22c1e8:	20c1210e 	bge	r4,r3,22c670 <__divdf3+0x78c>
  22c1ec:	98c0004c 	andi	r3,r19,1
  22c1f0:	0005883a 	mov	r2,zero
  22c1f4:	000b883a 	mov	r5,zero
  22c1f8:	0025883a 	mov	r18,zero
  22c1fc:	003f9806 	br	22c060 <_gp+0xffff14d8>
  22c200:	8c00fd36 	bltu	r17,r16,22c5f8 <__divdf3+0x714>
  22c204:	8440fb26 	beq	r16,r17,22c5f4 <__divdf3+0x710>
  22c208:	8007883a 	mov	r3,r16
  22c20c:	ad7fffc4 	addi	r21,r21,-1
  22c210:	0021883a 	mov	r16,zero
  22c214:	4004d63a 	srli	r2,r8,24
  22c218:	8822923a 	slli	r17,r17,8
  22c21c:	1809883a 	mov	r4,r3
  22c220:	402c923a 	slli	r22,r8,8
  22c224:	88b8b03a 	or	fp,r17,r2
  22c228:	e028d43a 	srli	r20,fp,16
  22c22c:	d8c00015 	stw	r3,0(sp)
  22c230:	e5ffffcc 	andi	r23,fp,65535
  22c234:	a00b883a 	mov	r5,r20
  22c238:	022b57c0 	call	22b57c <__udivsi3>
  22c23c:	d8c00017 	ldw	r3,0(sp)
  22c240:	a00b883a 	mov	r5,r20
  22c244:	d8800315 	stw	r2,12(sp)
  22c248:	1809883a 	mov	r4,r3
  22c24c:	022b5e00 	call	22b5e0 <__umodsi3>
  22c250:	d9800317 	ldw	r6,12(sp)
  22c254:	1006943a 	slli	r3,r2,16
  22c258:	9004d43a 	srli	r2,r18,16
  22c25c:	b9a3383a 	mul	r17,r23,r6
  22c260:	10c4b03a 	or	r2,r2,r3
  22c264:	1440062e 	bgeu	r2,r17,22c280 <__divdf3+0x39c>
  22c268:	1705883a 	add	r2,r2,fp
  22c26c:	30ffffc4 	addi	r3,r6,-1
  22c270:	1700ee36 	bltu	r2,fp,22c62c <__divdf3+0x748>
  22c274:	1440ed2e 	bgeu	r2,r17,22c62c <__divdf3+0x748>
  22c278:	31bfff84 	addi	r6,r6,-2
  22c27c:	1705883a 	add	r2,r2,fp
  22c280:	1463c83a 	sub	r17,r2,r17
  22c284:	a00b883a 	mov	r5,r20
  22c288:	8809883a 	mov	r4,r17
  22c28c:	d9800315 	stw	r6,12(sp)
  22c290:	022b57c0 	call	22b57c <__udivsi3>
  22c294:	a00b883a 	mov	r5,r20
  22c298:	8809883a 	mov	r4,r17
  22c29c:	d8800215 	stw	r2,8(sp)
  22c2a0:	022b5e00 	call	22b5e0 <__umodsi3>
  22c2a4:	d9c00217 	ldw	r7,8(sp)
  22c2a8:	1004943a 	slli	r2,r2,16
  22c2ac:	94bfffcc 	andi	r18,r18,65535
  22c2b0:	b9d1383a 	mul	r8,r23,r7
  22c2b4:	90a4b03a 	or	r18,r18,r2
  22c2b8:	d9800317 	ldw	r6,12(sp)
  22c2bc:	9200062e 	bgeu	r18,r8,22c2d8 <__divdf3+0x3f4>
  22c2c0:	9725883a 	add	r18,r18,fp
  22c2c4:	38bfffc4 	addi	r2,r7,-1
  22c2c8:	9700d636 	bltu	r18,fp,22c624 <__divdf3+0x740>
  22c2cc:	9200d52e 	bgeu	r18,r8,22c624 <__divdf3+0x740>
  22c2d0:	39ffff84 	addi	r7,r7,-2
  22c2d4:	9725883a 	add	r18,r18,fp
  22c2d8:	3004943a 	slli	r2,r6,16
  22c2dc:	b012d43a 	srli	r9,r22,16
  22c2e0:	b1bfffcc 	andi	r6,r22,65535
  22c2e4:	11e2b03a 	or	r17,r2,r7
  22c2e8:	8806d43a 	srli	r3,r17,16
  22c2ec:	893fffcc 	andi	r4,r17,65535
  22c2f0:	218b383a 	mul	r5,r4,r6
  22c2f4:	30c5383a 	mul	r2,r6,r3
  22c2f8:	2249383a 	mul	r4,r4,r9
  22c2fc:	280ed43a 	srli	r7,r5,16
  22c300:	9225c83a 	sub	r18,r18,r8
  22c304:	2089883a 	add	r4,r4,r2
  22c308:	3909883a 	add	r4,r7,r4
  22c30c:	1a47383a 	mul	r3,r3,r9
  22c310:	2080022e 	bgeu	r4,r2,22c31c <__divdf3+0x438>
  22c314:	00800074 	movhi	r2,1
  22c318:	1887883a 	add	r3,r3,r2
  22c31c:	2004d43a 	srli	r2,r4,16
  22c320:	2008943a 	slli	r4,r4,16
  22c324:	297fffcc 	andi	r5,r5,65535
  22c328:	10c7883a 	add	r3,r2,r3
  22c32c:	2149883a 	add	r4,r4,r5
  22c330:	90c0a536 	bltu	r18,r3,22c5c8 <__divdf3+0x6e4>
  22c334:	90c0bf26 	beq	r18,r3,22c634 <__divdf3+0x750>
  22c338:	90c7c83a 	sub	r3,r18,r3
  22c33c:	810fc83a 	sub	r7,r16,r4
  22c340:	81e5803a 	cmpltu	r18,r16,r7
  22c344:	1ca5c83a 	sub	r18,r3,r18
  22c348:	e480c126 	beq	fp,r18,22c650 <__divdf3+0x76c>
  22c34c:	a00b883a 	mov	r5,r20
  22c350:	9009883a 	mov	r4,r18
  22c354:	d9800315 	stw	r6,12(sp)
  22c358:	d9c00215 	stw	r7,8(sp)
  22c35c:	da400115 	stw	r9,4(sp)
  22c360:	022b57c0 	call	22b57c <__udivsi3>
  22c364:	a00b883a 	mov	r5,r20
  22c368:	9009883a 	mov	r4,r18
  22c36c:	d8800015 	stw	r2,0(sp)
  22c370:	022b5e00 	call	22b5e0 <__umodsi3>
  22c374:	d9c00217 	ldw	r7,8(sp)
  22c378:	da000017 	ldw	r8,0(sp)
  22c37c:	1006943a 	slli	r3,r2,16
  22c380:	3804d43a 	srli	r2,r7,16
  22c384:	ba21383a 	mul	r16,r23,r8
  22c388:	d9800317 	ldw	r6,12(sp)
  22c38c:	10c4b03a 	or	r2,r2,r3
  22c390:	da400117 	ldw	r9,4(sp)
  22c394:	1400062e 	bgeu	r2,r16,22c3b0 <__divdf3+0x4cc>
  22c398:	1705883a 	add	r2,r2,fp
  22c39c:	40ffffc4 	addi	r3,r8,-1
  22c3a0:	1700ad36 	bltu	r2,fp,22c658 <__divdf3+0x774>
  22c3a4:	1400ac2e 	bgeu	r2,r16,22c658 <__divdf3+0x774>
  22c3a8:	423fff84 	addi	r8,r8,-2
  22c3ac:	1705883a 	add	r2,r2,fp
  22c3b0:	1421c83a 	sub	r16,r2,r16
  22c3b4:	a00b883a 	mov	r5,r20
  22c3b8:	8009883a 	mov	r4,r16
  22c3bc:	d9800315 	stw	r6,12(sp)
  22c3c0:	d9c00215 	stw	r7,8(sp)
  22c3c4:	da000015 	stw	r8,0(sp)
  22c3c8:	da400115 	stw	r9,4(sp)
  22c3cc:	022b57c0 	call	22b57c <__udivsi3>
  22c3d0:	8009883a 	mov	r4,r16
  22c3d4:	a00b883a 	mov	r5,r20
  22c3d8:	1025883a 	mov	r18,r2
  22c3dc:	022b5e00 	call	22b5e0 <__umodsi3>
  22c3e0:	d9c00217 	ldw	r7,8(sp)
  22c3e4:	1004943a 	slli	r2,r2,16
  22c3e8:	bcaf383a 	mul	r23,r23,r18
  22c3ec:	393fffcc 	andi	r4,r7,65535
  22c3f0:	2088b03a 	or	r4,r4,r2
  22c3f4:	d9800317 	ldw	r6,12(sp)
  22c3f8:	da000017 	ldw	r8,0(sp)
  22c3fc:	da400117 	ldw	r9,4(sp)
  22c400:	25c0062e 	bgeu	r4,r23,22c41c <__divdf3+0x538>
  22c404:	2709883a 	add	r4,r4,fp
  22c408:	90bfffc4 	addi	r2,r18,-1
  22c40c:	27009436 	bltu	r4,fp,22c660 <__divdf3+0x77c>
  22c410:	25c0932e 	bgeu	r4,r23,22c660 <__divdf3+0x77c>
  22c414:	94bfff84 	addi	r18,r18,-2
  22c418:	2709883a 	add	r4,r4,fp
  22c41c:	4004943a 	slli	r2,r8,16
  22c420:	25efc83a 	sub	r23,r4,r23
  22c424:	1490b03a 	or	r8,r2,r18
  22c428:	4008d43a 	srli	r4,r8,16
  22c42c:	40ffffcc 	andi	r3,r8,65535
  22c430:	30c5383a 	mul	r2,r6,r3
  22c434:	1a47383a 	mul	r3,r3,r9
  22c438:	310d383a 	mul	r6,r6,r4
  22c43c:	100ad43a 	srli	r5,r2,16
  22c440:	4913383a 	mul	r9,r9,r4
  22c444:	1987883a 	add	r3,r3,r6
  22c448:	28c7883a 	add	r3,r5,r3
  22c44c:	1980022e 	bgeu	r3,r6,22c458 <__divdf3+0x574>
  22c450:	01000074 	movhi	r4,1
  22c454:	4913883a 	add	r9,r9,r4
  22c458:	1808d43a 	srli	r4,r3,16
  22c45c:	1806943a 	slli	r3,r3,16
  22c460:	10bfffcc 	andi	r2,r2,65535
  22c464:	2253883a 	add	r9,r4,r9
  22c468:	1887883a 	add	r3,r3,r2
  22c46c:	ba403836 	bltu	r23,r9,22c550 <__divdf3+0x66c>
  22c470:	ba403626 	beq	r23,r9,22c54c <__divdf3+0x668>
  22c474:	42000054 	ori	r8,r8,1
  22c478:	a880ffc4 	addi	r2,r21,1023
  22c47c:	00bf570e 	bge	zero,r2,22c1dc <_gp+0xffff1654>
  22c480:	40c001cc 	andi	r3,r8,7
  22c484:	18000726 	beq	r3,zero,22c4a4 <__divdf3+0x5c0>
  22c488:	40c003cc 	andi	r3,r8,15
  22c48c:	01000104 	movi	r4,4
  22c490:	19000426 	beq	r3,r4,22c4a4 <__divdf3+0x5c0>
  22c494:	4107883a 	add	r3,r8,r4
  22c498:	1a11803a 	cmpltu	r8,r3,r8
  22c49c:	8a23883a 	add	r17,r17,r8
  22c4a0:	1811883a 	mov	r8,r3
  22c4a4:	88c0402c 	andhi	r3,r17,256
  22c4a8:	18000426 	beq	r3,zero,22c4bc <__divdf3+0x5d8>
  22c4ac:	00ffc034 	movhi	r3,65280
  22c4b0:	18ffffc4 	addi	r3,r3,-1
  22c4b4:	a8810004 	addi	r2,r21,1024
  22c4b8:	88e2703a 	and	r17,r17,r3
  22c4bc:	00c1ff84 	movi	r3,2046
  22c4c0:	18bee316 	blt	r3,r2,22c050 <_gp+0xffff14c8>
  22c4c4:	8824977a 	slli	r18,r17,29
  22c4c8:	4010d0fa 	srli	r8,r8,3
  22c4cc:	8822927a 	slli	r17,r17,9
  22c4d0:	1081ffcc 	andi	r2,r2,2047
  22c4d4:	9224b03a 	or	r18,r18,r8
  22c4d8:	880ad33a 	srli	r5,r17,12
  22c4dc:	98c0004c 	andi	r3,r19,1
  22c4e0:	003edf06 	br	22c060 <_gp+0xffff14d8>
  22c4e4:	8080022c 	andhi	r2,r16,8
  22c4e8:	10001226 	beq	r2,zero,22c534 <__divdf3+0x650>
  22c4ec:	8880022c 	andhi	r2,r17,8
  22c4f0:	1000101e 	bne	r2,zero,22c534 <__divdf3+0x650>
  22c4f4:	00800434 	movhi	r2,16
  22c4f8:	89400234 	orhi	r5,r17,8
  22c4fc:	10bfffc4 	addi	r2,r2,-1
  22c500:	b007883a 	mov	r3,r22
  22c504:	288a703a 	and	r5,r5,r2
  22c508:	4025883a 	mov	r18,r8
  22c50c:	003f3106 	br	22c1d4 <_gp+0xffff164c>
  22c510:	008000c4 	movi	r2,3
  22c514:	3880a626 	beq	r7,r2,22c7b0 <__divdf3+0x8cc>
  22c518:	00800044 	movi	r2,1
  22c51c:	3880521e 	bne	r7,r2,22c668 <__divdf3+0x784>
  22c520:	b807883a 	mov	r3,r23
  22c524:	0005883a 	mov	r2,zero
  22c528:	000b883a 	mov	r5,zero
  22c52c:	0025883a 	mov	r18,zero
  22c530:	003ecb06 	br	22c060 <_gp+0xffff14d8>
  22c534:	00800434 	movhi	r2,16
  22c538:	81400234 	orhi	r5,r16,8
  22c53c:	10bfffc4 	addi	r2,r2,-1
  22c540:	a007883a 	mov	r3,r20
  22c544:	288a703a 	and	r5,r5,r2
  22c548:	003f2206 	br	22c1d4 <_gp+0xffff164c>
  22c54c:	183fca26 	beq	r3,zero,22c478 <_gp+0xffff18f0>
  22c550:	e5ef883a 	add	r23,fp,r23
  22c554:	40bfffc4 	addi	r2,r8,-1
  22c558:	bf00392e 	bgeu	r23,fp,22c640 <__divdf3+0x75c>
  22c55c:	1011883a 	mov	r8,r2
  22c560:	ba7fc41e 	bne	r23,r9,22c474 <_gp+0xffff18ec>
  22c564:	b0ffc31e 	bne	r22,r3,22c474 <_gp+0xffff18ec>
  22c568:	003fc306 	br	22c478 <_gp+0xffff18f0>
  22c56c:	143ff604 	addi	r16,r2,-40
  22c570:	9c20983a 	sll	r16,r19,r16
  22c574:	0025883a 	mov	r18,zero
  22c578:	003ee206 	br	22c104 <_gp+0xffff157c>
  22c57c:	d9800315 	stw	r6,12(sp)
  22c580:	d9c00215 	stw	r7,8(sp)
  22c584:	022dc3c0 	call	22dc3c <__clzsi2>
  22c588:	10800804 	addi	r2,r2,32
  22c58c:	d9c00217 	ldw	r7,8(sp)
  22c590:	d9800317 	ldw	r6,12(sp)
  22c594:	003ed106 	br	22c0dc <_gp+0xffff1554>
  22c598:	147ff604 	addi	r17,r2,-40
  22c59c:	3462983a 	sll	r17,r6,r17
  22c5a0:	0011883a 	mov	r8,zero
  22c5a4:	003ef506 	br	22c17c <_gp+0xffff15f4>
  22c5a8:	3009883a 	mov	r4,r6
  22c5ac:	d9800315 	stw	r6,12(sp)
  22c5b0:	da400115 	stw	r9,4(sp)
  22c5b4:	022dc3c0 	call	22dc3c <__clzsi2>
  22c5b8:	10800804 	addi	r2,r2,32
  22c5bc:	da400117 	ldw	r9,4(sp)
  22c5c0:	d9800317 	ldw	r6,12(sp)
  22c5c4:	003ee306 	br	22c154 <_gp+0xffff15cc>
  22c5c8:	85a1883a 	add	r16,r16,r22
  22c5cc:	8585803a 	cmpltu	r2,r16,r22
  22c5d0:	1705883a 	add	r2,r2,fp
  22c5d4:	14a5883a 	add	r18,r2,r18
  22c5d8:	88bfffc4 	addi	r2,r17,-1
  22c5dc:	e4800c2e 	bgeu	fp,r18,22c610 <__divdf3+0x72c>
  22c5e0:	90c03e36 	bltu	r18,r3,22c6dc <__divdf3+0x7f8>
  22c5e4:	1c806926 	beq	r3,r18,22c78c <__divdf3+0x8a8>
  22c5e8:	90c7c83a 	sub	r3,r18,r3
  22c5ec:	1023883a 	mov	r17,r2
  22c5f0:	003f5206 	br	22c33c <_gp+0xffff17b4>
  22c5f4:	923f0436 	bltu	r18,r8,22c208 <_gp+0xffff1680>
  22c5f8:	800897fa 	slli	r4,r16,31
  22c5fc:	9004d07a 	srli	r2,r18,1
  22c600:	8006d07a 	srli	r3,r16,1
  22c604:	902097fa 	slli	r16,r18,31
  22c608:	20a4b03a 	or	r18,r4,r2
  22c60c:	003f0106 	br	22c214 <_gp+0xffff168c>
  22c610:	e4bff51e 	bne	fp,r18,22c5e8 <_gp+0xffff1a60>
  22c614:	85bff22e 	bgeu	r16,r22,22c5e0 <_gp+0xffff1a58>
  22c618:	e0c7c83a 	sub	r3,fp,r3
  22c61c:	1023883a 	mov	r17,r2
  22c620:	003f4606 	br	22c33c <_gp+0xffff17b4>
  22c624:	100f883a 	mov	r7,r2
  22c628:	003f2b06 	br	22c2d8 <_gp+0xffff1750>
  22c62c:	180d883a 	mov	r6,r3
  22c630:	003f1306 	br	22c280 <_gp+0xffff16f8>
  22c634:	813fe436 	bltu	r16,r4,22c5c8 <_gp+0xffff1a40>
  22c638:	0007883a 	mov	r3,zero
  22c63c:	003f3f06 	br	22c33c <_gp+0xffff17b4>
  22c640:	ba402c36 	bltu	r23,r9,22c6f4 <__divdf3+0x810>
  22c644:	4dc05426 	beq	r9,r23,22c798 <__divdf3+0x8b4>
  22c648:	1011883a 	mov	r8,r2
  22c64c:	003f8906 	br	22c474 <_gp+0xffff18ec>
  22c650:	023fffc4 	movi	r8,-1
  22c654:	003f8806 	br	22c478 <_gp+0xffff18f0>
  22c658:	1811883a 	mov	r8,r3
  22c65c:	003f5406 	br	22c3b0 <_gp+0xffff1828>
  22c660:	1025883a 	mov	r18,r2
  22c664:	003f6d06 	br	22c41c <_gp+0xffff1894>
  22c668:	b827883a 	mov	r19,r23
  22c66c:	003f8206 	br	22c478 <_gp+0xffff18f0>
  22c670:	010007c4 	movi	r4,31
  22c674:	20c02616 	blt	r4,r3,22c710 <__divdf3+0x82c>
  22c678:	00800804 	movi	r2,32
  22c67c:	10c5c83a 	sub	r2,r2,r3
  22c680:	888a983a 	sll	r5,r17,r2
  22c684:	40c8d83a 	srl	r4,r8,r3
  22c688:	4084983a 	sll	r2,r8,r2
  22c68c:	88e2d83a 	srl	r17,r17,r3
  22c690:	2906b03a 	or	r3,r5,r4
  22c694:	1004c03a 	cmpne	r2,r2,zero
  22c698:	1886b03a 	or	r3,r3,r2
  22c69c:	188001cc 	andi	r2,r3,7
  22c6a0:	10000726 	beq	r2,zero,22c6c0 <__divdf3+0x7dc>
  22c6a4:	188003cc 	andi	r2,r3,15
  22c6a8:	01000104 	movi	r4,4
  22c6ac:	11000426 	beq	r2,r4,22c6c0 <__divdf3+0x7dc>
  22c6b0:	1805883a 	mov	r2,r3
  22c6b4:	10c00104 	addi	r3,r2,4
  22c6b8:	1885803a 	cmpltu	r2,r3,r2
  22c6bc:	88a3883a 	add	r17,r17,r2
  22c6c0:	8880202c 	andhi	r2,r17,128
  22c6c4:	10002726 	beq	r2,zero,22c764 <__divdf3+0x880>
  22c6c8:	98c0004c 	andi	r3,r19,1
  22c6cc:	00800044 	movi	r2,1
  22c6d0:	000b883a 	mov	r5,zero
  22c6d4:	0025883a 	mov	r18,zero
  22c6d8:	003e6106 	br	22c060 <_gp+0xffff14d8>
  22c6dc:	85a1883a 	add	r16,r16,r22
  22c6e0:	8585803a 	cmpltu	r2,r16,r22
  22c6e4:	1705883a 	add	r2,r2,fp
  22c6e8:	14a5883a 	add	r18,r2,r18
  22c6ec:	8c7fff84 	addi	r17,r17,-2
  22c6f0:	003f1106 	br	22c338 <_gp+0xffff17b0>
  22c6f4:	b589883a 	add	r4,r22,r22
  22c6f8:	25ad803a 	cmpltu	r22,r4,r22
  22c6fc:	b739883a 	add	fp,r22,fp
  22c700:	40bfff84 	addi	r2,r8,-2
  22c704:	bf2f883a 	add	r23,r23,fp
  22c708:	202d883a 	mov	r22,r4
  22c70c:	003f9306 	br	22c55c <_gp+0xffff19d4>
  22c710:	013ff844 	movi	r4,-31
  22c714:	2085c83a 	sub	r2,r4,r2
  22c718:	8888d83a 	srl	r4,r17,r2
  22c71c:	00800804 	movi	r2,32
  22c720:	18802126 	beq	r3,r2,22c7a8 <__divdf3+0x8c4>
  22c724:	00801004 	movi	r2,64
  22c728:	10c5c83a 	sub	r2,r2,r3
  22c72c:	8884983a 	sll	r2,r17,r2
  22c730:	1204b03a 	or	r2,r2,r8
  22c734:	1004c03a 	cmpne	r2,r2,zero
  22c738:	2084b03a 	or	r2,r4,r2
  22c73c:	144001cc 	andi	r17,r2,7
  22c740:	88000d1e 	bne	r17,zero,22c778 <__divdf3+0x894>
  22c744:	000b883a 	mov	r5,zero
  22c748:	1024d0fa 	srli	r18,r2,3
  22c74c:	98c0004c 	andi	r3,r19,1
  22c750:	0005883a 	mov	r2,zero
  22c754:	9464b03a 	or	r18,r18,r17
  22c758:	003e4106 	br	22c060 <_gp+0xffff14d8>
  22c75c:	1007883a 	mov	r3,r2
  22c760:	0023883a 	mov	r17,zero
  22c764:	880a927a 	slli	r5,r17,9
  22c768:	1805883a 	mov	r2,r3
  22c76c:	8822977a 	slli	r17,r17,29
  22c770:	280ad33a 	srli	r5,r5,12
  22c774:	003ff406 	br	22c748 <_gp+0xffff1bc0>
  22c778:	10c003cc 	andi	r3,r2,15
  22c77c:	01000104 	movi	r4,4
  22c780:	193ff626 	beq	r3,r4,22c75c <_gp+0xffff1bd4>
  22c784:	0023883a 	mov	r17,zero
  22c788:	003fca06 	br	22c6b4 <_gp+0xffff1b2c>
  22c78c:	813fd336 	bltu	r16,r4,22c6dc <_gp+0xffff1b54>
  22c790:	1023883a 	mov	r17,r2
  22c794:	003fa806 	br	22c638 <_gp+0xffff1ab0>
  22c798:	b0ffd636 	bltu	r22,r3,22c6f4 <_gp+0xffff1b6c>
  22c79c:	1011883a 	mov	r8,r2
  22c7a0:	b0ff341e 	bne	r22,r3,22c474 <_gp+0xffff18ec>
  22c7a4:	003f3406 	br	22c478 <_gp+0xffff18f0>
  22c7a8:	0005883a 	mov	r2,zero
  22c7ac:	003fe006 	br	22c730 <_gp+0xffff1ba8>
  22c7b0:	00800434 	movhi	r2,16
  22c7b4:	89400234 	orhi	r5,r17,8
  22c7b8:	10bfffc4 	addi	r2,r2,-1
  22c7bc:	b807883a 	mov	r3,r23
  22c7c0:	288a703a 	and	r5,r5,r2
  22c7c4:	4025883a 	mov	r18,r8
  22c7c8:	003e8206 	br	22c1d4 <_gp+0xffff164c>

0022c7cc <__eqdf2>:
  22c7cc:	2804d53a 	srli	r2,r5,20
  22c7d0:	3806d53a 	srli	r3,r7,20
  22c7d4:	02000434 	movhi	r8,16
  22c7d8:	423fffc4 	addi	r8,r8,-1
  22c7dc:	1081ffcc 	andi	r2,r2,2047
  22c7e0:	0281ffc4 	movi	r10,2047
  22c7e4:	2a12703a 	and	r9,r5,r8
  22c7e8:	18c1ffcc 	andi	r3,r3,2047
  22c7ec:	3a10703a 	and	r8,r7,r8
  22c7f0:	280ad7fa 	srli	r5,r5,31
  22c7f4:	380ed7fa 	srli	r7,r7,31
  22c7f8:	12801026 	beq	r2,r10,22c83c <__eqdf2+0x70>
  22c7fc:	0281ffc4 	movi	r10,2047
  22c800:	1a800a26 	beq	r3,r10,22c82c <__eqdf2+0x60>
  22c804:	10c00226 	beq	r2,r3,22c810 <__eqdf2+0x44>
  22c808:	00800044 	movi	r2,1
  22c80c:	f800283a 	ret
  22c810:	4a3ffd1e 	bne	r9,r8,22c808 <_gp+0xffff1c80>
  22c814:	21bffc1e 	bne	r4,r6,22c808 <_gp+0xffff1c80>
  22c818:	29c00c26 	beq	r5,r7,22c84c <__eqdf2+0x80>
  22c81c:	103ffa1e 	bne	r2,zero,22c808 <_gp+0xffff1c80>
  22c820:	2244b03a 	or	r2,r4,r9
  22c824:	1004c03a 	cmpne	r2,r2,zero
  22c828:	f800283a 	ret
  22c82c:	3214b03a 	or	r10,r6,r8
  22c830:	503ff426 	beq	r10,zero,22c804 <_gp+0xffff1c7c>
  22c834:	00800044 	movi	r2,1
  22c838:	f800283a 	ret
  22c83c:	2254b03a 	or	r10,r4,r9
  22c840:	503fee26 	beq	r10,zero,22c7fc <_gp+0xffff1c74>
  22c844:	00800044 	movi	r2,1
  22c848:	f800283a 	ret
  22c84c:	0005883a 	mov	r2,zero
  22c850:	f800283a 	ret

0022c854 <__gedf2>:
  22c854:	2804d53a 	srli	r2,r5,20
  22c858:	3806d53a 	srli	r3,r7,20
  22c85c:	02000434 	movhi	r8,16
  22c860:	423fffc4 	addi	r8,r8,-1
  22c864:	1081ffcc 	andi	r2,r2,2047
  22c868:	0241ffc4 	movi	r9,2047
  22c86c:	2a14703a 	and	r10,r5,r8
  22c870:	18c1ffcc 	andi	r3,r3,2047
  22c874:	3a10703a 	and	r8,r7,r8
  22c878:	280ad7fa 	srli	r5,r5,31
  22c87c:	380ed7fa 	srli	r7,r7,31
  22c880:	12401d26 	beq	r2,r9,22c8f8 <__gedf2+0xa4>
  22c884:	0241ffc4 	movi	r9,2047
  22c888:	1a401226 	beq	r3,r9,22c8d4 <__gedf2+0x80>
  22c88c:	1000081e 	bne	r2,zero,22c8b0 <__gedf2+0x5c>
  22c890:	2296b03a 	or	r11,r4,r10
  22c894:	5813003a 	cmpeq	r9,r11,zero
  22c898:	1800091e 	bne	r3,zero,22c8c0 <__gedf2+0x6c>
  22c89c:	3218b03a 	or	r12,r6,r8
  22c8a0:	6000071e 	bne	r12,zero,22c8c0 <__gedf2+0x6c>
  22c8a4:	0005883a 	mov	r2,zero
  22c8a8:	5800101e 	bne	r11,zero,22c8ec <__gedf2+0x98>
  22c8ac:	f800283a 	ret
  22c8b0:	18000c1e 	bne	r3,zero,22c8e4 <__gedf2+0x90>
  22c8b4:	3212b03a 	or	r9,r6,r8
  22c8b8:	48000c26 	beq	r9,zero,22c8ec <__gedf2+0x98>
  22c8bc:	0013883a 	mov	r9,zero
  22c8c0:	39c03fcc 	andi	r7,r7,255
  22c8c4:	48000826 	beq	r9,zero,22c8e8 <__gedf2+0x94>
  22c8c8:	38000926 	beq	r7,zero,22c8f0 <__gedf2+0x9c>
  22c8cc:	00800044 	movi	r2,1
  22c8d0:	f800283a 	ret
  22c8d4:	3212b03a 	or	r9,r6,r8
  22c8d8:	483fec26 	beq	r9,zero,22c88c <_gp+0xffff1d04>
  22c8dc:	00bfff84 	movi	r2,-2
  22c8e0:	f800283a 	ret
  22c8e4:	39c03fcc 	andi	r7,r7,255
  22c8e8:	29c00626 	beq	r5,r7,22c904 <__gedf2+0xb0>
  22c8ec:	283ff726 	beq	r5,zero,22c8cc <_gp+0xffff1d44>
  22c8f0:	00bfffc4 	movi	r2,-1
  22c8f4:	f800283a 	ret
  22c8f8:	2292b03a 	or	r9,r4,r10
  22c8fc:	483fe126 	beq	r9,zero,22c884 <_gp+0xffff1cfc>
  22c900:	003ff606 	br	22c8dc <_gp+0xffff1d54>
  22c904:	18bff916 	blt	r3,r2,22c8ec <_gp+0xffff1d64>
  22c908:	10c00316 	blt	r2,r3,22c918 <__gedf2+0xc4>
  22c90c:	42bff736 	bltu	r8,r10,22c8ec <_gp+0xffff1d64>
  22c910:	52000326 	beq	r10,r8,22c920 <__gedf2+0xcc>
  22c914:	5200042e 	bgeu	r10,r8,22c928 <__gedf2+0xd4>
  22c918:	283fec1e 	bne	r5,zero,22c8cc <_gp+0xffff1d44>
  22c91c:	003ff406 	br	22c8f0 <_gp+0xffff1d68>
  22c920:	313ff236 	bltu	r6,r4,22c8ec <_gp+0xffff1d64>
  22c924:	21bffc36 	bltu	r4,r6,22c918 <_gp+0xffff1d90>
  22c928:	0005883a 	mov	r2,zero
  22c92c:	f800283a 	ret

0022c930 <__ledf2>:
  22c930:	2804d53a 	srli	r2,r5,20
  22c934:	3810d53a 	srli	r8,r7,20
  22c938:	00c00434 	movhi	r3,16
  22c93c:	18ffffc4 	addi	r3,r3,-1
  22c940:	1081ffcc 	andi	r2,r2,2047
  22c944:	0241ffc4 	movi	r9,2047
  22c948:	28d4703a 	and	r10,r5,r3
  22c94c:	4201ffcc 	andi	r8,r8,2047
  22c950:	38c6703a 	and	r3,r7,r3
  22c954:	280ad7fa 	srli	r5,r5,31
  22c958:	380ed7fa 	srli	r7,r7,31
  22c95c:	12401f26 	beq	r2,r9,22c9dc <__ledf2+0xac>
  22c960:	0241ffc4 	movi	r9,2047
  22c964:	42401426 	beq	r8,r9,22c9b8 <__ledf2+0x88>
  22c968:	1000091e 	bne	r2,zero,22c990 <__ledf2+0x60>
  22c96c:	2296b03a 	or	r11,r4,r10
  22c970:	5813003a 	cmpeq	r9,r11,zero
  22c974:	29403fcc 	andi	r5,r5,255
  22c978:	40000a1e 	bne	r8,zero,22c9a4 <__ledf2+0x74>
  22c97c:	30d8b03a 	or	r12,r6,r3
  22c980:	6000081e 	bne	r12,zero,22c9a4 <__ledf2+0x74>
  22c984:	0005883a 	mov	r2,zero
  22c988:	5800111e 	bne	r11,zero,22c9d0 <__ledf2+0xa0>
  22c98c:	f800283a 	ret
  22c990:	29403fcc 	andi	r5,r5,255
  22c994:	40000c1e 	bne	r8,zero,22c9c8 <__ledf2+0x98>
  22c998:	30d2b03a 	or	r9,r6,r3
  22c99c:	48000c26 	beq	r9,zero,22c9d0 <__ledf2+0xa0>
  22c9a0:	0013883a 	mov	r9,zero
  22c9a4:	39c03fcc 	andi	r7,r7,255
  22c9a8:	48000826 	beq	r9,zero,22c9cc <__ledf2+0x9c>
  22c9ac:	38001126 	beq	r7,zero,22c9f4 <__ledf2+0xc4>
  22c9b0:	00800044 	movi	r2,1
  22c9b4:	f800283a 	ret
  22c9b8:	30d2b03a 	or	r9,r6,r3
  22c9bc:	483fea26 	beq	r9,zero,22c968 <_gp+0xffff1de0>
  22c9c0:	00800084 	movi	r2,2
  22c9c4:	f800283a 	ret
  22c9c8:	39c03fcc 	andi	r7,r7,255
  22c9cc:	39400726 	beq	r7,r5,22c9ec <__ledf2+0xbc>
  22c9d0:	2800081e 	bne	r5,zero,22c9f4 <__ledf2+0xc4>
  22c9d4:	00800044 	movi	r2,1
  22c9d8:	f800283a 	ret
  22c9dc:	2292b03a 	or	r9,r4,r10
  22c9e0:	483fdf26 	beq	r9,zero,22c960 <_gp+0xffff1dd8>
  22c9e4:	00800084 	movi	r2,2
  22c9e8:	f800283a 	ret
  22c9ec:	4080030e 	bge	r8,r2,22c9fc <__ledf2+0xcc>
  22c9f0:	383fef26 	beq	r7,zero,22c9b0 <_gp+0xffff1e28>
  22c9f4:	00bfffc4 	movi	r2,-1
  22c9f8:	f800283a 	ret
  22c9fc:	123feb16 	blt	r2,r8,22c9ac <_gp+0xffff1e24>
  22ca00:	1abff336 	bltu	r3,r10,22c9d0 <_gp+0xffff1e48>
  22ca04:	50c00326 	beq	r10,r3,22ca14 <__ledf2+0xe4>
  22ca08:	50c0042e 	bgeu	r10,r3,22ca1c <__ledf2+0xec>
  22ca0c:	283fe81e 	bne	r5,zero,22c9b0 <_gp+0xffff1e28>
  22ca10:	003ff806 	br	22c9f4 <_gp+0xffff1e6c>
  22ca14:	313fee36 	bltu	r6,r4,22c9d0 <_gp+0xffff1e48>
  22ca18:	21bffc36 	bltu	r4,r6,22ca0c <_gp+0xffff1e84>
  22ca1c:	0005883a 	mov	r2,zero
  22ca20:	f800283a 	ret

0022ca24 <__muldf3>:
  22ca24:	defff304 	addi	sp,sp,-52
  22ca28:	2804d53a 	srli	r2,r5,20
  22ca2c:	dd800915 	stw	r22,36(sp)
  22ca30:	282cd7fa 	srli	r22,r5,31
  22ca34:	dc000315 	stw	r16,12(sp)
  22ca38:	04000434 	movhi	r16,16
  22ca3c:	dd400815 	stw	r21,32(sp)
  22ca40:	dc800515 	stw	r18,20(sp)
  22ca44:	843fffc4 	addi	r16,r16,-1
  22ca48:	dfc00c15 	stw	ra,48(sp)
  22ca4c:	df000b15 	stw	fp,44(sp)
  22ca50:	ddc00a15 	stw	r23,40(sp)
  22ca54:	dd000715 	stw	r20,28(sp)
  22ca58:	dcc00615 	stw	r19,24(sp)
  22ca5c:	dc400415 	stw	r17,16(sp)
  22ca60:	1481ffcc 	andi	r18,r2,2047
  22ca64:	2c20703a 	and	r16,r5,r16
  22ca68:	b02b883a 	mov	r21,r22
  22ca6c:	b2403fcc 	andi	r9,r22,255
  22ca70:	90006026 	beq	r18,zero,22cbf4 <__muldf3+0x1d0>
  22ca74:	0081ffc4 	movi	r2,2047
  22ca78:	2029883a 	mov	r20,r4
  22ca7c:	90803626 	beq	r18,r2,22cb58 <__muldf3+0x134>
  22ca80:	80800434 	orhi	r2,r16,16
  22ca84:	100490fa 	slli	r2,r2,3
  22ca88:	2020d77a 	srli	r16,r4,29
  22ca8c:	202890fa 	slli	r20,r4,3
  22ca90:	94bf0044 	addi	r18,r18,-1023
  22ca94:	80a0b03a 	or	r16,r16,r2
  22ca98:	0027883a 	mov	r19,zero
  22ca9c:	0039883a 	mov	fp,zero
  22caa0:	3804d53a 	srli	r2,r7,20
  22caa4:	382ed7fa 	srli	r23,r7,31
  22caa8:	04400434 	movhi	r17,16
  22caac:	8c7fffc4 	addi	r17,r17,-1
  22cab0:	1081ffcc 	andi	r2,r2,2047
  22cab4:	3011883a 	mov	r8,r6
  22cab8:	3c62703a 	and	r17,r7,r17
  22cabc:	ba803fcc 	andi	r10,r23,255
  22cac0:	10006d26 	beq	r2,zero,22cc78 <__muldf3+0x254>
  22cac4:	00c1ffc4 	movi	r3,2047
  22cac8:	10c06526 	beq	r2,r3,22cc60 <__muldf3+0x23c>
  22cacc:	88c00434 	orhi	r3,r17,16
  22cad0:	180690fa 	slli	r3,r3,3
  22cad4:	3022d77a 	srli	r17,r6,29
  22cad8:	301090fa 	slli	r8,r6,3
  22cadc:	10bf0044 	addi	r2,r2,-1023
  22cae0:	88e2b03a 	or	r17,r17,r3
  22cae4:	000b883a 	mov	r5,zero
  22cae8:	9085883a 	add	r2,r18,r2
  22caec:	2cc8b03a 	or	r4,r5,r19
  22caf0:	00c003c4 	movi	r3,15
  22caf4:	bdacf03a 	xor	r22,r23,r22
  22caf8:	12c00044 	addi	r11,r2,1
  22cafc:	19009936 	bltu	r3,r4,22cd64 <__muldf3+0x340>
  22cb00:	200890ba 	slli	r4,r4,2
  22cb04:	00c008f4 	movhi	r3,35
  22cb08:	18f2c604 	addi	r3,r3,-13544
  22cb0c:	20c9883a 	add	r4,r4,r3
  22cb10:	20c00017 	ldw	r3,0(r4)
  22cb14:	1800683a 	jmp	r3
  22cb18:	0022cd64 	muli	zero,zero,-29899
  22cb1c:	0022cb78 	rdprs	zero,zero,-29907
  22cb20:	0022cb78 	rdprs	zero,zero,-29907
  22cb24:	0022cb74 	movhi	zero,35629
  22cb28:	0022cd40 	call	22cd4 <__alt_mem_OnChip_Memory-0x1fd32c>
  22cb2c:	0022cd40 	call	22cd4 <__alt_mem_OnChip_Memory-0x1fd32c>
  22cb30:	0022cd28 	cmpgeui	zero,zero,35636
  22cb34:	0022cb74 	movhi	zero,35629
  22cb38:	0022cd40 	call	22cd4 <__alt_mem_OnChip_Memory-0x1fd32c>
  22cb3c:	0022cd28 	cmpgeui	zero,zero,35636
  22cb40:	0022cd40 	call	22cd4 <__alt_mem_OnChip_Memory-0x1fd32c>
  22cb44:	0022cb74 	movhi	zero,35629
  22cb48:	0022cd50 	cmplti	zero,zero,-29899
  22cb4c:	0022cd50 	cmplti	zero,zero,-29899
  22cb50:	0022cd50 	cmplti	zero,zero,-29899
  22cb54:	0022cf6c 	andhi	zero,zero,35645
  22cb58:	2404b03a 	or	r2,r4,r16
  22cb5c:	10006f1e 	bne	r2,zero,22cd1c <__muldf3+0x2f8>
  22cb60:	04c00204 	movi	r19,8
  22cb64:	0021883a 	mov	r16,zero
  22cb68:	0029883a 	mov	r20,zero
  22cb6c:	07000084 	movi	fp,2
  22cb70:	003fcb06 	br	22caa0 <_gp+0xffff1f18>
  22cb74:	502d883a 	mov	r22,r10
  22cb78:	00800084 	movi	r2,2
  22cb7c:	28805726 	beq	r5,r2,22ccdc <__muldf3+0x2b8>
  22cb80:	008000c4 	movi	r2,3
  22cb84:	28816626 	beq	r5,r2,22d120 <__muldf3+0x6fc>
  22cb88:	00800044 	movi	r2,1
  22cb8c:	2881411e 	bne	r5,r2,22d094 <__muldf3+0x670>
  22cb90:	b02b883a 	mov	r21,r22
  22cb94:	0005883a 	mov	r2,zero
  22cb98:	000b883a 	mov	r5,zero
  22cb9c:	0029883a 	mov	r20,zero
  22cba0:	1004953a 	slli	r2,r2,20
  22cba4:	a8c03fcc 	andi	r3,r21,255
  22cba8:	04400434 	movhi	r17,16
  22cbac:	8c7fffc4 	addi	r17,r17,-1
  22cbb0:	180697fa 	slli	r3,r3,31
  22cbb4:	2c4a703a 	and	r5,r5,r17
  22cbb8:	288ab03a 	or	r5,r5,r2
  22cbbc:	28c6b03a 	or	r3,r5,r3
  22cbc0:	a005883a 	mov	r2,r20
  22cbc4:	dfc00c17 	ldw	ra,48(sp)
  22cbc8:	df000b17 	ldw	fp,44(sp)
  22cbcc:	ddc00a17 	ldw	r23,40(sp)
  22cbd0:	dd800917 	ldw	r22,36(sp)
  22cbd4:	dd400817 	ldw	r21,32(sp)
  22cbd8:	dd000717 	ldw	r20,28(sp)
  22cbdc:	dcc00617 	ldw	r19,24(sp)
  22cbe0:	dc800517 	ldw	r18,20(sp)
  22cbe4:	dc400417 	ldw	r17,16(sp)
  22cbe8:	dc000317 	ldw	r16,12(sp)
  22cbec:	dec00d04 	addi	sp,sp,52
  22cbf0:	f800283a 	ret
  22cbf4:	2404b03a 	or	r2,r4,r16
  22cbf8:	2027883a 	mov	r19,r4
  22cbfc:	10004226 	beq	r2,zero,22cd08 <__muldf3+0x2e4>
  22cc00:	8000fc26 	beq	r16,zero,22cff4 <__muldf3+0x5d0>
  22cc04:	8009883a 	mov	r4,r16
  22cc08:	d9800215 	stw	r6,8(sp)
  22cc0c:	d9c00015 	stw	r7,0(sp)
  22cc10:	da400115 	stw	r9,4(sp)
  22cc14:	022dc3c0 	call	22dc3c <__clzsi2>
  22cc18:	d9800217 	ldw	r6,8(sp)
  22cc1c:	d9c00017 	ldw	r7,0(sp)
  22cc20:	da400117 	ldw	r9,4(sp)
  22cc24:	113ffd44 	addi	r4,r2,-11
  22cc28:	00c00704 	movi	r3,28
  22cc2c:	1900ed16 	blt	r3,r4,22cfe4 <__muldf3+0x5c0>
  22cc30:	00c00744 	movi	r3,29
  22cc34:	147ffe04 	addi	r17,r2,-8
  22cc38:	1907c83a 	sub	r3,r3,r4
  22cc3c:	8460983a 	sll	r16,r16,r17
  22cc40:	98c6d83a 	srl	r3,r19,r3
  22cc44:	9c68983a 	sll	r20,r19,r17
  22cc48:	1c20b03a 	or	r16,r3,r16
  22cc4c:	1080fcc4 	addi	r2,r2,1011
  22cc50:	00a5c83a 	sub	r18,zero,r2
  22cc54:	0027883a 	mov	r19,zero
  22cc58:	0039883a 	mov	fp,zero
  22cc5c:	003f9006 	br	22caa0 <_gp+0xffff1f18>
  22cc60:	3446b03a 	or	r3,r6,r17
  22cc64:	1800261e 	bne	r3,zero,22cd00 <__muldf3+0x2dc>
  22cc68:	0023883a 	mov	r17,zero
  22cc6c:	0011883a 	mov	r8,zero
  22cc70:	01400084 	movi	r5,2
  22cc74:	003f9c06 	br	22cae8 <_gp+0xffff1f60>
  22cc78:	3446b03a 	or	r3,r6,r17
  22cc7c:	18001c26 	beq	r3,zero,22ccf0 <__muldf3+0x2cc>
  22cc80:	8800ce26 	beq	r17,zero,22cfbc <__muldf3+0x598>
  22cc84:	8809883a 	mov	r4,r17
  22cc88:	d9800215 	stw	r6,8(sp)
  22cc8c:	da400115 	stw	r9,4(sp)
  22cc90:	da800015 	stw	r10,0(sp)
  22cc94:	022dc3c0 	call	22dc3c <__clzsi2>
  22cc98:	d9800217 	ldw	r6,8(sp)
  22cc9c:	da400117 	ldw	r9,4(sp)
  22cca0:	da800017 	ldw	r10,0(sp)
  22cca4:	113ffd44 	addi	r4,r2,-11
  22cca8:	00c00704 	movi	r3,28
  22ccac:	1900bf16 	blt	r3,r4,22cfac <__muldf3+0x588>
  22ccb0:	00c00744 	movi	r3,29
  22ccb4:	123ffe04 	addi	r8,r2,-8
  22ccb8:	1907c83a 	sub	r3,r3,r4
  22ccbc:	8a22983a 	sll	r17,r17,r8
  22ccc0:	30c6d83a 	srl	r3,r6,r3
  22ccc4:	3210983a 	sll	r8,r6,r8
  22ccc8:	1c62b03a 	or	r17,r3,r17
  22cccc:	1080fcc4 	addi	r2,r2,1011
  22ccd0:	0085c83a 	sub	r2,zero,r2
  22ccd4:	000b883a 	mov	r5,zero
  22ccd8:	003f8306 	br	22cae8 <_gp+0xffff1f60>
  22ccdc:	b02b883a 	mov	r21,r22
  22cce0:	0081ffc4 	movi	r2,2047
  22cce4:	000b883a 	mov	r5,zero
  22cce8:	0029883a 	mov	r20,zero
  22ccec:	003fac06 	br	22cba0 <_gp+0xffff2018>
  22ccf0:	0023883a 	mov	r17,zero
  22ccf4:	0011883a 	mov	r8,zero
  22ccf8:	01400044 	movi	r5,1
  22ccfc:	003f7a06 	br	22cae8 <_gp+0xffff1f60>
  22cd00:	014000c4 	movi	r5,3
  22cd04:	003f7806 	br	22cae8 <_gp+0xffff1f60>
  22cd08:	04c00104 	movi	r19,4
  22cd0c:	0021883a 	mov	r16,zero
  22cd10:	0029883a 	mov	r20,zero
  22cd14:	07000044 	movi	fp,1
  22cd18:	003f6106 	br	22caa0 <_gp+0xffff1f18>
  22cd1c:	04c00304 	movi	r19,12
  22cd20:	070000c4 	movi	fp,3
  22cd24:	003f5e06 	br	22caa0 <_gp+0xffff1f18>
  22cd28:	01400434 	movhi	r5,16
  22cd2c:	002b883a 	mov	r21,zero
  22cd30:	297fffc4 	addi	r5,r5,-1
  22cd34:	053fffc4 	movi	r20,-1
  22cd38:	0081ffc4 	movi	r2,2047
  22cd3c:	003f9806 	br	22cba0 <_gp+0xffff2018>
  22cd40:	8023883a 	mov	r17,r16
  22cd44:	a011883a 	mov	r8,r20
  22cd48:	e00b883a 	mov	r5,fp
  22cd4c:	003f8a06 	br	22cb78 <_gp+0xffff1ff0>
  22cd50:	8023883a 	mov	r17,r16
  22cd54:	a011883a 	mov	r8,r20
  22cd58:	482d883a 	mov	r22,r9
  22cd5c:	e00b883a 	mov	r5,fp
  22cd60:	003f8506 	br	22cb78 <_gp+0xffff1ff0>
  22cd64:	a00ad43a 	srli	r5,r20,16
  22cd68:	401ad43a 	srli	r13,r8,16
  22cd6c:	a53fffcc 	andi	r20,r20,65535
  22cd70:	423fffcc 	andi	r8,r8,65535
  22cd74:	4519383a 	mul	r12,r8,r20
  22cd78:	4147383a 	mul	r3,r8,r5
  22cd7c:	6d09383a 	mul	r4,r13,r20
  22cd80:	600cd43a 	srli	r6,r12,16
  22cd84:	2b5d383a 	mul	r14,r5,r13
  22cd88:	20c9883a 	add	r4,r4,r3
  22cd8c:	310d883a 	add	r6,r6,r4
  22cd90:	30c0022e 	bgeu	r6,r3,22cd9c <__muldf3+0x378>
  22cd94:	00c00074 	movhi	r3,1
  22cd98:	70dd883a 	add	r14,r14,r3
  22cd9c:	8826d43a 	srli	r19,r17,16
  22cda0:	8bffffcc 	andi	r15,r17,65535
  22cda4:	7d23383a 	mul	r17,r15,r20
  22cda8:	7949383a 	mul	r4,r15,r5
  22cdac:	9d29383a 	mul	r20,r19,r20
  22cdb0:	8814d43a 	srli	r10,r17,16
  22cdb4:	3012943a 	slli	r9,r6,16
  22cdb8:	a129883a 	add	r20,r20,r4
  22cdbc:	633fffcc 	andi	r12,r12,65535
  22cdc0:	5515883a 	add	r10,r10,r20
  22cdc4:	3006d43a 	srli	r3,r6,16
  22cdc8:	4b13883a 	add	r9,r9,r12
  22cdcc:	2ccb383a 	mul	r5,r5,r19
  22cdd0:	5100022e 	bgeu	r10,r4,22cddc <__muldf3+0x3b8>
  22cdd4:	01000074 	movhi	r4,1
  22cdd8:	290b883a 	add	r5,r5,r4
  22cddc:	802ad43a 	srli	r21,r16,16
  22cde0:	843fffcc 	andi	r16,r16,65535
  22cde4:	440d383a 	mul	r6,r8,r16
  22cde8:	4565383a 	mul	r18,r8,r21
  22cdec:	8349383a 	mul	r4,r16,r13
  22cdf0:	500e943a 	slli	r7,r10,16
  22cdf4:	3010d43a 	srli	r8,r6,16
  22cdf8:	5028d43a 	srli	r20,r10,16
  22cdfc:	2489883a 	add	r4,r4,r18
  22ce00:	8abfffcc 	andi	r10,r17,65535
  22ce04:	3a95883a 	add	r10,r7,r10
  22ce08:	4119883a 	add	r12,r8,r4
  22ce0c:	a169883a 	add	r20,r20,r5
  22ce10:	1a87883a 	add	r3,r3,r10
  22ce14:	6d5b383a 	mul	r13,r13,r21
  22ce18:	6480022e 	bgeu	r12,r18,22ce24 <__muldf3+0x400>
  22ce1c:	01000074 	movhi	r4,1
  22ce20:	691b883a 	add	r13,r13,r4
  22ce24:	7c25383a 	mul	r18,r15,r16
  22ce28:	7d4b383a 	mul	r5,r15,r21
  22ce2c:	84cf383a 	mul	r7,r16,r19
  22ce30:	901ed43a 	srli	r15,r18,16
  22ce34:	6008d43a 	srli	r4,r12,16
  22ce38:	6010943a 	slli	r8,r12,16
  22ce3c:	394f883a 	add	r7,r7,r5
  22ce40:	333fffcc 	andi	r12,r6,65535
  22ce44:	79df883a 	add	r15,r15,r7
  22ce48:	235b883a 	add	r13,r4,r13
  22ce4c:	9d63383a 	mul	r17,r19,r21
  22ce50:	4309883a 	add	r4,r8,r12
  22ce54:	7940022e 	bgeu	r15,r5,22ce60 <__muldf3+0x43c>
  22ce58:	01400074 	movhi	r5,1
  22ce5c:	8963883a 	add	r17,r17,r5
  22ce60:	780a943a 	slli	r5,r15,16
  22ce64:	91bfffcc 	andi	r6,r18,65535
  22ce68:	70c7883a 	add	r3,r14,r3
  22ce6c:	298d883a 	add	r6,r5,r6
  22ce70:	1a8f803a 	cmpltu	r7,r3,r10
  22ce74:	350b883a 	add	r5,r6,r20
  22ce78:	20c7883a 	add	r3,r4,r3
  22ce7c:	3955883a 	add	r10,r7,r5
  22ce80:	1909803a 	cmpltu	r4,r3,r4
  22ce84:	6a91883a 	add	r8,r13,r10
  22ce88:	780cd43a 	srli	r6,r15,16
  22ce8c:	2219883a 	add	r12,r4,r8
  22ce90:	2d0b803a 	cmpltu	r5,r5,r20
  22ce94:	51cf803a 	cmpltu	r7,r10,r7
  22ce98:	29ceb03a 	or	r7,r5,r7
  22ce9c:	4351803a 	cmpltu	r8,r8,r13
  22cea0:	610b803a 	cmpltu	r5,r12,r4
  22cea4:	4148b03a 	or	r4,r8,r5
  22cea8:	398f883a 	add	r7,r7,r6
  22ceac:	3909883a 	add	r4,r7,r4
  22ceb0:	1810927a 	slli	r8,r3,9
  22ceb4:	2449883a 	add	r4,r4,r17
  22ceb8:	2008927a 	slli	r4,r4,9
  22cebc:	6022d5fa 	srli	r17,r12,23
  22cec0:	1806d5fa 	srli	r3,r3,23
  22cec4:	4252b03a 	or	r9,r8,r9
  22cec8:	600a927a 	slli	r5,r12,9
  22cecc:	4810c03a 	cmpne	r8,r9,zero
  22ced0:	2462b03a 	or	r17,r4,r17
  22ced4:	40c6b03a 	or	r3,r8,r3
  22ced8:	8900402c 	andhi	r4,r17,256
  22cedc:	1950b03a 	or	r8,r3,r5
  22cee0:	20000726 	beq	r4,zero,22cf00 <__muldf3+0x4dc>
  22cee4:	4006d07a 	srli	r3,r8,1
  22cee8:	880497fa 	slli	r2,r17,31
  22ceec:	4200004c 	andi	r8,r8,1
  22cef0:	8822d07a 	srli	r17,r17,1
  22cef4:	1a10b03a 	or	r8,r3,r8
  22cef8:	1210b03a 	or	r8,r2,r8
  22cefc:	5805883a 	mov	r2,r11
  22cf00:	1140ffc4 	addi	r5,r2,1023
  22cf04:	0140440e 	bge	zero,r5,22d018 <__muldf3+0x5f4>
  22cf08:	40c001cc 	andi	r3,r8,7
  22cf0c:	18000726 	beq	r3,zero,22cf2c <__muldf3+0x508>
  22cf10:	40c003cc 	andi	r3,r8,15
  22cf14:	01000104 	movi	r4,4
  22cf18:	19000426 	beq	r3,r4,22cf2c <__muldf3+0x508>
  22cf1c:	4107883a 	add	r3,r8,r4
  22cf20:	1a11803a 	cmpltu	r8,r3,r8
  22cf24:	8a23883a 	add	r17,r17,r8
  22cf28:	1811883a 	mov	r8,r3
  22cf2c:	88c0402c 	andhi	r3,r17,256
  22cf30:	18000426 	beq	r3,zero,22cf44 <__muldf3+0x520>
  22cf34:	11410004 	addi	r5,r2,1024
  22cf38:	00bfc034 	movhi	r2,65280
  22cf3c:	10bfffc4 	addi	r2,r2,-1
  22cf40:	88a2703a 	and	r17,r17,r2
  22cf44:	0081ff84 	movi	r2,2046
  22cf48:	117f6416 	blt	r2,r5,22ccdc <_gp+0xffff2154>
  22cf4c:	8828977a 	slli	r20,r17,29
  22cf50:	4010d0fa 	srli	r8,r8,3
  22cf54:	8822927a 	slli	r17,r17,9
  22cf58:	2881ffcc 	andi	r2,r5,2047
  22cf5c:	a228b03a 	or	r20,r20,r8
  22cf60:	880ad33a 	srli	r5,r17,12
  22cf64:	b02b883a 	mov	r21,r22
  22cf68:	003f0d06 	br	22cba0 <_gp+0xffff2018>
  22cf6c:	8080022c 	andhi	r2,r16,8
  22cf70:	10000926 	beq	r2,zero,22cf98 <__muldf3+0x574>
  22cf74:	8880022c 	andhi	r2,r17,8
  22cf78:	1000071e 	bne	r2,zero,22cf98 <__muldf3+0x574>
  22cf7c:	00800434 	movhi	r2,16
  22cf80:	89400234 	orhi	r5,r17,8
  22cf84:	10bfffc4 	addi	r2,r2,-1
  22cf88:	b82b883a 	mov	r21,r23
  22cf8c:	288a703a 	and	r5,r5,r2
  22cf90:	4029883a 	mov	r20,r8
  22cf94:	003f6806 	br	22cd38 <_gp+0xffff21b0>
  22cf98:	00800434 	movhi	r2,16
  22cf9c:	81400234 	orhi	r5,r16,8
  22cfa0:	10bfffc4 	addi	r2,r2,-1
  22cfa4:	288a703a 	and	r5,r5,r2
  22cfa8:	003f6306 	br	22cd38 <_gp+0xffff21b0>
  22cfac:	147ff604 	addi	r17,r2,-40
  22cfb0:	3462983a 	sll	r17,r6,r17
  22cfb4:	0011883a 	mov	r8,zero
  22cfb8:	003f4406 	br	22cccc <_gp+0xffff2144>
  22cfbc:	3009883a 	mov	r4,r6
  22cfc0:	d9800215 	stw	r6,8(sp)
  22cfc4:	da400115 	stw	r9,4(sp)
  22cfc8:	da800015 	stw	r10,0(sp)
  22cfcc:	022dc3c0 	call	22dc3c <__clzsi2>
  22cfd0:	10800804 	addi	r2,r2,32
  22cfd4:	da800017 	ldw	r10,0(sp)
  22cfd8:	da400117 	ldw	r9,4(sp)
  22cfdc:	d9800217 	ldw	r6,8(sp)
  22cfe0:	003f3006 	br	22cca4 <_gp+0xffff211c>
  22cfe4:	143ff604 	addi	r16,r2,-40
  22cfe8:	9c20983a 	sll	r16,r19,r16
  22cfec:	0029883a 	mov	r20,zero
  22cff0:	003f1606 	br	22cc4c <_gp+0xffff20c4>
  22cff4:	d9800215 	stw	r6,8(sp)
  22cff8:	d9c00015 	stw	r7,0(sp)
  22cffc:	da400115 	stw	r9,4(sp)
  22d000:	022dc3c0 	call	22dc3c <__clzsi2>
  22d004:	10800804 	addi	r2,r2,32
  22d008:	da400117 	ldw	r9,4(sp)
  22d00c:	d9c00017 	ldw	r7,0(sp)
  22d010:	d9800217 	ldw	r6,8(sp)
  22d014:	003f0306 	br	22cc24 <_gp+0xffff209c>
  22d018:	00c00044 	movi	r3,1
  22d01c:	1947c83a 	sub	r3,r3,r5
  22d020:	00800e04 	movi	r2,56
  22d024:	10feda16 	blt	r2,r3,22cb90 <_gp+0xffff2008>
  22d028:	008007c4 	movi	r2,31
  22d02c:	10c01b16 	blt	r2,r3,22d09c <__muldf3+0x678>
  22d030:	00800804 	movi	r2,32
  22d034:	10c5c83a 	sub	r2,r2,r3
  22d038:	888a983a 	sll	r5,r17,r2
  22d03c:	40c8d83a 	srl	r4,r8,r3
  22d040:	4084983a 	sll	r2,r8,r2
  22d044:	88e2d83a 	srl	r17,r17,r3
  22d048:	2906b03a 	or	r3,r5,r4
  22d04c:	1004c03a 	cmpne	r2,r2,zero
  22d050:	1886b03a 	or	r3,r3,r2
  22d054:	188001cc 	andi	r2,r3,7
  22d058:	10000726 	beq	r2,zero,22d078 <__muldf3+0x654>
  22d05c:	188003cc 	andi	r2,r3,15
  22d060:	01000104 	movi	r4,4
  22d064:	11000426 	beq	r2,r4,22d078 <__muldf3+0x654>
  22d068:	1805883a 	mov	r2,r3
  22d06c:	10c00104 	addi	r3,r2,4
  22d070:	1885803a 	cmpltu	r2,r3,r2
  22d074:	88a3883a 	add	r17,r17,r2
  22d078:	8880202c 	andhi	r2,r17,128
  22d07c:	10001c26 	beq	r2,zero,22d0f0 <__muldf3+0x6cc>
  22d080:	b02b883a 	mov	r21,r22
  22d084:	00800044 	movi	r2,1
  22d088:	000b883a 	mov	r5,zero
  22d08c:	0029883a 	mov	r20,zero
  22d090:	003ec306 	br	22cba0 <_gp+0xffff2018>
  22d094:	5805883a 	mov	r2,r11
  22d098:	003f9906 	br	22cf00 <_gp+0xffff2378>
  22d09c:	00bff844 	movi	r2,-31
  22d0a0:	1145c83a 	sub	r2,r2,r5
  22d0a4:	8888d83a 	srl	r4,r17,r2
  22d0a8:	00800804 	movi	r2,32
  22d0ac:	18801a26 	beq	r3,r2,22d118 <__muldf3+0x6f4>
  22d0b0:	00801004 	movi	r2,64
  22d0b4:	10c5c83a 	sub	r2,r2,r3
  22d0b8:	8884983a 	sll	r2,r17,r2
  22d0bc:	1204b03a 	or	r2,r2,r8
  22d0c0:	1004c03a 	cmpne	r2,r2,zero
  22d0c4:	2084b03a 	or	r2,r4,r2
  22d0c8:	144001cc 	andi	r17,r2,7
  22d0cc:	88000d1e 	bne	r17,zero,22d104 <__muldf3+0x6e0>
  22d0d0:	000b883a 	mov	r5,zero
  22d0d4:	1028d0fa 	srli	r20,r2,3
  22d0d8:	b02b883a 	mov	r21,r22
  22d0dc:	0005883a 	mov	r2,zero
  22d0e0:	a468b03a 	or	r20,r20,r17
  22d0e4:	003eae06 	br	22cba0 <_gp+0xffff2018>
  22d0e8:	1007883a 	mov	r3,r2
  22d0ec:	0023883a 	mov	r17,zero
  22d0f0:	880a927a 	slli	r5,r17,9
  22d0f4:	1805883a 	mov	r2,r3
  22d0f8:	8822977a 	slli	r17,r17,29
  22d0fc:	280ad33a 	srli	r5,r5,12
  22d100:	003ff406 	br	22d0d4 <_gp+0xffff254c>
  22d104:	10c003cc 	andi	r3,r2,15
  22d108:	01000104 	movi	r4,4
  22d10c:	193ff626 	beq	r3,r4,22d0e8 <_gp+0xffff2560>
  22d110:	0023883a 	mov	r17,zero
  22d114:	003fd506 	br	22d06c <_gp+0xffff24e4>
  22d118:	0005883a 	mov	r2,zero
  22d11c:	003fe706 	br	22d0bc <_gp+0xffff2534>
  22d120:	00800434 	movhi	r2,16
  22d124:	89400234 	orhi	r5,r17,8
  22d128:	10bfffc4 	addi	r2,r2,-1
  22d12c:	b02b883a 	mov	r21,r22
  22d130:	288a703a 	and	r5,r5,r2
  22d134:	4029883a 	mov	r20,r8
  22d138:	003eff06 	br	22cd38 <_gp+0xffff21b0>

0022d13c <__subdf3>:
  22d13c:	02000434 	movhi	r8,16
  22d140:	423fffc4 	addi	r8,r8,-1
  22d144:	defffb04 	addi	sp,sp,-20
  22d148:	2a14703a 	and	r10,r5,r8
  22d14c:	3812d53a 	srli	r9,r7,20
  22d150:	3a10703a 	and	r8,r7,r8
  22d154:	2006d77a 	srli	r3,r4,29
  22d158:	3004d77a 	srli	r2,r6,29
  22d15c:	dc000015 	stw	r16,0(sp)
  22d160:	501490fa 	slli	r10,r10,3
  22d164:	2820d53a 	srli	r16,r5,20
  22d168:	401090fa 	slli	r8,r8,3
  22d16c:	dc800215 	stw	r18,8(sp)
  22d170:	dc400115 	stw	r17,4(sp)
  22d174:	dfc00415 	stw	ra,16(sp)
  22d178:	202290fa 	slli	r17,r4,3
  22d17c:	dcc00315 	stw	r19,12(sp)
  22d180:	4a41ffcc 	andi	r9,r9,2047
  22d184:	0101ffc4 	movi	r4,2047
  22d188:	2824d7fa 	srli	r18,r5,31
  22d18c:	8401ffcc 	andi	r16,r16,2047
  22d190:	50c6b03a 	or	r3,r10,r3
  22d194:	380ed7fa 	srli	r7,r7,31
  22d198:	408ab03a 	or	r5,r8,r2
  22d19c:	300c90fa 	slli	r6,r6,3
  22d1a0:	49009626 	beq	r9,r4,22d3fc <__subdf3+0x2c0>
  22d1a4:	39c0005c 	xori	r7,r7,1
  22d1a8:	8245c83a 	sub	r2,r16,r9
  22d1ac:	3c807426 	beq	r7,r18,22d380 <__subdf3+0x244>
  22d1b0:	0080af0e 	bge	zero,r2,22d470 <__subdf3+0x334>
  22d1b4:	48002a1e 	bne	r9,zero,22d260 <__subdf3+0x124>
  22d1b8:	2988b03a 	or	r4,r5,r6
  22d1bc:	20009a1e 	bne	r4,zero,22d428 <__subdf3+0x2ec>
  22d1c0:	888001cc 	andi	r2,r17,7
  22d1c4:	10000726 	beq	r2,zero,22d1e4 <__subdf3+0xa8>
  22d1c8:	888003cc 	andi	r2,r17,15
  22d1cc:	01000104 	movi	r4,4
  22d1d0:	11000426 	beq	r2,r4,22d1e4 <__subdf3+0xa8>
  22d1d4:	890b883a 	add	r5,r17,r4
  22d1d8:	2c63803a 	cmpltu	r17,r5,r17
  22d1dc:	1c47883a 	add	r3,r3,r17
  22d1e0:	2823883a 	mov	r17,r5
  22d1e4:	1880202c 	andhi	r2,r3,128
  22d1e8:	10005926 	beq	r2,zero,22d350 <__subdf3+0x214>
  22d1ec:	84000044 	addi	r16,r16,1
  22d1f0:	0081ffc4 	movi	r2,2047
  22d1f4:	8080be26 	beq	r16,r2,22d4f0 <__subdf3+0x3b4>
  22d1f8:	017fe034 	movhi	r5,65408
  22d1fc:	297fffc4 	addi	r5,r5,-1
  22d200:	1946703a 	and	r3,r3,r5
  22d204:	1804977a 	slli	r2,r3,29
  22d208:	1806927a 	slli	r3,r3,9
  22d20c:	8822d0fa 	srli	r17,r17,3
  22d210:	8401ffcc 	andi	r16,r16,2047
  22d214:	180ad33a 	srli	r5,r3,12
  22d218:	9100004c 	andi	r4,r18,1
  22d21c:	1444b03a 	or	r2,r2,r17
  22d220:	80c1ffcc 	andi	r3,r16,2047
  22d224:	1820953a 	slli	r16,r3,20
  22d228:	20c03fcc 	andi	r3,r4,255
  22d22c:	180897fa 	slli	r4,r3,31
  22d230:	00c00434 	movhi	r3,16
  22d234:	18ffffc4 	addi	r3,r3,-1
  22d238:	28c6703a 	and	r3,r5,r3
  22d23c:	1c06b03a 	or	r3,r3,r16
  22d240:	1906b03a 	or	r3,r3,r4
  22d244:	dfc00417 	ldw	ra,16(sp)
  22d248:	dcc00317 	ldw	r19,12(sp)
  22d24c:	dc800217 	ldw	r18,8(sp)
  22d250:	dc400117 	ldw	r17,4(sp)
  22d254:	dc000017 	ldw	r16,0(sp)
  22d258:	dec00504 	addi	sp,sp,20
  22d25c:	f800283a 	ret
  22d260:	0101ffc4 	movi	r4,2047
  22d264:	813fd626 	beq	r16,r4,22d1c0 <_gp+0xffff2638>
  22d268:	29402034 	orhi	r5,r5,128
  22d26c:	01000e04 	movi	r4,56
  22d270:	2080a316 	blt	r4,r2,22d500 <__subdf3+0x3c4>
  22d274:	010007c4 	movi	r4,31
  22d278:	2080c616 	blt	r4,r2,22d594 <__subdf3+0x458>
  22d27c:	01000804 	movi	r4,32
  22d280:	2089c83a 	sub	r4,r4,r2
  22d284:	2910983a 	sll	r8,r5,r4
  22d288:	308ed83a 	srl	r7,r6,r2
  22d28c:	3108983a 	sll	r4,r6,r4
  22d290:	2884d83a 	srl	r2,r5,r2
  22d294:	41ccb03a 	or	r6,r8,r7
  22d298:	2008c03a 	cmpne	r4,r4,zero
  22d29c:	310cb03a 	or	r6,r6,r4
  22d2a0:	898dc83a 	sub	r6,r17,r6
  22d2a4:	89a3803a 	cmpltu	r17,r17,r6
  22d2a8:	1887c83a 	sub	r3,r3,r2
  22d2ac:	1c47c83a 	sub	r3,r3,r17
  22d2b0:	3023883a 	mov	r17,r6
  22d2b4:	1880202c 	andhi	r2,r3,128
  22d2b8:	10002326 	beq	r2,zero,22d348 <__subdf3+0x20c>
  22d2bc:	04c02034 	movhi	r19,128
  22d2c0:	9cffffc4 	addi	r19,r19,-1
  22d2c4:	1ce6703a 	and	r19,r3,r19
  22d2c8:	98007a26 	beq	r19,zero,22d4b4 <__subdf3+0x378>
  22d2cc:	9809883a 	mov	r4,r19
  22d2d0:	022dc3c0 	call	22dc3c <__clzsi2>
  22d2d4:	113ffe04 	addi	r4,r2,-8
  22d2d8:	00c007c4 	movi	r3,31
  22d2dc:	19007b16 	blt	r3,r4,22d4cc <__subdf3+0x390>
  22d2e0:	00800804 	movi	r2,32
  22d2e4:	1105c83a 	sub	r2,r2,r4
  22d2e8:	8884d83a 	srl	r2,r17,r2
  22d2ec:	9906983a 	sll	r3,r19,r4
  22d2f0:	8922983a 	sll	r17,r17,r4
  22d2f4:	10c4b03a 	or	r2,r2,r3
  22d2f8:	24007816 	blt	r4,r16,22d4dc <__subdf3+0x3a0>
  22d2fc:	2421c83a 	sub	r16,r4,r16
  22d300:	80c00044 	addi	r3,r16,1
  22d304:	010007c4 	movi	r4,31
  22d308:	20c09516 	blt	r4,r3,22d560 <__subdf3+0x424>
  22d30c:	01400804 	movi	r5,32
  22d310:	28cbc83a 	sub	r5,r5,r3
  22d314:	88c8d83a 	srl	r4,r17,r3
  22d318:	8962983a 	sll	r17,r17,r5
  22d31c:	114a983a 	sll	r5,r2,r5
  22d320:	10c6d83a 	srl	r3,r2,r3
  22d324:	8804c03a 	cmpne	r2,r17,zero
  22d328:	290ab03a 	or	r5,r5,r4
  22d32c:	28a2b03a 	or	r17,r5,r2
  22d330:	0021883a 	mov	r16,zero
  22d334:	003fa206 	br	22d1c0 <_gp+0xffff2638>
  22d338:	2090b03a 	or	r8,r4,r2
  22d33c:	40018e26 	beq	r8,zero,22d978 <__subdf3+0x83c>
  22d340:	1007883a 	mov	r3,r2
  22d344:	2023883a 	mov	r17,r4
  22d348:	888001cc 	andi	r2,r17,7
  22d34c:	103f9e1e 	bne	r2,zero,22d1c8 <_gp+0xffff2640>
  22d350:	1804977a 	slli	r2,r3,29
  22d354:	8822d0fa 	srli	r17,r17,3
  22d358:	1810d0fa 	srli	r8,r3,3
  22d35c:	9100004c 	andi	r4,r18,1
  22d360:	1444b03a 	or	r2,r2,r17
  22d364:	00c1ffc4 	movi	r3,2047
  22d368:	80c02826 	beq	r16,r3,22d40c <__subdf3+0x2d0>
  22d36c:	01400434 	movhi	r5,16
  22d370:	297fffc4 	addi	r5,r5,-1
  22d374:	80e0703a 	and	r16,r16,r3
  22d378:	414a703a 	and	r5,r8,r5
  22d37c:	003fa806 	br	22d220 <_gp+0xffff2698>
  22d380:	0080630e 	bge	zero,r2,22d510 <__subdf3+0x3d4>
  22d384:	48003026 	beq	r9,zero,22d448 <__subdf3+0x30c>
  22d388:	0101ffc4 	movi	r4,2047
  22d38c:	813f8c26 	beq	r16,r4,22d1c0 <_gp+0xffff2638>
  22d390:	29402034 	orhi	r5,r5,128
  22d394:	01000e04 	movi	r4,56
  22d398:	2080a90e 	bge	r4,r2,22d640 <__subdf3+0x504>
  22d39c:	298cb03a 	or	r6,r5,r6
  22d3a0:	3012c03a 	cmpne	r9,r6,zero
  22d3a4:	0005883a 	mov	r2,zero
  22d3a8:	4c53883a 	add	r9,r9,r17
  22d3ac:	4c63803a 	cmpltu	r17,r9,r17
  22d3b0:	10c7883a 	add	r3,r2,r3
  22d3b4:	88c7883a 	add	r3,r17,r3
  22d3b8:	4823883a 	mov	r17,r9
  22d3bc:	1880202c 	andhi	r2,r3,128
  22d3c0:	1000d026 	beq	r2,zero,22d704 <__subdf3+0x5c8>
  22d3c4:	84000044 	addi	r16,r16,1
  22d3c8:	0081ffc4 	movi	r2,2047
  22d3cc:	8080fe26 	beq	r16,r2,22d7c8 <__subdf3+0x68c>
  22d3d0:	00bfe034 	movhi	r2,65408
  22d3d4:	10bfffc4 	addi	r2,r2,-1
  22d3d8:	1886703a 	and	r3,r3,r2
  22d3dc:	880ad07a 	srli	r5,r17,1
  22d3e0:	180497fa 	slli	r2,r3,31
  22d3e4:	8900004c 	andi	r4,r17,1
  22d3e8:	2922b03a 	or	r17,r5,r4
  22d3ec:	1806d07a 	srli	r3,r3,1
  22d3f0:	1462b03a 	or	r17,r2,r17
  22d3f4:	3825883a 	mov	r18,r7
  22d3f8:	003f7106 	br	22d1c0 <_gp+0xffff2638>
  22d3fc:	2984b03a 	or	r2,r5,r6
  22d400:	103f6826 	beq	r2,zero,22d1a4 <_gp+0xffff261c>
  22d404:	39c03fcc 	andi	r7,r7,255
  22d408:	003f6706 	br	22d1a8 <_gp+0xffff2620>
  22d40c:	4086b03a 	or	r3,r8,r2
  22d410:	18015226 	beq	r3,zero,22d95c <__subdf3+0x820>
  22d414:	00c00434 	movhi	r3,16
  22d418:	41400234 	orhi	r5,r8,8
  22d41c:	18ffffc4 	addi	r3,r3,-1
  22d420:	28ca703a 	and	r5,r5,r3
  22d424:	003f7e06 	br	22d220 <_gp+0xffff2698>
  22d428:	10bfffc4 	addi	r2,r2,-1
  22d42c:	1000491e 	bne	r2,zero,22d554 <__subdf3+0x418>
  22d430:	898fc83a 	sub	r7,r17,r6
  22d434:	89e3803a 	cmpltu	r17,r17,r7
  22d438:	1947c83a 	sub	r3,r3,r5
  22d43c:	1c47c83a 	sub	r3,r3,r17
  22d440:	3823883a 	mov	r17,r7
  22d444:	003f9b06 	br	22d2b4 <_gp+0xffff272c>
  22d448:	2988b03a 	or	r4,r5,r6
  22d44c:	203f5c26 	beq	r4,zero,22d1c0 <_gp+0xffff2638>
  22d450:	10bfffc4 	addi	r2,r2,-1
  22d454:	1000931e 	bne	r2,zero,22d6a4 <__subdf3+0x568>
  22d458:	898d883a 	add	r6,r17,r6
  22d45c:	3463803a 	cmpltu	r17,r6,r17
  22d460:	1947883a 	add	r3,r3,r5
  22d464:	88c7883a 	add	r3,r17,r3
  22d468:	3023883a 	mov	r17,r6
  22d46c:	003fd306 	br	22d3bc <_gp+0xffff2834>
  22d470:	1000541e 	bne	r2,zero,22d5c4 <__subdf3+0x488>
  22d474:	80800044 	addi	r2,r16,1
  22d478:	1081ffcc 	andi	r2,r2,2047
  22d47c:	01000044 	movi	r4,1
  22d480:	2080a20e 	bge	r4,r2,22d70c <__subdf3+0x5d0>
  22d484:	8989c83a 	sub	r4,r17,r6
  22d488:	8905803a 	cmpltu	r2,r17,r4
  22d48c:	1967c83a 	sub	r19,r3,r5
  22d490:	98a7c83a 	sub	r19,r19,r2
  22d494:	9880202c 	andhi	r2,r19,128
  22d498:	10006326 	beq	r2,zero,22d628 <__subdf3+0x4ec>
  22d49c:	3463c83a 	sub	r17,r6,r17
  22d4a0:	28c7c83a 	sub	r3,r5,r3
  22d4a4:	344d803a 	cmpltu	r6,r6,r17
  22d4a8:	19a7c83a 	sub	r19,r3,r6
  22d4ac:	3825883a 	mov	r18,r7
  22d4b0:	983f861e 	bne	r19,zero,22d2cc <_gp+0xffff2744>
  22d4b4:	8809883a 	mov	r4,r17
  22d4b8:	022dc3c0 	call	22dc3c <__clzsi2>
  22d4bc:	10800804 	addi	r2,r2,32
  22d4c0:	113ffe04 	addi	r4,r2,-8
  22d4c4:	00c007c4 	movi	r3,31
  22d4c8:	193f850e 	bge	r3,r4,22d2e0 <_gp+0xffff2758>
  22d4cc:	10bff604 	addi	r2,r2,-40
  22d4d0:	8884983a 	sll	r2,r17,r2
  22d4d4:	0023883a 	mov	r17,zero
  22d4d8:	243f880e 	bge	r4,r16,22d2fc <_gp+0xffff2774>
  22d4dc:	00ffe034 	movhi	r3,65408
  22d4e0:	18ffffc4 	addi	r3,r3,-1
  22d4e4:	8121c83a 	sub	r16,r16,r4
  22d4e8:	10c6703a 	and	r3,r2,r3
  22d4ec:	003f3406 	br	22d1c0 <_gp+0xffff2638>
  22d4f0:	9100004c 	andi	r4,r18,1
  22d4f4:	000b883a 	mov	r5,zero
  22d4f8:	0005883a 	mov	r2,zero
  22d4fc:	003f4806 	br	22d220 <_gp+0xffff2698>
  22d500:	298cb03a 	or	r6,r5,r6
  22d504:	300cc03a 	cmpne	r6,r6,zero
  22d508:	0005883a 	mov	r2,zero
  22d50c:	003f6406 	br	22d2a0 <_gp+0xffff2718>
  22d510:	10009a1e 	bne	r2,zero,22d77c <__subdf3+0x640>
  22d514:	82400044 	addi	r9,r16,1
  22d518:	4881ffcc 	andi	r2,r9,2047
  22d51c:	02800044 	movi	r10,1
  22d520:	5080670e 	bge	r10,r2,22d6c0 <__subdf3+0x584>
  22d524:	0081ffc4 	movi	r2,2047
  22d528:	4880af26 	beq	r9,r2,22d7e8 <__subdf3+0x6ac>
  22d52c:	898d883a 	add	r6,r17,r6
  22d530:	1945883a 	add	r2,r3,r5
  22d534:	3447803a 	cmpltu	r3,r6,r17
  22d538:	1887883a 	add	r3,r3,r2
  22d53c:	182297fa 	slli	r17,r3,31
  22d540:	300cd07a 	srli	r6,r6,1
  22d544:	1806d07a 	srli	r3,r3,1
  22d548:	4821883a 	mov	r16,r9
  22d54c:	89a2b03a 	or	r17,r17,r6
  22d550:	003f1b06 	br	22d1c0 <_gp+0xffff2638>
  22d554:	0101ffc4 	movi	r4,2047
  22d558:	813f441e 	bne	r16,r4,22d26c <_gp+0xffff26e4>
  22d55c:	003f1806 	br	22d1c0 <_gp+0xffff2638>
  22d560:	843ff844 	addi	r16,r16,-31
  22d564:	01400804 	movi	r5,32
  22d568:	1408d83a 	srl	r4,r2,r16
  22d56c:	19405026 	beq	r3,r5,22d6b0 <__subdf3+0x574>
  22d570:	01401004 	movi	r5,64
  22d574:	28c7c83a 	sub	r3,r5,r3
  22d578:	10c4983a 	sll	r2,r2,r3
  22d57c:	88a2b03a 	or	r17,r17,r2
  22d580:	8822c03a 	cmpne	r17,r17,zero
  22d584:	2462b03a 	or	r17,r4,r17
  22d588:	0007883a 	mov	r3,zero
  22d58c:	0021883a 	mov	r16,zero
  22d590:	003f6d06 	br	22d348 <_gp+0xffff27c0>
  22d594:	11fff804 	addi	r7,r2,-32
  22d598:	01000804 	movi	r4,32
  22d59c:	29ced83a 	srl	r7,r5,r7
  22d5a0:	11004526 	beq	r2,r4,22d6b8 <__subdf3+0x57c>
  22d5a4:	01001004 	movi	r4,64
  22d5a8:	2089c83a 	sub	r4,r4,r2
  22d5ac:	2904983a 	sll	r2,r5,r4
  22d5b0:	118cb03a 	or	r6,r2,r6
  22d5b4:	300cc03a 	cmpne	r6,r6,zero
  22d5b8:	398cb03a 	or	r6,r7,r6
  22d5bc:	0005883a 	mov	r2,zero
  22d5c0:	003f3706 	br	22d2a0 <_gp+0xffff2718>
  22d5c4:	80002a26 	beq	r16,zero,22d670 <__subdf3+0x534>
  22d5c8:	0101ffc4 	movi	r4,2047
  22d5cc:	49006626 	beq	r9,r4,22d768 <__subdf3+0x62c>
  22d5d0:	0085c83a 	sub	r2,zero,r2
  22d5d4:	18c02034 	orhi	r3,r3,128
  22d5d8:	01000e04 	movi	r4,56
  22d5dc:	20807e16 	blt	r4,r2,22d7d8 <__subdf3+0x69c>
  22d5e0:	010007c4 	movi	r4,31
  22d5e4:	2080e716 	blt	r4,r2,22d984 <__subdf3+0x848>
  22d5e8:	01000804 	movi	r4,32
  22d5ec:	2089c83a 	sub	r4,r4,r2
  22d5f0:	1914983a 	sll	r10,r3,r4
  22d5f4:	8890d83a 	srl	r8,r17,r2
  22d5f8:	8908983a 	sll	r4,r17,r4
  22d5fc:	1884d83a 	srl	r2,r3,r2
  22d600:	5222b03a 	or	r17,r10,r8
  22d604:	2006c03a 	cmpne	r3,r4,zero
  22d608:	88e2b03a 	or	r17,r17,r3
  22d60c:	3463c83a 	sub	r17,r6,r17
  22d610:	2885c83a 	sub	r2,r5,r2
  22d614:	344d803a 	cmpltu	r6,r6,r17
  22d618:	1187c83a 	sub	r3,r2,r6
  22d61c:	4821883a 	mov	r16,r9
  22d620:	3825883a 	mov	r18,r7
  22d624:	003f2306 	br	22d2b4 <_gp+0xffff272c>
  22d628:	24d0b03a 	or	r8,r4,r19
  22d62c:	40001b1e 	bne	r8,zero,22d69c <__subdf3+0x560>
  22d630:	0005883a 	mov	r2,zero
  22d634:	0009883a 	mov	r4,zero
  22d638:	0021883a 	mov	r16,zero
  22d63c:	003f4906 	br	22d364 <_gp+0xffff27dc>
  22d640:	010007c4 	movi	r4,31
  22d644:	20803a16 	blt	r4,r2,22d730 <__subdf3+0x5f4>
  22d648:	01000804 	movi	r4,32
  22d64c:	2089c83a 	sub	r4,r4,r2
  22d650:	2912983a 	sll	r9,r5,r4
  22d654:	3090d83a 	srl	r8,r6,r2
  22d658:	3108983a 	sll	r4,r6,r4
  22d65c:	2884d83a 	srl	r2,r5,r2
  22d660:	4a12b03a 	or	r9,r9,r8
  22d664:	2008c03a 	cmpne	r4,r4,zero
  22d668:	4912b03a 	or	r9,r9,r4
  22d66c:	003f4e06 	br	22d3a8 <_gp+0xffff2820>
  22d670:	1c48b03a 	or	r4,r3,r17
  22d674:	20003c26 	beq	r4,zero,22d768 <__subdf3+0x62c>
  22d678:	0084303a 	nor	r2,zero,r2
  22d67c:	1000381e 	bne	r2,zero,22d760 <__subdf3+0x624>
  22d680:	3463c83a 	sub	r17,r6,r17
  22d684:	28c5c83a 	sub	r2,r5,r3
  22d688:	344d803a 	cmpltu	r6,r6,r17
  22d68c:	1187c83a 	sub	r3,r2,r6
  22d690:	4821883a 	mov	r16,r9
  22d694:	3825883a 	mov	r18,r7
  22d698:	003f0606 	br	22d2b4 <_gp+0xffff272c>
  22d69c:	2023883a 	mov	r17,r4
  22d6a0:	003f0906 	br	22d2c8 <_gp+0xffff2740>
  22d6a4:	0101ffc4 	movi	r4,2047
  22d6a8:	813f3a1e 	bne	r16,r4,22d394 <_gp+0xffff280c>
  22d6ac:	003ec406 	br	22d1c0 <_gp+0xffff2638>
  22d6b0:	0005883a 	mov	r2,zero
  22d6b4:	003fb106 	br	22d57c <_gp+0xffff29f4>
  22d6b8:	0005883a 	mov	r2,zero
  22d6bc:	003fbc06 	br	22d5b0 <_gp+0xffff2a28>
  22d6c0:	1c44b03a 	or	r2,r3,r17
  22d6c4:	80008e1e 	bne	r16,zero,22d900 <__subdf3+0x7c4>
  22d6c8:	1000c826 	beq	r2,zero,22d9ec <__subdf3+0x8b0>
  22d6cc:	2984b03a 	or	r2,r5,r6
  22d6d0:	103ebb26 	beq	r2,zero,22d1c0 <_gp+0xffff2638>
  22d6d4:	8989883a 	add	r4,r17,r6
  22d6d8:	1945883a 	add	r2,r3,r5
  22d6dc:	2447803a 	cmpltu	r3,r4,r17
  22d6e0:	1887883a 	add	r3,r3,r2
  22d6e4:	1880202c 	andhi	r2,r3,128
  22d6e8:	2023883a 	mov	r17,r4
  22d6ec:	103f1626 	beq	r2,zero,22d348 <_gp+0xffff27c0>
  22d6f0:	00bfe034 	movhi	r2,65408
  22d6f4:	10bfffc4 	addi	r2,r2,-1
  22d6f8:	5021883a 	mov	r16,r10
  22d6fc:	1886703a 	and	r3,r3,r2
  22d700:	003eaf06 	br	22d1c0 <_gp+0xffff2638>
  22d704:	3825883a 	mov	r18,r7
  22d708:	003f0f06 	br	22d348 <_gp+0xffff27c0>
  22d70c:	1c44b03a 	or	r2,r3,r17
  22d710:	8000251e 	bne	r16,zero,22d7a8 <__subdf3+0x66c>
  22d714:	1000661e 	bne	r2,zero,22d8b0 <__subdf3+0x774>
  22d718:	2990b03a 	or	r8,r5,r6
  22d71c:	40009626 	beq	r8,zero,22d978 <__subdf3+0x83c>
  22d720:	2807883a 	mov	r3,r5
  22d724:	3023883a 	mov	r17,r6
  22d728:	3825883a 	mov	r18,r7
  22d72c:	003ea406 	br	22d1c0 <_gp+0xffff2638>
  22d730:	127ff804 	addi	r9,r2,-32
  22d734:	01000804 	movi	r4,32
  22d738:	2a52d83a 	srl	r9,r5,r9
  22d73c:	11008c26 	beq	r2,r4,22d970 <__subdf3+0x834>
  22d740:	01001004 	movi	r4,64
  22d744:	2085c83a 	sub	r2,r4,r2
  22d748:	2884983a 	sll	r2,r5,r2
  22d74c:	118cb03a 	or	r6,r2,r6
  22d750:	300cc03a 	cmpne	r6,r6,zero
  22d754:	4992b03a 	or	r9,r9,r6
  22d758:	0005883a 	mov	r2,zero
  22d75c:	003f1206 	br	22d3a8 <_gp+0xffff2820>
  22d760:	0101ffc4 	movi	r4,2047
  22d764:	493f9c1e 	bne	r9,r4,22d5d8 <_gp+0xffff2a50>
  22d768:	2807883a 	mov	r3,r5
  22d76c:	3023883a 	mov	r17,r6
  22d770:	4821883a 	mov	r16,r9
  22d774:	3825883a 	mov	r18,r7
  22d778:	003e9106 	br	22d1c0 <_gp+0xffff2638>
  22d77c:	80001f1e 	bne	r16,zero,22d7fc <__subdf3+0x6c0>
  22d780:	1c48b03a 	or	r4,r3,r17
  22d784:	20005a26 	beq	r4,zero,22d8f0 <__subdf3+0x7b4>
  22d788:	0084303a 	nor	r2,zero,r2
  22d78c:	1000561e 	bne	r2,zero,22d8e8 <__subdf3+0x7ac>
  22d790:	89a3883a 	add	r17,r17,r6
  22d794:	1945883a 	add	r2,r3,r5
  22d798:	898d803a 	cmpltu	r6,r17,r6
  22d79c:	3087883a 	add	r3,r6,r2
  22d7a0:	4821883a 	mov	r16,r9
  22d7a4:	003f0506 	br	22d3bc <_gp+0xffff2834>
  22d7a8:	10002b1e 	bne	r2,zero,22d858 <__subdf3+0x71c>
  22d7ac:	2984b03a 	or	r2,r5,r6
  22d7b0:	10008026 	beq	r2,zero,22d9b4 <__subdf3+0x878>
  22d7b4:	2807883a 	mov	r3,r5
  22d7b8:	3023883a 	mov	r17,r6
  22d7bc:	3825883a 	mov	r18,r7
  22d7c0:	0401ffc4 	movi	r16,2047
  22d7c4:	003e7e06 	br	22d1c0 <_gp+0xffff2638>
  22d7c8:	3809883a 	mov	r4,r7
  22d7cc:	0011883a 	mov	r8,zero
  22d7d0:	0005883a 	mov	r2,zero
  22d7d4:	003ee306 	br	22d364 <_gp+0xffff27dc>
  22d7d8:	1c62b03a 	or	r17,r3,r17
  22d7dc:	8822c03a 	cmpne	r17,r17,zero
  22d7e0:	0005883a 	mov	r2,zero
  22d7e4:	003f8906 	br	22d60c <_gp+0xffff2a84>
  22d7e8:	3809883a 	mov	r4,r7
  22d7ec:	4821883a 	mov	r16,r9
  22d7f0:	0011883a 	mov	r8,zero
  22d7f4:	0005883a 	mov	r2,zero
  22d7f8:	003eda06 	br	22d364 <_gp+0xffff27dc>
  22d7fc:	0101ffc4 	movi	r4,2047
  22d800:	49003b26 	beq	r9,r4,22d8f0 <__subdf3+0x7b4>
  22d804:	0085c83a 	sub	r2,zero,r2
  22d808:	18c02034 	orhi	r3,r3,128
  22d80c:	01000e04 	movi	r4,56
  22d810:	20806e16 	blt	r4,r2,22d9cc <__subdf3+0x890>
  22d814:	010007c4 	movi	r4,31
  22d818:	20807716 	blt	r4,r2,22d9f8 <__subdf3+0x8bc>
  22d81c:	01000804 	movi	r4,32
  22d820:	2089c83a 	sub	r4,r4,r2
  22d824:	1914983a 	sll	r10,r3,r4
  22d828:	8890d83a 	srl	r8,r17,r2
  22d82c:	8908983a 	sll	r4,r17,r4
  22d830:	1884d83a 	srl	r2,r3,r2
  22d834:	5222b03a 	or	r17,r10,r8
  22d838:	2006c03a 	cmpne	r3,r4,zero
  22d83c:	88e2b03a 	or	r17,r17,r3
  22d840:	89a3883a 	add	r17,r17,r6
  22d844:	1145883a 	add	r2,r2,r5
  22d848:	898d803a 	cmpltu	r6,r17,r6
  22d84c:	3087883a 	add	r3,r6,r2
  22d850:	4821883a 	mov	r16,r9
  22d854:	003ed906 	br	22d3bc <_gp+0xffff2834>
  22d858:	2984b03a 	or	r2,r5,r6
  22d85c:	10004226 	beq	r2,zero,22d968 <__subdf3+0x82c>
  22d860:	1808d0fa 	srli	r4,r3,3
  22d864:	8822d0fa 	srli	r17,r17,3
  22d868:	1806977a 	slli	r3,r3,29
  22d86c:	2080022c 	andhi	r2,r4,8
  22d870:	1c62b03a 	or	r17,r3,r17
  22d874:	10000826 	beq	r2,zero,22d898 <__subdf3+0x75c>
  22d878:	2812d0fa 	srli	r9,r5,3
  22d87c:	4880022c 	andhi	r2,r9,8
  22d880:	1000051e 	bne	r2,zero,22d898 <__subdf3+0x75c>
  22d884:	300cd0fa 	srli	r6,r6,3
  22d888:	2804977a 	slli	r2,r5,29
  22d88c:	4809883a 	mov	r4,r9
  22d890:	3825883a 	mov	r18,r7
  22d894:	11a2b03a 	or	r17,r2,r6
  22d898:	8806d77a 	srli	r3,r17,29
  22d89c:	200890fa 	slli	r4,r4,3
  22d8a0:	882290fa 	slli	r17,r17,3
  22d8a4:	0401ffc4 	movi	r16,2047
  22d8a8:	1906b03a 	or	r3,r3,r4
  22d8ac:	003e4406 	br	22d1c0 <_gp+0xffff2638>
  22d8b0:	2984b03a 	or	r2,r5,r6
  22d8b4:	103e4226 	beq	r2,zero,22d1c0 <_gp+0xffff2638>
  22d8b8:	8989c83a 	sub	r4,r17,r6
  22d8bc:	8911803a 	cmpltu	r8,r17,r4
  22d8c0:	1945c83a 	sub	r2,r3,r5
  22d8c4:	1205c83a 	sub	r2,r2,r8
  22d8c8:	1200202c 	andhi	r8,r2,128
  22d8cc:	403e9a26 	beq	r8,zero,22d338 <_gp+0xffff27b0>
  22d8d0:	3463c83a 	sub	r17,r6,r17
  22d8d4:	28c5c83a 	sub	r2,r5,r3
  22d8d8:	344d803a 	cmpltu	r6,r6,r17
  22d8dc:	1187c83a 	sub	r3,r2,r6
  22d8e0:	3825883a 	mov	r18,r7
  22d8e4:	003e3606 	br	22d1c0 <_gp+0xffff2638>
  22d8e8:	0101ffc4 	movi	r4,2047
  22d8ec:	493fc71e 	bne	r9,r4,22d80c <_gp+0xffff2c84>
  22d8f0:	2807883a 	mov	r3,r5
  22d8f4:	3023883a 	mov	r17,r6
  22d8f8:	4821883a 	mov	r16,r9
  22d8fc:	003e3006 	br	22d1c0 <_gp+0xffff2638>
  22d900:	10003626 	beq	r2,zero,22d9dc <__subdf3+0x8a0>
  22d904:	2984b03a 	or	r2,r5,r6
  22d908:	10001726 	beq	r2,zero,22d968 <__subdf3+0x82c>
  22d90c:	1808d0fa 	srli	r4,r3,3
  22d910:	8822d0fa 	srli	r17,r17,3
  22d914:	1806977a 	slli	r3,r3,29
  22d918:	2080022c 	andhi	r2,r4,8
  22d91c:	1c62b03a 	or	r17,r3,r17
  22d920:	10000726 	beq	r2,zero,22d940 <__subdf3+0x804>
  22d924:	2812d0fa 	srli	r9,r5,3
  22d928:	4880022c 	andhi	r2,r9,8
  22d92c:	1000041e 	bne	r2,zero,22d940 <__subdf3+0x804>
  22d930:	300cd0fa 	srli	r6,r6,3
  22d934:	2804977a 	slli	r2,r5,29
  22d938:	4809883a 	mov	r4,r9
  22d93c:	11a2b03a 	or	r17,r2,r6
  22d940:	8806d77a 	srli	r3,r17,29
  22d944:	200890fa 	slli	r4,r4,3
  22d948:	882290fa 	slli	r17,r17,3
  22d94c:	3825883a 	mov	r18,r7
  22d950:	1906b03a 	or	r3,r3,r4
  22d954:	0401ffc4 	movi	r16,2047
  22d958:	003e1906 	br	22d1c0 <_gp+0xffff2638>
  22d95c:	000b883a 	mov	r5,zero
  22d960:	0005883a 	mov	r2,zero
  22d964:	003e2e06 	br	22d220 <_gp+0xffff2698>
  22d968:	0401ffc4 	movi	r16,2047
  22d96c:	003e1406 	br	22d1c0 <_gp+0xffff2638>
  22d970:	0005883a 	mov	r2,zero
  22d974:	003f7506 	br	22d74c <_gp+0xffff2bc4>
  22d978:	0005883a 	mov	r2,zero
  22d97c:	0009883a 	mov	r4,zero
  22d980:	003e7806 	br	22d364 <_gp+0xffff27dc>
  22d984:	123ff804 	addi	r8,r2,-32
  22d988:	01000804 	movi	r4,32
  22d98c:	1a10d83a 	srl	r8,r3,r8
  22d990:	11002526 	beq	r2,r4,22da28 <__subdf3+0x8ec>
  22d994:	01001004 	movi	r4,64
  22d998:	2085c83a 	sub	r2,r4,r2
  22d99c:	1884983a 	sll	r2,r3,r2
  22d9a0:	1444b03a 	or	r2,r2,r17
  22d9a4:	1004c03a 	cmpne	r2,r2,zero
  22d9a8:	40a2b03a 	or	r17,r8,r2
  22d9ac:	0005883a 	mov	r2,zero
  22d9b0:	003f1606 	br	22d60c <_gp+0xffff2a84>
  22d9b4:	02000434 	movhi	r8,16
  22d9b8:	0009883a 	mov	r4,zero
  22d9bc:	423fffc4 	addi	r8,r8,-1
  22d9c0:	00bfffc4 	movi	r2,-1
  22d9c4:	0401ffc4 	movi	r16,2047
  22d9c8:	003e6606 	br	22d364 <_gp+0xffff27dc>
  22d9cc:	1c62b03a 	or	r17,r3,r17
  22d9d0:	8822c03a 	cmpne	r17,r17,zero
  22d9d4:	0005883a 	mov	r2,zero
  22d9d8:	003f9906 	br	22d840 <_gp+0xffff2cb8>
  22d9dc:	2807883a 	mov	r3,r5
  22d9e0:	3023883a 	mov	r17,r6
  22d9e4:	0401ffc4 	movi	r16,2047
  22d9e8:	003df506 	br	22d1c0 <_gp+0xffff2638>
  22d9ec:	2807883a 	mov	r3,r5
  22d9f0:	3023883a 	mov	r17,r6
  22d9f4:	003df206 	br	22d1c0 <_gp+0xffff2638>
  22d9f8:	123ff804 	addi	r8,r2,-32
  22d9fc:	01000804 	movi	r4,32
  22da00:	1a10d83a 	srl	r8,r3,r8
  22da04:	11000a26 	beq	r2,r4,22da30 <__subdf3+0x8f4>
  22da08:	01001004 	movi	r4,64
  22da0c:	2085c83a 	sub	r2,r4,r2
  22da10:	1884983a 	sll	r2,r3,r2
  22da14:	1444b03a 	or	r2,r2,r17
  22da18:	1004c03a 	cmpne	r2,r2,zero
  22da1c:	40a2b03a 	or	r17,r8,r2
  22da20:	0005883a 	mov	r2,zero
  22da24:	003f8606 	br	22d840 <_gp+0xffff2cb8>
  22da28:	0005883a 	mov	r2,zero
  22da2c:	003fdc06 	br	22d9a0 <_gp+0xffff2e18>
  22da30:	0005883a 	mov	r2,zero
  22da34:	003ff706 	br	22da14 <_gp+0xffff2e8c>

0022da38 <__fixdfsi>:
  22da38:	280cd53a 	srli	r6,r5,20
  22da3c:	00c00434 	movhi	r3,16
  22da40:	18ffffc4 	addi	r3,r3,-1
  22da44:	3181ffcc 	andi	r6,r6,2047
  22da48:	01c0ff84 	movi	r7,1022
  22da4c:	28c6703a 	and	r3,r5,r3
  22da50:	280ad7fa 	srli	r5,r5,31
  22da54:	3980120e 	bge	r7,r6,22daa0 <__fixdfsi+0x68>
  22da58:	00810744 	movi	r2,1053
  22da5c:	11800c16 	blt	r2,r6,22da90 <__fixdfsi+0x58>
  22da60:	00810cc4 	movi	r2,1075
  22da64:	1185c83a 	sub	r2,r2,r6
  22da68:	01c007c4 	movi	r7,31
  22da6c:	18c00434 	orhi	r3,r3,16
  22da70:	38800d16 	blt	r7,r2,22daa8 <__fixdfsi+0x70>
  22da74:	31befb44 	addi	r6,r6,-1043
  22da78:	2084d83a 	srl	r2,r4,r2
  22da7c:	1986983a 	sll	r3,r3,r6
  22da80:	1884b03a 	or	r2,r3,r2
  22da84:	28000726 	beq	r5,zero,22daa4 <__fixdfsi+0x6c>
  22da88:	0085c83a 	sub	r2,zero,r2
  22da8c:	f800283a 	ret
  22da90:	00a00034 	movhi	r2,32768
  22da94:	10bfffc4 	addi	r2,r2,-1
  22da98:	2885883a 	add	r2,r5,r2
  22da9c:	f800283a 	ret
  22daa0:	0005883a 	mov	r2,zero
  22daa4:	f800283a 	ret
  22daa8:	008104c4 	movi	r2,1043
  22daac:	1185c83a 	sub	r2,r2,r6
  22dab0:	1884d83a 	srl	r2,r3,r2
  22dab4:	003ff306 	br	22da84 <_gp+0xffff2efc>

0022dab8 <__floatsidf>:
  22dab8:	defffd04 	addi	sp,sp,-12
  22dabc:	dfc00215 	stw	ra,8(sp)
  22dac0:	dc400115 	stw	r17,4(sp)
  22dac4:	dc000015 	stw	r16,0(sp)
  22dac8:	20002b26 	beq	r4,zero,22db78 <__floatsidf+0xc0>
  22dacc:	2023883a 	mov	r17,r4
  22dad0:	2020d7fa 	srli	r16,r4,31
  22dad4:	20002d16 	blt	r4,zero,22db8c <__floatsidf+0xd4>
  22dad8:	8809883a 	mov	r4,r17
  22dadc:	022dc3c0 	call	22dc3c <__clzsi2>
  22dae0:	01410784 	movi	r5,1054
  22dae4:	288bc83a 	sub	r5,r5,r2
  22dae8:	01010cc4 	movi	r4,1075
  22daec:	2149c83a 	sub	r4,r4,r5
  22daf0:	00c007c4 	movi	r3,31
  22daf4:	1900160e 	bge	r3,r4,22db50 <__floatsidf+0x98>
  22daf8:	00c104c4 	movi	r3,1043
  22dafc:	1947c83a 	sub	r3,r3,r5
  22db00:	88c6983a 	sll	r3,r17,r3
  22db04:	00800434 	movhi	r2,16
  22db08:	10bfffc4 	addi	r2,r2,-1
  22db0c:	1886703a 	and	r3,r3,r2
  22db10:	2941ffcc 	andi	r5,r5,2047
  22db14:	800d883a 	mov	r6,r16
  22db18:	0005883a 	mov	r2,zero
  22db1c:	280a953a 	slli	r5,r5,20
  22db20:	31803fcc 	andi	r6,r6,255
  22db24:	01000434 	movhi	r4,16
  22db28:	300c97fa 	slli	r6,r6,31
  22db2c:	213fffc4 	addi	r4,r4,-1
  22db30:	1906703a 	and	r3,r3,r4
  22db34:	1946b03a 	or	r3,r3,r5
  22db38:	1986b03a 	or	r3,r3,r6
  22db3c:	dfc00217 	ldw	ra,8(sp)
  22db40:	dc400117 	ldw	r17,4(sp)
  22db44:	dc000017 	ldw	r16,0(sp)
  22db48:	dec00304 	addi	sp,sp,12
  22db4c:	f800283a 	ret
  22db50:	00c002c4 	movi	r3,11
  22db54:	1887c83a 	sub	r3,r3,r2
  22db58:	88c6d83a 	srl	r3,r17,r3
  22db5c:	8904983a 	sll	r2,r17,r4
  22db60:	01000434 	movhi	r4,16
  22db64:	213fffc4 	addi	r4,r4,-1
  22db68:	2941ffcc 	andi	r5,r5,2047
  22db6c:	1906703a 	and	r3,r3,r4
  22db70:	800d883a 	mov	r6,r16
  22db74:	003fe906 	br	22db1c <_gp+0xffff2f94>
  22db78:	000d883a 	mov	r6,zero
  22db7c:	000b883a 	mov	r5,zero
  22db80:	0007883a 	mov	r3,zero
  22db84:	0005883a 	mov	r2,zero
  22db88:	003fe406 	br	22db1c <_gp+0xffff2f94>
  22db8c:	0123c83a 	sub	r17,zero,r4
  22db90:	003fd106 	br	22dad8 <_gp+0xffff2f50>

0022db94 <__floatunsidf>:
  22db94:	defffe04 	addi	sp,sp,-8
  22db98:	dc000015 	stw	r16,0(sp)
  22db9c:	dfc00115 	stw	ra,4(sp)
  22dba0:	2021883a 	mov	r16,r4
  22dba4:	20002226 	beq	r4,zero,22dc30 <__floatunsidf+0x9c>
  22dba8:	022dc3c0 	call	22dc3c <__clzsi2>
  22dbac:	01010784 	movi	r4,1054
  22dbb0:	2089c83a 	sub	r4,r4,r2
  22dbb4:	01810cc4 	movi	r6,1075
  22dbb8:	310dc83a 	sub	r6,r6,r4
  22dbbc:	00c007c4 	movi	r3,31
  22dbc0:	1980120e 	bge	r3,r6,22dc0c <__floatunsidf+0x78>
  22dbc4:	00c104c4 	movi	r3,1043
  22dbc8:	1907c83a 	sub	r3,r3,r4
  22dbcc:	80ca983a 	sll	r5,r16,r3
  22dbd0:	00800434 	movhi	r2,16
  22dbd4:	10bfffc4 	addi	r2,r2,-1
  22dbd8:	2101ffcc 	andi	r4,r4,2047
  22dbdc:	0021883a 	mov	r16,zero
  22dbe0:	288a703a 	and	r5,r5,r2
  22dbe4:	2008953a 	slli	r4,r4,20
  22dbe8:	00c00434 	movhi	r3,16
  22dbec:	18ffffc4 	addi	r3,r3,-1
  22dbf0:	28c6703a 	and	r3,r5,r3
  22dbf4:	8005883a 	mov	r2,r16
  22dbf8:	1906b03a 	or	r3,r3,r4
  22dbfc:	dfc00117 	ldw	ra,4(sp)
  22dc00:	dc000017 	ldw	r16,0(sp)
  22dc04:	dec00204 	addi	sp,sp,8
  22dc08:	f800283a 	ret
  22dc0c:	00c002c4 	movi	r3,11
  22dc10:	188bc83a 	sub	r5,r3,r2
  22dc14:	814ad83a 	srl	r5,r16,r5
  22dc18:	00c00434 	movhi	r3,16
  22dc1c:	18ffffc4 	addi	r3,r3,-1
  22dc20:	81a0983a 	sll	r16,r16,r6
  22dc24:	2101ffcc 	andi	r4,r4,2047
  22dc28:	28ca703a 	and	r5,r5,r3
  22dc2c:	003fed06 	br	22dbe4 <_gp+0xffff305c>
  22dc30:	0009883a 	mov	r4,zero
  22dc34:	000b883a 	mov	r5,zero
  22dc38:	003fea06 	br	22dbe4 <_gp+0xffff305c>

0022dc3c <__clzsi2>:
  22dc3c:	00bfffd4 	movui	r2,65535
  22dc40:	11000536 	bltu	r2,r4,22dc58 <__clzsi2+0x1c>
  22dc44:	00803fc4 	movi	r2,255
  22dc48:	11000f36 	bltu	r2,r4,22dc88 <__clzsi2+0x4c>
  22dc4c:	00800804 	movi	r2,32
  22dc50:	0007883a 	mov	r3,zero
  22dc54:	00000506 	br	22dc6c <__clzsi2+0x30>
  22dc58:	00804034 	movhi	r2,256
  22dc5c:	10bfffc4 	addi	r2,r2,-1
  22dc60:	11000c2e 	bgeu	r2,r4,22dc94 <__clzsi2+0x58>
  22dc64:	00800204 	movi	r2,8
  22dc68:	00c00604 	movi	r3,24
  22dc6c:	20c8d83a 	srl	r4,r4,r3
  22dc70:	00c008f4 	movhi	r3,35
  22dc74:	18c3b904 	addi	r3,r3,3812
  22dc78:	1909883a 	add	r4,r3,r4
  22dc7c:	20c00003 	ldbu	r3,0(r4)
  22dc80:	10c5c83a 	sub	r2,r2,r3
  22dc84:	f800283a 	ret
  22dc88:	00800604 	movi	r2,24
  22dc8c:	00c00204 	movi	r3,8
  22dc90:	003ff606 	br	22dc6c <_gp+0xffff30e4>
  22dc94:	00800404 	movi	r2,16
  22dc98:	1007883a 	mov	r3,r2
  22dc9c:	003ff306 	br	22dc6c <_gp+0xffff30e4>

0022dca0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22dca0:	defffe04 	addi	sp,sp,-8
  22dca4:	dfc00115 	stw	ra,4(sp)
  22dca8:	df000015 	stw	fp,0(sp)
  22dcac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22dcb0:	d0a00b17 	ldw	r2,-32724(gp)
  22dcb4:	10000326 	beq	r2,zero,22dcc4 <alt_get_errno+0x24>
  22dcb8:	d0a00b17 	ldw	r2,-32724(gp)
  22dcbc:	103ee83a 	callr	r2
  22dcc0:	00000106 	br	22dcc8 <alt_get_errno+0x28>
  22dcc4:	d0a72004 	addi	r2,gp,-25472
}
  22dcc8:	e037883a 	mov	sp,fp
  22dccc:	dfc00117 	ldw	ra,4(sp)
  22dcd0:	df000017 	ldw	fp,0(sp)
  22dcd4:	dec00204 	addi	sp,sp,8
  22dcd8:	f800283a 	ret

0022dcdc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  22dcdc:	defffb04 	addi	sp,sp,-20
  22dce0:	dfc00415 	stw	ra,16(sp)
  22dce4:	df000315 	stw	fp,12(sp)
  22dce8:	df000304 	addi	fp,sp,12
  22dcec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  22dcf0:	e0bfff17 	ldw	r2,-4(fp)
  22dcf4:	10000616 	blt	r2,zero,22dd10 <close+0x34>
  22dcf8:	e0bfff17 	ldw	r2,-4(fp)
  22dcfc:	10c00324 	muli	r3,r2,12
  22dd00:	008008f4 	movhi	r2,35
  22dd04:	108a8204 	addi	r2,r2,10760
  22dd08:	1885883a 	add	r2,r3,r2
  22dd0c:	00000106 	br	22dd14 <close+0x38>
  22dd10:	0005883a 	mov	r2,zero
  22dd14:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  22dd18:	e0bffd17 	ldw	r2,-12(fp)
  22dd1c:	10001926 	beq	r2,zero,22dd84 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  22dd20:	e0bffd17 	ldw	r2,-12(fp)
  22dd24:	10800017 	ldw	r2,0(r2)
  22dd28:	10800417 	ldw	r2,16(r2)
  22dd2c:	10000626 	beq	r2,zero,22dd48 <close+0x6c>
  22dd30:	e0bffd17 	ldw	r2,-12(fp)
  22dd34:	10800017 	ldw	r2,0(r2)
  22dd38:	10800417 	ldw	r2,16(r2)
  22dd3c:	e13ffd17 	ldw	r4,-12(fp)
  22dd40:	103ee83a 	callr	r2
  22dd44:	00000106 	br	22dd4c <close+0x70>
  22dd48:	0005883a 	mov	r2,zero
  22dd4c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  22dd50:	e13fff17 	ldw	r4,-4(fp)
  22dd54:	022e7500 	call	22e750 <alt_release_fd>
    if (rval < 0)
  22dd58:	e0bffe17 	ldw	r2,-8(fp)
  22dd5c:	1000070e 	bge	r2,zero,22dd7c <close+0xa0>
    {
      ALT_ERRNO = -rval;
  22dd60:	022dca00 	call	22dca0 <alt_get_errno>
  22dd64:	1007883a 	mov	r3,r2
  22dd68:	e0bffe17 	ldw	r2,-8(fp)
  22dd6c:	0085c83a 	sub	r2,zero,r2
  22dd70:	18800015 	stw	r2,0(r3)
      return -1;
  22dd74:	00bfffc4 	movi	r2,-1
  22dd78:	00000706 	br	22dd98 <close+0xbc>
    }
    return 0;
  22dd7c:	0005883a 	mov	r2,zero
  22dd80:	00000506 	br	22dd98 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  22dd84:	022dca00 	call	22dca0 <alt_get_errno>
  22dd88:	1007883a 	mov	r3,r2
  22dd8c:	00801444 	movi	r2,81
  22dd90:	18800015 	stw	r2,0(r3)
    return -1;
  22dd94:	00bfffc4 	movi	r2,-1
  }
}
  22dd98:	e037883a 	mov	sp,fp
  22dd9c:	dfc00117 	ldw	ra,4(sp)
  22dda0:	df000017 	ldw	fp,0(sp)
  22dda4:	dec00204 	addi	sp,sp,8
  22dda8:	f800283a 	ret

0022ddac <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  22ddac:	defffc04 	addi	sp,sp,-16
  22ddb0:	df000315 	stw	fp,12(sp)
  22ddb4:	df000304 	addi	fp,sp,12
  22ddb8:	e13ffd15 	stw	r4,-12(fp)
  22ddbc:	e17ffe15 	stw	r5,-8(fp)
  22ddc0:	e1bfff15 	stw	r6,-4(fp)
  return len;
  22ddc4:	e0bfff17 	ldw	r2,-4(fp)
}
  22ddc8:	e037883a 	mov	sp,fp
  22ddcc:	df000017 	ldw	fp,0(sp)
  22ddd0:	dec00104 	addi	sp,sp,4
  22ddd4:	f800283a 	ret

0022ddd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22ddd8:	defffe04 	addi	sp,sp,-8
  22dddc:	dfc00115 	stw	ra,4(sp)
  22dde0:	df000015 	stw	fp,0(sp)
  22dde4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22dde8:	d0a00b17 	ldw	r2,-32724(gp)
  22ddec:	10000326 	beq	r2,zero,22ddfc <alt_get_errno+0x24>
  22ddf0:	d0a00b17 	ldw	r2,-32724(gp)
  22ddf4:	103ee83a 	callr	r2
  22ddf8:	00000106 	br	22de00 <alt_get_errno+0x28>
  22ddfc:	d0a72004 	addi	r2,gp,-25472
}
  22de00:	e037883a 	mov	sp,fp
  22de04:	dfc00117 	ldw	ra,4(sp)
  22de08:	df000017 	ldw	fp,0(sp)
  22de0c:	dec00204 	addi	sp,sp,8
  22de10:	f800283a 	ret

0022de14 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  22de14:	defffa04 	addi	sp,sp,-24
  22de18:	dfc00515 	stw	ra,20(sp)
  22de1c:	df000415 	stw	fp,16(sp)
  22de20:	df000404 	addi	fp,sp,16
  22de24:	e13ffe15 	stw	r4,-8(fp)
  22de28:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  22de2c:	e0bffe17 	ldw	r2,-8(fp)
  22de30:	10000326 	beq	r2,zero,22de40 <alt_dev_llist_insert+0x2c>
  22de34:	e0bffe17 	ldw	r2,-8(fp)
  22de38:	10800217 	ldw	r2,8(r2)
  22de3c:	1000061e 	bne	r2,zero,22de58 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  22de40:	022ddd80 	call	22ddd8 <alt_get_errno>
  22de44:	1007883a 	mov	r3,r2
  22de48:	00800584 	movi	r2,22
  22de4c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  22de50:	00bffa84 	movi	r2,-22
  22de54:	00001306 	br	22dea4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  22de58:	e0bffe17 	ldw	r2,-8(fp)
  22de5c:	e0ffff17 	ldw	r3,-4(fp)
  22de60:	e0fffc15 	stw	r3,-16(fp)
  22de64:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  22de68:	e0bffd17 	ldw	r2,-12(fp)
  22de6c:	e0fffc17 	ldw	r3,-16(fp)
  22de70:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  22de74:	e0bffc17 	ldw	r2,-16(fp)
  22de78:	10c00017 	ldw	r3,0(r2)
  22de7c:	e0bffd17 	ldw	r2,-12(fp)
  22de80:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  22de84:	e0bffc17 	ldw	r2,-16(fp)
  22de88:	10800017 	ldw	r2,0(r2)
  22de8c:	e0fffd17 	ldw	r3,-12(fp)
  22de90:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  22de94:	e0bffc17 	ldw	r2,-16(fp)
  22de98:	e0fffd17 	ldw	r3,-12(fp)
  22de9c:	10c00015 	stw	r3,0(r2)

  return 0;  
  22dea0:	0005883a 	mov	r2,zero
}
  22dea4:	e037883a 	mov	sp,fp
  22dea8:	dfc00117 	ldw	ra,4(sp)
  22deac:	df000017 	ldw	fp,0(sp)
  22deb0:	dec00204 	addi	sp,sp,8
  22deb4:	f800283a 	ret

0022deb8 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
  22deb8:	defffc04 	addi	sp,sp,-16
  22debc:	df000315 	stw	fp,12(sp)
  22dec0:	df000304 	addi	fp,sp,12
  22dec4:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
  22dec8:	e0bfff17 	ldw	r2,-4(fp)
  22decc:	10800217 	ldw	r2,8(r2)
  22ded0:	1000021e 	bne	r2,zero,22dedc <alt_fs_reg+0x24>
  {
    return -ENODEV;
  22ded4:	00bffb44 	movi	r2,-19
  22ded8:	00001306 	br	22df28 <alt_fs_reg+0x70>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
  22dedc:	e0bfff17 	ldw	r2,-4(fp)
  22dee0:	d0e00604 	addi	r3,gp,-32744
  22dee4:	e0fffd15 	stw	r3,-12(fp)
  22dee8:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  22deec:	e0bffe17 	ldw	r2,-8(fp)
  22def0:	e0fffd17 	ldw	r3,-12(fp)
  22def4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  22def8:	e0bffd17 	ldw	r2,-12(fp)
  22defc:	10c00017 	ldw	r3,0(r2)
  22df00:	e0bffe17 	ldw	r2,-8(fp)
  22df04:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  22df08:	e0bffd17 	ldw	r2,-12(fp)
  22df0c:	10800017 	ldw	r2,0(r2)
  22df10:	e0fffe17 	ldw	r3,-8(fp)
  22df14:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  22df18:	e0bffd17 	ldw	r2,-12(fp)
  22df1c:	e0fffe17 	ldw	r3,-8(fp)
  22df20:	10c00015 	stw	r3,0(r2)

  return 0;
  22df24:	0005883a 	mov	r2,zero
} 
  22df28:	e037883a 	mov	sp,fp
  22df2c:	df000017 	ldw	fp,0(sp)
  22df30:	dec00104 	addi	sp,sp,4
  22df34:	f800283a 	ret

0022df38 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22df38:	defffe04 	addi	sp,sp,-8
  22df3c:	dfc00115 	stw	ra,4(sp)
  22df40:	df000015 	stw	fp,0(sp)
  22df44:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22df48:	d0a00b17 	ldw	r2,-32724(gp)
  22df4c:	10000326 	beq	r2,zero,22df5c <alt_get_errno+0x24>
  22df50:	d0a00b17 	ldw	r2,-32724(gp)
  22df54:	103ee83a 	callr	r2
  22df58:	00000106 	br	22df60 <alt_get_errno+0x28>
  22df5c:	d0a72004 	addi	r2,gp,-25472
}
  22df60:	e037883a 	mov	sp,fp
  22df64:	dfc00117 	ldw	ra,4(sp)
  22df68:	df000017 	ldw	fp,0(sp)
  22df6c:	dec00204 	addi	sp,sp,8
  22df70:	f800283a 	ret

0022df74 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  22df74:	defffb04 	addi	sp,sp,-20
  22df78:	dfc00415 	stw	ra,16(sp)
  22df7c:	df000315 	stw	fp,12(sp)
  22df80:	df000304 	addi	fp,sp,12
  22df84:	e13ffe15 	stw	r4,-8(fp)
  22df88:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  22df8c:	e0bffe17 	ldw	r2,-8(fp)
  22df90:	10000616 	blt	r2,zero,22dfac <fstat+0x38>
  22df94:	e0bffe17 	ldw	r2,-8(fp)
  22df98:	10c00324 	muli	r3,r2,12
  22df9c:	008008f4 	movhi	r2,35
  22dfa0:	108a8204 	addi	r2,r2,10760
  22dfa4:	1885883a 	add	r2,r3,r2
  22dfa8:	00000106 	br	22dfb0 <fstat+0x3c>
  22dfac:	0005883a 	mov	r2,zero
  22dfb0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  22dfb4:	e0bffd17 	ldw	r2,-12(fp)
  22dfb8:	10001026 	beq	r2,zero,22dffc <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  22dfbc:	e0bffd17 	ldw	r2,-12(fp)
  22dfc0:	10800017 	ldw	r2,0(r2)
  22dfc4:	10800817 	ldw	r2,32(r2)
  22dfc8:	10000726 	beq	r2,zero,22dfe8 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  22dfcc:	e0bffd17 	ldw	r2,-12(fp)
  22dfd0:	10800017 	ldw	r2,0(r2)
  22dfd4:	10800817 	ldw	r2,32(r2)
  22dfd8:	e17fff17 	ldw	r5,-4(fp)
  22dfdc:	e13ffd17 	ldw	r4,-12(fp)
  22dfe0:	103ee83a 	callr	r2
  22dfe4:	00000a06 	br	22e010 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  22dfe8:	e0bfff17 	ldw	r2,-4(fp)
  22dfec:	00c80004 	movi	r3,8192
  22dff0:	10c00115 	stw	r3,4(r2)
      return 0;
  22dff4:	0005883a 	mov	r2,zero
  22dff8:	00000506 	br	22e010 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  22dffc:	022df380 	call	22df38 <alt_get_errno>
  22e000:	1007883a 	mov	r3,r2
  22e004:	00801444 	movi	r2,81
  22e008:	18800015 	stw	r2,0(r3)
    return -1;
  22e00c:	00bfffc4 	movi	r2,-1
  }
}
  22e010:	e037883a 	mov	sp,fp
  22e014:	dfc00117 	ldw	ra,4(sp)
  22e018:	df000017 	ldw	fp,0(sp)
  22e01c:	dec00204 	addi	sp,sp,8
  22e020:	f800283a 	ret

0022e024 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22e024:	defffe04 	addi	sp,sp,-8
  22e028:	dfc00115 	stw	ra,4(sp)
  22e02c:	df000015 	stw	fp,0(sp)
  22e030:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22e034:	d0a00b17 	ldw	r2,-32724(gp)
  22e038:	10000326 	beq	r2,zero,22e048 <alt_get_errno+0x24>
  22e03c:	d0a00b17 	ldw	r2,-32724(gp)
  22e040:	103ee83a 	callr	r2
  22e044:	00000106 	br	22e04c <alt_get_errno+0x28>
  22e048:	d0a72004 	addi	r2,gp,-25472
}
  22e04c:	e037883a 	mov	sp,fp
  22e050:	dfc00117 	ldw	ra,4(sp)
  22e054:	df000017 	ldw	fp,0(sp)
  22e058:	dec00204 	addi	sp,sp,8
  22e05c:	f800283a 	ret

0022e060 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  22e060:	deffed04 	addi	sp,sp,-76
  22e064:	dfc01215 	stw	ra,72(sp)
  22e068:	df001115 	stw	fp,68(sp)
  22e06c:	df001104 	addi	fp,sp,68
  22e070:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  22e074:	e0bfff17 	ldw	r2,-4(fp)
  22e078:	10000616 	blt	r2,zero,22e094 <isatty+0x34>
  22e07c:	e0bfff17 	ldw	r2,-4(fp)
  22e080:	10c00324 	muli	r3,r2,12
  22e084:	008008f4 	movhi	r2,35
  22e088:	108a8204 	addi	r2,r2,10760
  22e08c:	1885883a 	add	r2,r3,r2
  22e090:	00000106 	br	22e098 <isatty+0x38>
  22e094:	0005883a 	mov	r2,zero
  22e098:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  22e09c:	e0bfef17 	ldw	r2,-68(fp)
  22e0a0:	10000e26 	beq	r2,zero,22e0dc <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  22e0a4:	e0bfef17 	ldw	r2,-68(fp)
  22e0a8:	10800017 	ldw	r2,0(r2)
  22e0ac:	10800817 	ldw	r2,32(r2)
  22e0b0:	1000021e 	bne	r2,zero,22e0bc <isatty+0x5c>
    {
      return 1;
  22e0b4:	00800044 	movi	r2,1
  22e0b8:	00000d06 	br	22e0f0 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  22e0bc:	e0bff004 	addi	r2,fp,-64
  22e0c0:	100b883a 	mov	r5,r2
  22e0c4:	e13fff17 	ldw	r4,-4(fp)
  22e0c8:	022df740 	call	22df74 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  22e0cc:	e0bff117 	ldw	r2,-60(fp)
  22e0d0:	10880020 	cmpeqi	r2,r2,8192
  22e0d4:	10803fcc 	andi	r2,r2,255
  22e0d8:	00000506 	br	22e0f0 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  22e0dc:	022e0240 	call	22e024 <alt_get_errno>
  22e0e0:	1007883a 	mov	r3,r2
  22e0e4:	00801444 	movi	r2,81
  22e0e8:	18800015 	stw	r2,0(r3)
    return 0;
  22e0ec:	0005883a 	mov	r2,zero
  }
}
  22e0f0:	e037883a 	mov	sp,fp
  22e0f4:	dfc00117 	ldw	ra,4(sp)
  22e0f8:	df000017 	ldw	fp,0(sp)
  22e0fc:	dec00204 	addi	sp,sp,8
  22e100:	f800283a 	ret

0022e104 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  22e104:	defffc04 	addi	sp,sp,-16
  22e108:	df000315 	stw	fp,12(sp)
  22e10c:	df000304 	addi	fp,sp,12
  22e110:	e13ffd15 	stw	r4,-12(fp)
  22e114:	e17ffe15 	stw	r5,-8(fp)
  22e118:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  22e11c:	e0fffe17 	ldw	r3,-8(fp)
  22e120:	e0bffd17 	ldw	r2,-12(fp)
  22e124:	18800c26 	beq	r3,r2,22e158 <alt_load_section+0x54>
  {
    while( to != end )
  22e128:	00000806 	br	22e14c <alt_load_section+0x48>
    {
      *to++ = *from++;
  22e12c:	e0bffe17 	ldw	r2,-8(fp)
  22e130:	10c00104 	addi	r3,r2,4
  22e134:	e0fffe15 	stw	r3,-8(fp)
  22e138:	e0fffd17 	ldw	r3,-12(fp)
  22e13c:	19000104 	addi	r4,r3,4
  22e140:	e13ffd15 	stw	r4,-12(fp)
  22e144:	18c00017 	ldw	r3,0(r3)
  22e148:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  22e14c:	e0fffe17 	ldw	r3,-8(fp)
  22e150:	e0bfff17 	ldw	r2,-4(fp)
  22e154:	18bff51e 	bne	r3,r2,22e12c <_gp+0xffff35a4>
    {
      *to++ = *from++;
    }
  }
}
  22e158:	0001883a 	nop
  22e15c:	e037883a 	mov	sp,fp
  22e160:	df000017 	ldw	fp,0(sp)
  22e164:	dec00104 	addi	sp,sp,4
  22e168:	f800283a 	ret

0022e16c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  22e16c:	defffe04 	addi	sp,sp,-8
  22e170:	dfc00115 	stw	ra,4(sp)
  22e174:	df000015 	stw	fp,0(sp)
  22e178:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  22e17c:	018008f4 	movhi	r6,35
  22e180:	318b0404 	addi	r6,r6,11280
  22e184:	014008f4 	movhi	r5,35
  22e188:	29440604 	addi	r5,r5,4120
  22e18c:	010008f4 	movhi	r4,35
  22e190:	210b0404 	addi	r4,r4,11280
  22e194:	022e1040 	call	22e104 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  22e198:	018008b4 	movhi	r6,34
  22e19c:	31809104 	addi	r6,r6,580
  22e1a0:	014008b4 	movhi	r5,34
  22e1a4:	29400804 	addi	r5,r5,32
  22e1a8:	010008b4 	movhi	r4,34
  22e1ac:	21000804 	addi	r4,r4,32
  22e1b0:	022e1040 	call	22e104 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  22e1b4:	018008f4 	movhi	r6,35
  22e1b8:	31840604 	addi	r6,r6,4120
  22e1bc:	014008f4 	movhi	r5,35
  22e1c0:	2942d904 	addi	r5,r5,2916
  22e1c4:	010008f4 	movhi	r4,35
  22e1c8:	2102d904 	addi	r4,r4,2916
  22e1cc:	022e1040 	call	22e104 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  22e1d0:	022fda80 	call	22fda8 <alt_dcache_flush_all>
  alt_icache_flush_all();
  22e1d4:	02300ec0 	call	2300ec <alt_icache_flush_all>
}
  22e1d8:	0001883a 	nop
  22e1dc:	e037883a 	mov	sp,fp
  22e1e0:	dfc00117 	ldw	ra,4(sp)
  22e1e4:	df000017 	ldw	fp,0(sp)
  22e1e8:	dec00204 	addi	sp,sp,8
  22e1ec:	f800283a 	ret

0022e1f0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22e1f0:	defffe04 	addi	sp,sp,-8
  22e1f4:	dfc00115 	stw	ra,4(sp)
  22e1f8:	df000015 	stw	fp,0(sp)
  22e1fc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22e200:	d0a00b17 	ldw	r2,-32724(gp)
  22e204:	10000326 	beq	r2,zero,22e214 <alt_get_errno+0x24>
  22e208:	d0a00b17 	ldw	r2,-32724(gp)
  22e20c:	103ee83a 	callr	r2
  22e210:	00000106 	br	22e218 <alt_get_errno+0x28>
  22e214:	d0a72004 	addi	r2,gp,-25472
}
  22e218:	e037883a 	mov	sp,fp
  22e21c:	dfc00117 	ldw	ra,4(sp)
  22e220:	df000017 	ldw	fp,0(sp)
  22e224:	dec00204 	addi	sp,sp,8
  22e228:	f800283a 	ret

0022e22c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  22e22c:	defff904 	addi	sp,sp,-28
  22e230:	dfc00615 	stw	ra,24(sp)
  22e234:	df000515 	stw	fp,20(sp)
  22e238:	df000504 	addi	fp,sp,20
  22e23c:	e13ffd15 	stw	r4,-12(fp)
  22e240:	e17ffe15 	stw	r5,-8(fp)
  22e244:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  22e248:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  22e24c:	e0bffd17 	ldw	r2,-12(fp)
  22e250:	10000616 	blt	r2,zero,22e26c <lseek+0x40>
  22e254:	e0bffd17 	ldw	r2,-12(fp)
  22e258:	10c00324 	muli	r3,r2,12
  22e25c:	008008f4 	movhi	r2,35
  22e260:	108a8204 	addi	r2,r2,10760
  22e264:	1885883a 	add	r2,r3,r2
  22e268:	00000106 	br	22e270 <lseek+0x44>
  22e26c:	0005883a 	mov	r2,zero
  22e270:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  22e274:	e0bffc17 	ldw	r2,-16(fp)
  22e278:	10001026 	beq	r2,zero,22e2bc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  22e27c:	e0bffc17 	ldw	r2,-16(fp)
  22e280:	10800017 	ldw	r2,0(r2)
  22e284:	10800717 	ldw	r2,28(r2)
  22e288:	10000926 	beq	r2,zero,22e2b0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  22e28c:	e0bffc17 	ldw	r2,-16(fp)
  22e290:	10800017 	ldw	r2,0(r2)
  22e294:	10800717 	ldw	r2,28(r2)
  22e298:	e1bfff17 	ldw	r6,-4(fp)
  22e29c:	e17ffe17 	ldw	r5,-8(fp)
  22e2a0:	e13ffc17 	ldw	r4,-16(fp)
  22e2a4:	103ee83a 	callr	r2
  22e2a8:	e0bffb15 	stw	r2,-20(fp)
  22e2ac:	00000506 	br	22e2c4 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  22e2b0:	00bfde84 	movi	r2,-134
  22e2b4:	e0bffb15 	stw	r2,-20(fp)
  22e2b8:	00000206 	br	22e2c4 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  22e2bc:	00bfebc4 	movi	r2,-81
  22e2c0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  22e2c4:	e0bffb17 	ldw	r2,-20(fp)
  22e2c8:	1000070e 	bge	r2,zero,22e2e8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  22e2cc:	022e1f00 	call	22e1f0 <alt_get_errno>
  22e2d0:	1007883a 	mov	r3,r2
  22e2d4:	e0bffb17 	ldw	r2,-20(fp)
  22e2d8:	0085c83a 	sub	r2,zero,r2
  22e2dc:	18800015 	stw	r2,0(r3)
    rc = -1;
  22e2e0:	00bfffc4 	movi	r2,-1
  22e2e4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  22e2e8:	e0bffb17 	ldw	r2,-20(fp)
}
  22e2ec:	e037883a 	mov	sp,fp
  22e2f0:	dfc00117 	ldw	ra,4(sp)
  22e2f4:	df000017 	ldw	fp,0(sp)
  22e2f8:	dec00204 	addi	sp,sp,8
  22e2fc:	f800283a 	ret

0022e300 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  22e300:	defffd04 	addi	sp,sp,-12
  22e304:	dfc00215 	stw	ra,8(sp)
  22e308:	df000115 	stw	fp,4(sp)
  22e30c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  22e310:	0009883a 	mov	r4,zero
  22e314:	02202c40 	call	2202c4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  22e318:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  22e31c:	02202fc0 	call	2202fc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  22e320:	018008f4 	movhi	r6,35
  22e324:	3183fc04 	addi	r6,r6,4080
  22e328:	014008f4 	movhi	r5,35
  22e32c:	2943fc04 	addi	r5,r5,4080
  22e330:	010008f4 	movhi	r4,35
  22e334:	2103fc04 	addi	r4,r4,4080
  22e338:	02304840 	call	230484 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  22e33c:	022fdf00 	call	22fdf0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  22e340:	010008f4 	movhi	r4,35
  22e344:	213f9404 	addi	r4,r4,-432
  22e348:	02307d00 	call	2307d0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  22e34c:	d0a72717 	ldw	r2,-25444(gp)
  22e350:	d0e72817 	ldw	r3,-25440(gp)
  22e354:	d1272917 	ldw	r4,-25436(gp)
  22e358:	200d883a 	mov	r6,r4
  22e35c:	180b883a 	mov	r5,r3
  22e360:	1009883a 	mov	r4,r2
  22e364:	02206000 	call	220600 <main>
  22e368:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  22e36c:	01000044 	movi	r4,1
  22e370:	022dcdc0 	call	22dcdc <close>
  exit (result);
  22e374:	e13fff17 	ldw	r4,-4(fp)
  22e378:	02307e40 	call	2307e4 <exit>

0022e37c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  22e37c:	defffe04 	addi	sp,sp,-8
  22e380:	df000115 	stw	fp,4(sp)
  22e384:	df000104 	addi	fp,sp,4
  22e388:	e13fff15 	stw	r4,-4(fp)
}
  22e38c:	0001883a 	nop
  22e390:	e037883a 	mov	sp,fp
  22e394:	df000017 	ldw	fp,0(sp)
  22e398:	dec00104 	addi	sp,sp,4
  22e39c:	f800283a 	ret

0022e3a0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  22e3a0:	defffe04 	addi	sp,sp,-8
  22e3a4:	df000115 	stw	fp,4(sp)
  22e3a8:	df000104 	addi	fp,sp,4
  22e3ac:	e13fff15 	stw	r4,-4(fp)
}
  22e3b0:	0001883a 	nop
  22e3b4:	e037883a 	mov	sp,fp
  22e3b8:	df000017 	ldw	fp,0(sp)
  22e3bc:	dec00104 	addi	sp,sp,4
  22e3c0:	f800283a 	ret

0022e3c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22e3c4:	defffe04 	addi	sp,sp,-8
  22e3c8:	dfc00115 	stw	ra,4(sp)
  22e3cc:	df000015 	stw	fp,0(sp)
  22e3d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22e3d4:	d0a00b17 	ldw	r2,-32724(gp)
  22e3d8:	10000326 	beq	r2,zero,22e3e8 <alt_get_errno+0x24>
  22e3dc:	d0a00b17 	ldw	r2,-32724(gp)
  22e3e0:	103ee83a 	callr	r2
  22e3e4:	00000106 	br	22e3ec <alt_get_errno+0x28>
  22e3e8:	d0a72004 	addi	r2,gp,-25472
}
  22e3ec:	e037883a 	mov	sp,fp
  22e3f0:	dfc00117 	ldw	ra,4(sp)
  22e3f4:	df000017 	ldw	fp,0(sp)
  22e3f8:	dec00204 	addi	sp,sp,8
  22e3fc:	f800283a 	ret

0022e400 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  22e400:	defffd04 	addi	sp,sp,-12
  22e404:	df000215 	stw	fp,8(sp)
  22e408:	df000204 	addi	fp,sp,8
  22e40c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  22e410:	e0bfff17 	ldw	r2,-4(fp)
  22e414:	10800217 	ldw	r2,8(r2)
  22e418:	10d00034 	orhi	r3,r2,16384
  22e41c:	e0bfff17 	ldw	r2,-4(fp)
  22e420:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  22e424:	e03ffe15 	stw	zero,-8(fp)
  22e428:	00001d06 	br	22e4a0 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  22e42c:	008008f4 	movhi	r2,35
  22e430:	108a8204 	addi	r2,r2,10760
  22e434:	e0fffe17 	ldw	r3,-8(fp)
  22e438:	18c00324 	muli	r3,r3,12
  22e43c:	10c5883a 	add	r2,r2,r3
  22e440:	10c00017 	ldw	r3,0(r2)
  22e444:	e0bfff17 	ldw	r2,-4(fp)
  22e448:	10800017 	ldw	r2,0(r2)
  22e44c:	1880111e 	bne	r3,r2,22e494 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  22e450:	008008f4 	movhi	r2,35
  22e454:	108a8204 	addi	r2,r2,10760
  22e458:	e0fffe17 	ldw	r3,-8(fp)
  22e45c:	18c00324 	muli	r3,r3,12
  22e460:	10c5883a 	add	r2,r2,r3
  22e464:	10800204 	addi	r2,r2,8
  22e468:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  22e46c:	1000090e 	bge	r2,zero,22e494 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  22e470:	e0bffe17 	ldw	r2,-8(fp)
  22e474:	10c00324 	muli	r3,r2,12
  22e478:	008008f4 	movhi	r2,35
  22e47c:	108a8204 	addi	r2,r2,10760
  22e480:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  22e484:	e0bfff17 	ldw	r2,-4(fp)
  22e488:	18800226 	beq	r3,r2,22e494 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  22e48c:	00bffcc4 	movi	r2,-13
  22e490:	00000806 	br	22e4b4 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  22e494:	e0bffe17 	ldw	r2,-8(fp)
  22e498:	10800044 	addi	r2,r2,1
  22e49c:	e0bffe15 	stw	r2,-8(fp)
  22e4a0:	d0a00a17 	ldw	r2,-32728(gp)
  22e4a4:	1007883a 	mov	r3,r2
  22e4a8:	e0bffe17 	ldw	r2,-8(fp)
  22e4ac:	18bfdf2e 	bgeu	r3,r2,22e42c <_gp+0xffff38a4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  22e4b0:	0005883a 	mov	r2,zero
}
  22e4b4:	e037883a 	mov	sp,fp
  22e4b8:	df000017 	ldw	fp,0(sp)
  22e4bc:	dec00104 	addi	sp,sp,4
  22e4c0:	f800283a 	ret

0022e4c4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  22e4c4:	defff604 	addi	sp,sp,-40
  22e4c8:	dfc00915 	stw	ra,36(sp)
  22e4cc:	df000815 	stw	fp,32(sp)
  22e4d0:	df000804 	addi	fp,sp,32
  22e4d4:	e13ffd15 	stw	r4,-12(fp)
  22e4d8:	e17ffe15 	stw	r5,-8(fp)
  22e4dc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  22e4e0:	00bfffc4 	movi	r2,-1
  22e4e4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  22e4e8:	00bffb44 	movi	r2,-19
  22e4ec:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  22e4f0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  22e4f4:	d1600804 	addi	r5,gp,-32736
  22e4f8:	e13ffd17 	ldw	r4,-12(fp)
  22e4fc:	022feb00 	call	22feb0 <alt_find_dev>
  22e500:	e0bff815 	stw	r2,-32(fp)
  22e504:	e0bff817 	ldw	r2,-32(fp)
  22e508:	1000051e 	bne	r2,zero,22e520 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  22e50c:	e13ffd17 	ldw	r4,-12(fp)
  22e510:	022ff400 	call	22ff40 <alt_find_file>
  22e514:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  22e518:	00800044 	movi	r2,1
  22e51c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  22e520:	e0bff817 	ldw	r2,-32(fp)
  22e524:	10002926 	beq	r2,zero,22e5cc <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  22e528:	e13ff817 	ldw	r4,-32(fp)
  22e52c:	02300480 	call	230048 <alt_get_fd>
  22e530:	e0bff915 	stw	r2,-28(fp)
  22e534:	e0bff917 	ldw	r2,-28(fp)
  22e538:	1000030e 	bge	r2,zero,22e548 <open+0x84>
    {
      status = index;
  22e53c:	e0bff917 	ldw	r2,-28(fp)
  22e540:	e0bffa15 	stw	r2,-24(fp)
  22e544:	00002306 	br	22e5d4 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  22e548:	e0bff917 	ldw	r2,-28(fp)
  22e54c:	10c00324 	muli	r3,r2,12
  22e550:	008008f4 	movhi	r2,35
  22e554:	108a8204 	addi	r2,r2,10760
  22e558:	1885883a 	add	r2,r3,r2
  22e55c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  22e560:	e0fffe17 	ldw	r3,-8(fp)
  22e564:	00900034 	movhi	r2,16384
  22e568:	10bfffc4 	addi	r2,r2,-1
  22e56c:	1886703a 	and	r3,r3,r2
  22e570:	e0bffc17 	ldw	r2,-16(fp)
  22e574:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  22e578:	e0bffb17 	ldw	r2,-20(fp)
  22e57c:	1000051e 	bne	r2,zero,22e594 <open+0xd0>
  22e580:	e13ffc17 	ldw	r4,-16(fp)
  22e584:	022e4000 	call	22e400 <alt_file_locked>
  22e588:	e0bffa15 	stw	r2,-24(fp)
  22e58c:	e0bffa17 	ldw	r2,-24(fp)
  22e590:	10001016 	blt	r2,zero,22e5d4 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  22e594:	e0bff817 	ldw	r2,-32(fp)
  22e598:	10800317 	ldw	r2,12(r2)
  22e59c:	10000826 	beq	r2,zero,22e5c0 <open+0xfc>
  22e5a0:	e0bff817 	ldw	r2,-32(fp)
  22e5a4:	10800317 	ldw	r2,12(r2)
  22e5a8:	e1ffff17 	ldw	r7,-4(fp)
  22e5ac:	e1bffe17 	ldw	r6,-8(fp)
  22e5b0:	e17ffd17 	ldw	r5,-12(fp)
  22e5b4:	e13ffc17 	ldw	r4,-16(fp)
  22e5b8:	103ee83a 	callr	r2
  22e5bc:	00000106 	br	22e5c4 <open+0x100>
  22e5c0:	0005883a 	mov	r2,zero
  22e5c4:	e0bffa15 	stw	r2,-24(fp)
  22e5c8:	00000206 	br	22e5d4 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  22e5cc:	00bffb44 	movi	r2,-19
  22e5d0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  22e5d4:	e0bffa17 	ldw	r2,-24(fp)
  22e5d8:	1000090e 	bge	r2,zero,22e600 <open+0x13c>
  {
    alt_release_fd (index);  
  22e5dc:	e13ff917 	ldw	r4,-28(fp)
  22e5e0:	022e7500 	call	22e750 <alt_release_fd>
    ALT_ERRNO = -status;
  22e5e4:	022e3c40 	call	22e3c4 <alt_get_errno>
  22e5e8:	1007883a 	mov	r3,r2
  22e5ec:	e0bffa17 	ldw	r2,-24(fp)
  22e5f0:	0085c83a 	sub	r2,zero,r2
  22e5f4:	18800015 	stw	r2,0(r3)
    return -1;
  22e5f8:	00bfffc4 	movi	r2,-1
  22e5fc:	00000106 	br	22e604 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  22e600:	e0bff917 	ldw	r2,-28(fp)
}
  22e604:	e037883a 	mov	sp,fp
  22e608:	dfc00117 	ldw	ra,4(sp)
  22e60c:	df000017 	ldw	fp,0(sp)
  22e610:	dec00204 	addi	sp,sp,8
  22e614:	f800283a 	ret

0022e618 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22e618:	defffe04 	addi	sp,sp,-8
  22e61c:	dfc00115 	stw	ra,4(sp)
  22e620:	df000015 	stw	fp,0(sp)
  22e624:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22e628:	d0a00b17 	ldw	r2,-32724(gp)
  22e62c:	10000326 	beq	r2,zero,22e63c <alt_get_errno+0x24>
  22e630:	d0a00b17 	ldw	r2,-32724(gp)
  22e634:	103ee83a 	callr	r2
  22e638:	00000106 	br	22e640 <alt_get_errno+0x28>
  22e63c:	d0a72004 	addi	r2,gp,-25472
}
  22e640:	e037883a 	mov	sp,fp
  22e644:	dfc00117 	ldw	ra,4(sp)
  22e648:	df000017 	ldw	fp,0(sp)
  22e64c:	dec00204 	addi	sp,sp,8
  22e650:	f800283a 	ret

0022e654 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  22e654:	defff904 	addi	sp,sp,-28
  22e658:	dfc00615 	stw	ra,24(sp)
  22e65c:	df000515 	stw	fp,20(sp)
  22e660:	df000504 	addi	fp,sp,20
  22e664:	e13ffd15 	stw	r4,-12(fp)
  22e668:	e17ffe15 	stw	r5,-8(fp)
  22e66c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  22e670:	e0bffd17 	ldw	r2,-12(fp)
  22e674:	10000616 	blt	r2,zero,22e690 <read+0x3c>
  22e678:	e0bffd17 	ldw	r2,-12(fp)
  22e67c:	10c00324 	muli	r3,r2,12
  22e680:	008008f4 	movhi	r2,35
  22e684:	108a8204 	addi	r2,r2,10760
  22e688:	1885883a 	add	r2,r3,r2
  22e68c:	00000106 	br	22e694 <read+0x40>
  22e690:	0005883a 	mov	r2,zero
  22e694:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  22e698:	e0bffb17 	ldw	r2,-20(fp)
  22e69c:	10002226 	beq	r2,zero,22e728 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  22e6a0:	e0bffb17 	ldw	r2,-20(fp)
  22e6a4:	10800217 	ldw	r2,8(r2)
  22e6a8:	108000cc 	andi	r2,r2,3
  22e6ac:	10800060 	cmpeqi	r2,r2,1
  22e6b0:	1000181e 	bne	r2,zero,22e714 <read+0xc0>
        (fd->dev->read))
  22e6b4:	e0bffb17 	ldw	r2,-20(fp)
  22e6b8:	10800017 	ldw	r2,0(r2)
  22e6bc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  22e6c0:	10001426 	beq	r2,zero,22e714 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  22e6c4:	e0bffb17 	ldw	r2,-20(fp)
  22e6c8:	10800017 	ldw	r2,0(r2)
  22e6cc:	10800517 	ldw	r2,20(r2)
  22e6d0:	e0ffff17 	ldw	r3,-4(fp)
  22e6d4:	180d883a 	mov	r6,r3
  22e6d8:	e17ffe17 	ldw	r5,-8(fp)
  22e6dc:	e13ffb17 	ldw	r4,-20(fp)
  22e6e0:	103ee83a 	callr	r2
  22e6e4:	e0bffc15 	stw	r2,-16(fp)
  22e6e8:	e0bffc17 	ldw	r2,-16(fp)
  22e6ec:	1000070e 	bge	r2,zero,22e70c <read+0xb8>
        {
          ALT_ERRNO = -rval;
  22e6f0:	022e6180 	call	22e618 <alt_get_errno>
  22e6f4:	1007883a 	mov	r3,r2
  22e6f8:	e0bffc17 	ldw	r2,-16(fp)
  22e6fc:	0085c83a 	sub	r2,zero,r2
  22e700:	18800015 	stw	r2,0(r3)
          return -1;
  22e704:	00bfffc4 	movi	r2,-1
  22e708:	00000c06 	br	22e73c <read+0xe8>
        }
        return rval;
  22e70c:	e0bffc17 	ldw	r2,-16(fp)
  22e710:	00000a06 	br	22e73c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  22e714:	022e6180 	call	22e618 <alt_get_errno>
  22e718:	1007883a 	mov	r3,r2
  22e71c:	00800344 	movi	r2,13
  22e720:	18800015 	stw	r2,0(r3)
  22e724:	00000406 	br	22e738 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  22e728:	022e6180 	call	22e618 <alt_get_errno>
  22e72c:	1007883a 	mov	r3,r2
  22e730:	00801444 	movi	r2,81
  22e734:	18800015 	stw	r2,0(r3)
  }
  return -1;
  22e738:	00bfffc4 	movi	r2,-1
}
  22e73c:	e037883a 	mov	sp,fp
  22e740:	dfc00117 	ldw	ra,4(sp)
  22e744:	df000017 	ldw	fp,0(sp)
  22e748:	dec00204 	addi	sp,sp,8
  22e74c:	f800283a 	ret

0022e750 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  22e750:	defffe04 	addi	sp,sp,-8
  22e754:	df000115 	stw	fp,4(sp)
  22e758:	df000104 	addi	fp,sp,4
  22e75c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  22e760:	e0bfff17 	ldw	r2,-4(fp)
  22e764:	108000d0 	cmplti	r2,r2,3
  22e768:	10000d1e 	bne	r2,zero,22e7a0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  22e76c:	008008f4 	movhi	r2,35
  22e770:	108a8204 	addi	r2,r2,10760
  22e774:	e0ffff17 	ldw	r3,-4(fp)
  22e778:	18c00324 	muli	r3,r3,12
  22e77c:	10c5883a 	add	r2,r2,r3
  22e780:	10800204 	addi	r2,r2,8
  22e784:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  22e788:	008008f4 	movhi	r2,35
  22e78c:	108a8204 	addi	r2,r2,10760
  22e790:	e0ffff17 	ldw	r3,-4(fp)
  22e794:	18c00324 	muli	r3,r3,12
  22e798:	10c5883a 	add	r2,r2,r3
  22e79c:	10000015 	stw	zero,0(r2)
  }
}
  22e7a0:	0001883a 	nop
  22e7a4:	e037883a 	mov	sp,fp
  22e7a8:	df000017 	ldw	fp,0(sp)
  22e7ac:	dec00104 	addi	sp,sp,4
  22e7b0:	f800283a 	ret

0022e7b4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  22e7b4:	defff904 	addi	sp,sp,-28
  22e7b8:	df000615 	stw	fp,24(sp)
  22e7bc:	df000604 	addi	fp,sp,24
  22e7c0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  22e7c4:	0005303a 	rdctl	r2,status
  22e7c8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  22e7cc:	e0fffe17 	ldw	r3,-8(fp)
  22e7d0:	00bfff84 	movi	r2,-2
  22e7d4:	1884703a 	and	r2,r3,r2
  22e7d8:	1001703a 	wrctl	status,r2
  
  return context;
  22e7dc:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  22e7e0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  22e7e4:	d0a00c17 	ldw	r2,-32720(gp)
  22e7e8:	10c000c4 	addi	r3,r2,3
  22e7ec:	00bfff04 	movi	r2,-4
  22e7f0:	1884703a 	and	r2,r3,r2
  22e7f4:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  22e7f8:	d0e00c17 	ldw	r3,-32720(gp)
  22e7fc:	e0bfff17 	ldw	r2,-4(fp)
  22e800:	1887883a 	add	r3,r3,r2
  22e804:	00800934 	movhi	r2,36
  22e808:	10a1a804 	addi	r2,r2,-31072
  22e80c:	10c0062e 	bgeu	r2,r3,22e828 <sbrk+0x74>
  22e810:	e0bffb17 	ldw	r2,-20(fp)
  22e814:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  22e818:	e0bffa17 	ldw	r2,-24(fp)
  22e81c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  22e820:	00bfffc4 	movi	r2,-1
  22e824:	00000b06 	br	22e854 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  22e828:	d0a00c17 	ldw	r2,-32720(gp)
  22e82c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  22e830:	d0e00c17 	ldw	r3,-32720(gp)
  22e834:	e0bfff17 	ldw	r2,-4(fp)
  22e838:	1885883a 	add	r2,r3,r2
  22e83c:	d0a00c15 	stw	r2,-32720(gp)
  22e840:	e0bffb17 	ldw	r2,-20(fp)
  22e844:	e0bffc15 	stw	r2,-16(fp)
  22e848:	e0bffc17 	ldw	r2,-16(fp)
  22e84c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  22e850:	e0bffd17 	ldw	r2,-12(fp)
} 
  22e854:	e037883a 	mov	sp,fp
  22e858:	df000017 	ldw	fp,0(sp)
  22e85c:	dec00104 	addi	sp,sp,4
  22e860:	f800283a 	ret

0022e864 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  22e864:	defffe04 	addi	sp,sp,-8
  22e868:	dfc00115 	stw	ra,4(sp)
  22e86c:	df000015 	stw	fp,0(sp)
  22e870:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  22e874:	d0a00b17 	ldw	r2,-32724(gp)
  22e878:	10000326 	beq	r2,zero,22e888 <alt_get_errno+0x24>
  22e87c:	d0a00b17 	ldw	r2,-32724(gp)
  22e880:	103ee83a 	callr	r2
  22e884:	00000106 	br	22e88c <alt_get_errno+0x28>
  22e888:	d0a72004 	addi	r2,gp,-25472
}
  22e88c:	e037883a 	mov	sp,fp
  22e890:	dfc00117 	ldw	ra,4(sp)
  22e894:	df000017 	ldw	fp,0(sp)
  22e898:	dec00204 	addi	sp,sp,8
  22e89c:	f800283a 	ret

0022e8a0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  22e8a0:	defff904 	addi	sp,sp,-28
  22e8a4:	dfc00615 	stw	ra,24(sp)
  22e8a8:	df000515 	stw	fp,20(sp)
  22e8ac:	df000504 	addi	fp,sp,20
  22e8b0:	e13ffd15 	stw	r4,-12(fp)
  22e8b4:	e17ffe15 	stw	r5,-8(fp)
  22e8b8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  22e8bc:	e0bffd17 	ldw	r2,-12(fp)
  22e8c0:	10000616 	blt	r2,zero,22e8dc <write+0x3c>
  22e8c4:	e0bffd17 	ldw	r2,-12(fp)
  22e8c8:	10c00324 	muli	r3,r2,12
  22e8cc:	008008f4 	movhi	r2,35
  22e8d0:	108a8204 	addi	r2,r2,10760
  22e8d4:	1885883a 	add	r2,r3,r2
  22e8d8:	00000106 	br	22e8e0 <write+0x40>
  22e8dc:	0005883a 	mov	r2,zero
  22e8e0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  22e8e4:	e0bffb17 	ldw	r2,-20(fp)
  22e8e8:	10002126 	beq	r2,zero,22e970 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  22e8ec:	e0bffb17 	ldw	r2,-20(fp)
  22e8f0:	10800217 	ldw	r2,8(r2)
  22e8f4:	108000cc 	andi	r2,r2,3
  22e8f8:	10001826 	beq	r2,zero,22e95c <write+0xbc>
  22e8fc:	e0bffb17 	ldw	r2,-20(fp)
  22e900:	10800017 	ldw	r2,0(r2)
  22e904:	10800617 	ldw	r2,24(r2)
  22e908:	10001426 	beq	r2,zero,22e95c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  22e90c:	e0bffb17 	ldw	r2,-20(fp)
  22e910:	10800017 	ldw	r2,0(r2)
  22e914:	10800617 	ldw	r2,24(r2)
  22e918:	e0ffff17 	ldw	r3,-4(fp)
  22e91c:	180d883a 	mov	r6,r3
  22e920:	e17ffe17 	ldw	r5,-8(fp)
  22e924:	e13ffb17 	ldw	r4,-20(fp)
  22e928:	103ee83a 	callr	r2
  22e92c:	e0bffc15 	stw	r2,-16(fp)
  22e930:	e0bffc17 	ldw	r2,-16(fp)
  22e934:	1000070e 	bge	r2,zero,22e954 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  22e938:	022e8640 	call	22e864 <alt_get_errno>
  22e93c:	1007883a 	mov	r3,r2
  22e940:	e0bffc17 	ldw	r2,-16(fp)
  22e944:	0085c83a 	sub	r2,zero,r2
  22e948:	18800015 	stw	r2,0(r3)
        return -1;
  22e94c:	00bfffc4 	movi	r2,-1
  22e950:	00000c06 	br	22e984 <write+0xe4>
      }
      return rval;
  22e954:	e0bffc17 	ldw	r2,-16(fp)
  22e958:	00000a06 	br	22e984 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  22e95c:	022e8640 	call	22e864 <alt_get_errno>
  22e960:	1007883a 	mov	r3,r2
  22e964:	00800344 	movi	r2,13
  22e968:	18800015 	stw	r2,0(r3)
  22e96c:	00000406 	br	22e980 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  22e970:	022e8640 	call	22e864 <alt_get_errno>
  22e974:	1007883a 	mov	r3,r2
  22e978:	00801444 	movi	r2,81
  22e97c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  22e980:	00bfffc4 	movi	r2,-1
}
  22e984:	e037883a 	mov	sp,fp
  22e988:	dfc00117 	ldw	ra,4(sp)
  22e98c:	df000017 	ldw	fp,0(sp)
  22e990:	dec00204 	addi	sp,sp,8
  22e994:	f800283a 	ret

0022e998 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  22e998:	deffff04 	addi	sp,sp,-4
  22e99c:	df000015 	stw	fp,0(sp)
  22e9a0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  22e9a4:	000170fa 	wrctl	ienable,zero
}
  22e9a8:	0001883a 	nop
  22e9ac:	e037883a 	mov	sp,fp
  22e9b0:	df000017 	ldw	fp,0(sp)
  22e9b4:	dec00104 	addi	sp,sp,4
  22e9b8:	f800283a 	ret

0022e9bc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  22e9bc:	defffa04 	addi	sp,sp,-24
  22e9c0:	dfc00515 	stw	ra,20(sp)
  22e9c4:	df000415 	stw	fp,16(sp)
  22e9c8:	df000404 	addi	fp,sp,16
  22e9cc:	e13ffd15 	stw	r4,-12(fp)
  22e9d0:	e17ffe15 	stw	r5,-8(fp)
  22e9d4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  22e9d8:	e0bffd17 	ldw	r2,-12(fp)
  22e9dc:	10800017 	ldw	r2,0(r2)
  22e9e0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  22e9e4:	e0bffc17 	ldw	r2,-16(fp)
  22e9e8:	10c00a04 	addi	r3,r2,40
  22e9ec:	e0bffd17 	ldw	r2,-12(fp)
  22e9f0:	10800217 	ldw	r2,8(r2)
  22e9f4:	100f883a 	mov	r7,r2
  22e9f8:	e1bfff17 	ldw	r6,-4(fp)
  22e9fc:	e17ffe17 	ldw	r5,-8(fp)
  22ea00:	1809883a 	mov	r4,r3
  22ea04:	022efe40 	call	22efe4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  22ea08:	e037883a 	mov	sp,fp
  22ea0c:	dfc00117 	ldw	ra,4(sp)
  22ea10:	df000017 	ldw	fp,0(sp)
  22ea14:	dec00204 	addi	sp,sp,8
  22ea18:	f800283a 	ret

0022ea1c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  22ea1c:	defffa04 	addi	sp,sp,-24
  22ea20:	dfc00515 	stw	ra,20(sp)
  22ea24:	df000415 	stw	fp,16(sp)
  22ea28:	df000404 	addi	fp,sp,16
  22ea2c:	e13ffd15 	stw	r4,-12(fp)
  22ea30:	e17ffe15 	stw	r5,-8(fp)
  22ea34:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  22ea38:	e0bffd17 	ldw	r2,-12(fp)
  22ea3c:	10800017 	ldw	r2,0(r2)
  22ea40:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  22ea44:	e0bffc17 	ldw	r2,-16(fp)
  22ea48:	10c00a04 	addi	r3,r2,40
  22ea4c:	e0bffd17 	ldw	r2,-12(fp)
  22ea50:	10800217 	ldw	r2,8(r2)
  22ea54:	100f883a 	mov	r7,r2
  22ea58:	e1bfff17 	ldw	r6,-4(fp)
  22ea5c:	e17ffe17 	ldw	r5,-8(fp)
  22ea60:	1809883a 	mov	r4,r3
  22ea64:	022f2000 	call	22f200 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  22ea68:	e037883a 	mov	sp,fp
  22ea6c:	dfc00117 	ldw	ra,4(sp)
  22ea70:	df000017 	ldw	fp,0(sp)
  22ea74:	dec00204 	addi	sp,sp,8
  22ea78:	f800283a 	ret

0022ea7c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  22ea7c:	defffc04 	addi	sp,sp,-16
  22ea80:	dfc00315 	stw	ra,12(sp)
  22ea84:	df000215 	stw	fp,8(sp)
  22ea88:	df000204 	addi	fp,sp,8
  22ea8c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  22ea90:	e0bfff17 	ldw	r2,-4(fp)
  22ea94:	10800017 	ldw	r2,0(r2)
  22ea98:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  22ea9c:	e0bffe17 	ldw	r2,-8(fp)
  22eaa0:	10c00a04 	addi	r3,r2,40
  22eaa4:	e0bfff17 	ldw	r2,-4(fp)
  22eaa8:	10800217 	ldw	r2,8(r2)
  22eaac:	100b883a 	mov	r5,r2
  22eab0:	1809883a 	mov	r4,r3
  22eab4:	022ee8c0 	call	22ee8c <altera_avalon_jtag_uart_close>
}
  22eab8:	e037883a 	mov	sp,fp
  22eabc:	dfc00117 	ldw	ra,4(sp)
  22eac0:	df000017 	ldw	fp,0(sp)
  22eac4:	dec00204 	addi	sp,sp,8
  22eac8:	f800283a 	ret

0022eacc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  22eacc:	defffa04 	addi	sp,sp,-24
  22ead0:	dfc00515 	stw	ra,20(sp)
  22ead4:	df000415 	stw	fp,16(sp)
  22ead8:	df000404 	addi	fp,sp,16
  22eadc:	e13ffd15 	stw	r4,-12(fp)
  22eae0:	e17ffe15 	stw	r5,-8(fp)
  22eae4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  22eae8:	e0bffd17 	ldw	r2,-12(fp)
  22eaec:	10800017 	ldw	r2,0(r2)
  22eaf0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  22eaf4:	e0bffc17 	ldw	r2,-16(fp)
  22eaf8:	10800a04 	addi	r2,r2,40
  22eafc:	e1bfff17 	ldw	r6,-4(fp)
  22eb00:	e17ffe17 	ldw	r5,-8(fp)
  22eb04:	1009883a 	mov	r4,r2
  22eb08:	022eef40 	call	22eef4 <altera_avalon_jtag_uart_ioctl>
}
  22eb0c:	e037883a 	mov	sp,fp
  22eb10:	dfc00117 	ldw	ra,4(sp)
  22eb14:	df000017 	ldw	fp,0(sp)
  22eb18:	dec00204 	addi	sp,sp,8
  22eb1c:	f800283a 	ret

0022eb20 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  22eb20:	defffa04 	addi	sp,sp,-24
  22eb24:	dfc00515 	stw	ra,20(sp)
  22eb28:	df000415 	stw	fp,16(sp)
  22eb2c:	df000404 	addi	fp,sp,16
  22eb30:	e13ffd15 	stw	r4,-12(fp)
  22eb34:	e17ffe15 	stw	r5,-8(fp)
  22eb38:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  22eb3c:	e0bffd17 	ldw	r2,-12(fp)
  22eb40:	00c00044 	movi	r3,1
  22eb44:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  22eb48:	e0bffd17 	ldw	r2,-12(fp)
  22eb4c:	10800017 	ldw	r2,0(r2)
  22eb50:	10800104 	addi	r2,r2,4
  22eb54:	1007883a 	mov	r3,r2
  22eb58:	e0bffd17 	ldw	r2,-12(fp)
  22eb5c:	10800817 	ldw	r2,32(r2)
  22eb60:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  22eb64:	e0bffe17 	ldw	r2,-8(fp)
  22eb68:	e0ffff17 	ldw	r3,-4(fp)
  22eb6c:	d8000015 	stw	zero,0(sp)
  22eb70:	e1fffd17 	ldw	r7,-12(fp)
  22eb74:	018008f4 	movhi	r6,35
  22eb78:	31baf804 	addi	r6,r6,-5152
  22eb7c:	180b883a 	mov	r5,r3
  22eb80:	1009883a 	mov	r4,r2
  22eb84:	02301200 	call	230120 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  22eb88:	e0bffd17 	ldw	r2,-12(fp)
  22eb8c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  22eb90:	e0bffd17 	ldw	r2,-12(fp)
  22eb94:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  22eb98:	d0e72b17 	ldw	r3,-25428(gp)
  22eb9c:	e1fffd17 	ldw	r7,-12(fp)
  22eba0:	018008f4 	movhi	r6,35
  22eba4:	31bb7b04 	addi	r6,r6,-4628
  22eba8:	180b883a 	mov	r5,r3
  22ebac:	1009883a 	mov	r4,r2
  22ebb0:	022fc7c0 	call	22fc7c <alt_alarm_start>
  22ebb4:	1000040e 	bge	r2,zero,22ebc8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  22ebb8:	e0fffd17 	ldw	r3,-12(fp)
  22ebbc:	00a00034 	movhi	r2,32768
  22ebc0:	10bfffc4 	addi	r2,r2,-1
  22ebc4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  22ebc8:	0001883a 	nop
  22ebcc:	e037883a 	mov	sp,fp
  22ebd0:	dfc00117 	ldw	ra,4(sp)
  22ebd4:	df000017 	ldw	fp,0(sp)
  22ebd8:	dec00204 	addi	sp,sp,8
  22ebdc:	f800283a 	ret

0022ebe0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  22ebe0:	defff804 	addi	sp,sp,-32
  22ebe4:	df000715 	stw	fp,28(sp)
  22ebe8:	df000704 	addi	fp,sp,28
  22ebec:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  22ebf0:	e0bfff17 	ldw	r2,-4(fp)
  22ebf4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  22ebf8:	e0bffb17 	ldw	r2,-20(fp)
  22ebfc:	10800017 	ldw	r2,0(r2)
  22ec00:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  22ec04:	e0bffc17 	ldw	r2,-16(fp)
  22ec08:	10800104 	addi	r2,r2,4
  22ec0c:	10800037 	ldwio	r2,0(r2)
  22ec10:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  22ec14:	e0bffd17 	ldw	r2,-12(fp)
  22ec18:	1080c00c 	andi	r2,r2,768
  22ec1c:	10006d26 	beq	r2,zero,22edd4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  22ec20:	e0bffd17 	ldw	r2,-12(fp)
  22ec24:	1080400c 	andi	r2,r2,256
  22ec28:	10003526 	beq	r2,zero,22ed00 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  22ec2c:	00800074 	movhi	r2,1
  22ec30:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  22ec34:	e0bffb17 	ldw	r2,-20(fp)
  22ec38:	10800a17 	ldw	r2,40(r2)
  22ec3c:	10800044 	addi	r2,r2,1
  22ec40:	1081ffcc 	andi	r2,r2,2047
  22ec44:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  22ec48:	e0bffb17 	ldw	r2,-20(fp)
  22ec4c:	10c00b17 	ldw	r3,44(r2)
  22ec50:	e0bffe17 	ldw	r2,-8(fp)
  22ec54:	18801526 	beq	r3,r2,22ecac <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  22ec58:	e0bffc17 	ldw	r2,-16(fp)
  22ec5c:	10800037 	ldwio	r2,0(r2)
  22ec60:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  22ec64:	e0bff917 	ldw	r2,-28(fp)
  22ec68:	10a0000c 	andi	r2,r2,32768
  22ec6c:	10001126 	beq	r2,zero,22ecb4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  22ec70:	e0bffb17 	ldw	r2,-20(fp)
  22ec74:	10800a17 	ldw	r2,40(r2)
  22ec78:	e0fff917 	ldw	r3,-28(fp)
  22ec7c:	1809883a 	mov	r4,r3
  22ec80:	e0fffb17 	ldw	r3,-20(fp)
  22ec84:	1885883a 	add	r2,r3,r2
  22ec88:	10800e04 	addi	r2,r2,56
  22ec8c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  22ec90:	e0bffb17 	ldw	r2,-20(fp)
  22ec94:	10800a17 	ldw	r2,40(r2)
  22ec98:	10800044 	addi	r2,r2,1
  22ec9c:	10c1ffcc 	andi	r3,r2,2047
  22eca0:	e0bffb17 	ldw	r2,-20(fp)
  22eca4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  22eca8:	003fe206 	br	22ec34 <_gp+0xffff40ac>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  22ecac:	0001883a 	nop
  22ecb0:	00000106 	br	22ecb8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  22ecb4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  22ecb8:	e0bff917 	ldw	r2,-28(fp)
  22ecbc:	10bfffec 	andhi	r2,r2,65535
  22ecc0:	10000f26 	beq	r2,zero,22ed00 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  22ecc4:	e0bffb17 	ldw	r2,-20(fp)
  22ecc8:	10c00817 	ldw	r3,32(r2)
  22eccc:	00bfff84 	movi	r2,-2
  22ecd0:	1886703a 	and	r3,r3,r2
  22ecd4:	e0bffb17 	ldw	r2,-20(fp)
  22ecd8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  22ecdc:	e0bffc17 	ldw	r2,-16(fp)
  22ece0:	10800104 	addi	r2,r2,4
  22ece4:	1007883a 	mov	r3,r2
  22ece8:	e0bffb17 	ldw	r2,-20(fp)
  22ecec:	10800817 	ldw	r2,32(r2)
  22ecf0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  22ecf4:	e0bffc17 	ldw	r2,-16(fp)
  22ecf8:	10800104 	addi	r2,r2,4
  22ecfc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  22ed00:	e0bffd17 	ldw	r2,-12(fp)
  22ed04:	1080800c 	andi	r2,r2,512
  22ed08:	103fbe26 	beq	r2,zero,22ec04 <_gp+0xffff407c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  22ed0c:	e0bffd17 	ldw	r2,-12(fp)
  22ed10:	1004d43a 	srli	r2,r2,16
  22ed14:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  22ed18:	00001406 	br	22ed6c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  22ed1c:	e0bffc17 	ldw	r2,-16(fp)
  22ed20:	e0fffb17 	ldw	r3,-20(fp)
  22ed24:	18c00d17 	ldw	r3,52(r3)
  22ed28:	e13ffb17 	ldw	r4,-20(fp)
  22ed2c:	20c7883a 	add	r3,r4,r3
  22ed30:	18c20e04 	addi	r3,r3,2104
  22ed34:	18c00003 	ldbu	r3,0(r3)
  22ed38:	18c03fcc 	andi	r3,r3,255
  22ed3c:	18c0201c 	xori	r3,r3,128
  22ed40:	18ffe004 	addi	r3,r3,-128
  22ed44:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  22ed48:	e0bffb17 	ldw	r2,-20(fp)
  22ed4c:	10800d17 	ldw	r2,52(r2)
  22ed50:	10800044 	addi	r2,r2,1
  22ed54:	10c1ffcc 	andi	r3,r2,2047
  22ed58:	e0bffb17 	ldw	r2,-20(fp)
  22ed5c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  22ed60:	e0bffa17 	ldw	r2,-24(fp)
  22ed64:	10bfffc4 	addi	r2,r2,-1
  22ed68:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  22ed6c:	e0bffa17 	ldw	r2,-24(fp)
  22ed70:	10000526 	beq	r2,zero,22ed88 <altera_avalon_jtag_uart_irq+0x1a8>
  22ed74:	e0bffb17 	ldw	r2,-20(fp)
  22ed78:	10c00d17 	ldw	r3,52(r2)
  22ed7c:	e0bffb17 	ldw	r2,-20(fp)
  22ed80:	10800c17 	ldw	r2,48(r2)
  22ed84:	18bfe51e 	bne	r3,r2,22ed1c <_gp+0xffff4194>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  22ed88:	e0bffa17 	ldw	r2,-24(fp)
  22ed8c:	103f9d26 	beq	r2,zero,22ec04 <_gp+0xffff407c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  22ed90:	e0bffb17 	ldw	r2,-20(fp)
  22ed94:	10c00817 	ldw	r3,32(r2)
  22ed98:	00bfff44 	movi	r2,-3
  22ed9c:	1886703a 	and	r3,r3,r2
  22eda0:	e0bffb17 	ldw	r2,-20(fp)
  22eda4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  22eda8:	e0bffb17 	ldw	r2,-20(fp)
  22edac:	10800017 	ldw	r2,0(r2)
  22edb0:	10800104 	addi	r2,r2,4
  22edb4:	1007883a 	mov	r3,r2
  22edb8:	e0bffb17 	ldw	r2,-20(fp)
  22edbc:	10800817 	ldw	r2,32(r2)
  22edc0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  22edc4:	e0bffc17 	ldw	r2,-16(fp)
  22edc8:	10800104 	addi	r2,r2,4
  22edcc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  22edd0:	003f8c06 	br	22ec04 <_gp+0xffff407c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  22edd4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  22edd8:	0001883a 	nop
  22eddc:	e037883a 	mov	sp,fp
  22ede0:	df000017 	ldw	fp,0(sp)
  22ede4:	dec00104 	addi	sp,sp,4
  22ede8:	f800283a 	ret

0022edec <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  22edec:	defff804 	addi	sp,sp,-32
  22edf0:	df000715 	stw	fp,28(sp)
  22edf4:	df000704 	addi	fp,sp,28
  22edf8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  22edfc:	e0bffb17 	ldw	r2,-20(fp)
  22ee00:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  22ee04:	e0bff917 	ldw	r2,-28(fp)
  22ee08:	10800017 	ldw	r2,0(r2)
  22ee0c:	10800104 	addi	r2,r2,4
  22ee10:	10800037 	ldwio	r2,0(r2)
  22ee14:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  22ee18:	e0bffa17 	ldw	r2,-24(fp)
  22ee1c:	1081000c 	andi	r2,r2,1024
  22ee20:	10000b26 	beq	r2,zero,22ee50 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  22ee24:	e0bff917 	ldw	r2,-28(fp)
  22ee28:	10800017 	ldw	r2,0(r2)
  22ee2c:	10800104 	addi	r2,r2,4
  22ee30:	1007883a 	mov	r3,r2
  22ee34:	e0bff917 	ldw	r2,-28(fp)
  22ee38:	10800817 	ldw	r2,32(r2)
  22ee3c:	10810014 	ori	r2,r2,1024
  22ee40:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  22ee44:	e0bff917 	ldw	r2,-28(fp)
  22ee48:	10000915 	stw	zero,36(r2)
  22ee4c:	00000a06 	br	22ee78 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  22ee50:	e0bff917 	ldw	r2,-28(fp)
  22ee54:	10c00917 	ldw	r3,36(r2)
  22ee58:	00a00034 	movhi	r2,32768
  22ee5c:	10bfff04 	addi	r2,r2,-4
  22ee60:	10c00536 	bltu	r2,r3,22ee78 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  22ee64:	e0bff917 	ldw	r2,-28(fp)
  22ee68:	10800917 	ldw	r2,36(r2)
  22ee6c:	10c00044 	addi	r3,r2,1
  22ee70:	e0bff917 	ldw	r2,-28(fp)
  22ee74:	10c00915 	stw	r3,36(r2)
  22ee78:	d0a72b17 	ldw	r2,-25428(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  22ee7c:	e037883a 	mov	sp,fp
  22ee80:	df000017 	ldw	fp,0(sp)
  22ee84:	dec00104 	addi	sp,sp,4
  22ee88:	f800283a 	ret

0022ee8c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  22ee8c:	defffd04 	addi	sp,sp,-12
  22ee90:	df000215 	stw	fp,8(sp)
  22ee94:	df000204 	addi	fp,sp,8
  22ee98:	e13ffe15 	stw	r4,-8(fp)
  22ee9c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  22eea0:	00000506 	br	22eeb8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  22eea4:	e0bfff17 	ldw	r2,-4(fp)
  22eea8:	1090000c 	andi	r2,r2,16384
  22eeac:	10000226 	beq	r2,zero,22eeb8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  22eeb0:	00bffd44 	movi	r2,-11
  22eeb4:	00000b06 	br	22eee4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  22eeb8:	e0bffe17 	ldw	r2,-8(fp)
  22eebc:	10c00d17 	ldw	r3,52(r2)
  22eec0:	e0bffe17 	ldw	r2,-8(fp)
  22eec4:	10800c17 	ldw	r2,48(r2)
  22eec8:	18800526 	beq	r3,r2,22eee0 <altera_avalon_jtag_uart_close+0x54>
  22eecc:	e0bffe17 	ldw	r2,-8(fp)
  22eed0:	10c00917 	ldw	r3,36(r2)
  22eed4:	e0bffe17 	ldw	r2,-8(fp)
  22eed8:	10800117 	ldw	r2,4(r2)
  22eedc:	18bff136 	bltu	r3,r2,22eea4 <_gp+0xffff431c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  22eee0:	0005883a 	mov	r2,zero
}
  22eee4:	e037883a 	mov	sp,fp
  22eee8:	df000017 	ldw	fp,0(sp)
  22eeec:	dec00104 	addi	sp,sp,4
  22eef0:	f800283a 	ret

0022eef4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  22eef4:	defffa04 	addi	sp,sp,-24
  22eef8:	df000515 	stw	fp,20(sp)
  22eefc:	df000504 	addi	fp,sp,20
  22ef00:	e13ffd15 	stw	r4,-12(fp)
  22ef04:	e17ffe15 	stw	r5,-8(fp)
  22ef08:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  22ef0c:	00bff9c4 	movi	r2,-25
  22ef10:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  22ef14:	e0bffe17 	ldw	r2,-8(fp)
  22ef18:	10da8060 	cmpeqi	r3,r2,27137
  22ef1c:	1800031e 	bne	r3,zero,22ef2c <altera_avalon_jtag_uart_ioctl+0x38>
  22ef20:	109a80a0 	cmpeqi	r2,r2,27138
  22ef24:	1000181e 	bne	r2,zero,22ef88 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  22ef28:	00002906 	br	22efd0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  22ef2c:	e0bffd17 	ldw	r2,-12(fp)
  22ef30:	10c00117 	ldw	r3,4(r2)
  22ef34:	00a00034 	movhi	r2,32768
  22ef38:	10bfffc4 	addi	r2,r2,-1
  22ef3c:	18802126 	beq	r3,r2,22efc4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  22ef40:	e0bfff17 	ldw	r2,-4(fp)
  22ef44:	10800017 	ldw	r2,0(r2)
  22ef48:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  22ef4c:	e0bffc17 	ldw	r2,-16(fp)
  22ef50:	10800090 	cmplti	r2,r2,2
  22ef54:	1000061e 	bne	r2,zero,22ef70 <altera_avalon_jtag_uart_ioctl+0x7c>
  22ef58:	e0fffc17 	ldw	r3,-16(fp)
  22ef5c:	00a00034 	movhi	r2,32768
  22ef60:	10bfffc4 	addi	r2,r2,-1
  22ef64:	18800226 	beq	r3,r2,22ef70 <altera_avalon_jtag_uart_ioctl+0x7c>
  22ef68:	e0bffc17 	ldw	r2,-16(fp)
  22ef6c:	00000206 	br	22ef78 <altera_avalon_jtag_uart_ioctl+0x84>
  22ef70:	00a00034 	movhi	r2,32768
  22ef74:	10bfff84 	addi	r2,r2,-2
  22ef78:	e0fffd17 	ldw	r3,-12(fp)
  22ef7c:	18800115 	stw	r2,4(r3)
      rc = 0;
  22ef80:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  22ef84:	00000f06 	br	22efc4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  22ef88:	e0bffd17 	ldw	r2,-12(fp)
  22ef8c:	10c00117 	ldw	r3,4(r2)
  22ef90:	00a00034 	movhi	r2,32768
  22ef94:	10bfffc4 	addi	r2,r2,-1
  22ef98:	18800c26 	beq	r3,r2,22efcc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  22ef9c:	e0bffd17 	ldw	r2,-12(fp)
  22efa0:	10c00917 	ldw	r3,36(r2)
  22efa4:	e0bffd17 	ldw	r2,-12(fp)
  22efa8:	10800117 	ldw	r2,4(r2)
  22efac:	1885803a 	cmpltu	r2,r3,r2
  22efb0:	10c03fcc 	andi	r3,r2,255
  22efb4:	e0bfff17 	ldw	r2,-4(fp)
  22efb8:	10c00015 	stw	r3,0(r2)
      rc = 0;
  22efbc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  22efc0:	00000206 	br	22efcc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  22efc4:	0001883a 	nop
  22efc8:	00000106 	br	22efd0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  22efcc:	0001883a 	nop

  default:
    break;
  }

  return rc;
  22efd0:	e0bffb17 	ldw	r2,-20(fp)
}
  22efd4:	e037883a 	mov	sp,fp
  22efd8:	df000017 	ldw	fp,0(sp)
  22efdc:	dec00104 	addi	sp,sp,4
  22efe0:	f800283a 	ret

0022efe4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  22efe4:	defff304 	addi	sp,sp,-52
  22efe8:	dfc00c15 	stw	ra,48(sp)
  22efec:	df000b15 	stw	fp,44(sp)
  22eff0:	df000b04 	addi	fp,sp,44
  22eff4:	e13ffc15 	stw	r4,-16(fp)
  22eff8:	e17ffd15 	stw	r5,-12(fp)
  22effc:	e1bffe15 	stw	r6,-8(fp)
  22f000:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  22f004:	e0bffd17 	ldw	r2,-12(fp)
  22f008:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  22f00c:	00004706 	br	22f12c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  22f010:	e0bffc17 	ldw	r2,-16(fp)
  22f014:	10800a17 	ldw	r2,40(r2)
  22f018:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  22f01c:	e0bffc17 	ldw	r2,-16(fp)
  22f020:	10800b17 	ldw	r2,44(r2)
  22f024:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  22f028:	e0fff717 	ldw	r3,-36(fp)
  22f02c:	e0bff817 	ldw	r2,-32(fp)
  22f030:	18800536 	bltu	r3,r2,22f048 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  22f034:	e0fff717 	ldw	r3,-36(fp)
  22f038:	e0bff817 	ldw	r2,-32(fp)
  22f03c:	1885c83a 	sub	r2,r3,r2
  22f040:	e0bff615 	stw	r2,-40(fp)
  22f044:	00000406 	br	22f058 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  22f048:	00c20004 	movi	r3,2048
  22f04c:	e0bff817 	ldw	r2,-32(fp)
  22f050:	1885c83a 	sub	r2,r3,r2
  22f054:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  22f058:	e0bff617 	ldw	r2,-40(fp)
  22f05c:	10001e26 	beq	r2,zero,22f0d8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  22f060:	e0fffe17 	ldw	r3,-8(fp)
  22f064:	e0bff617 	ldw	r2,-40(fp)
  22f068:	1880022e 	bgeu	r3,r2,22f074 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  22f06c:	e0bffe17 	ldw	r2,-8(fp)
  22f070:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  22f074:	e0bffc17 	ldw	r2,-16(fp)
  22f078:	10c00e04 	addi	r3,r2,56
  22f07c:	e0bff817 	ldw	r2,-32(fp)
  22f080:	1885883a 	add	r2,r3,r2
  22f084:	e1bff617 	ldw	r6,-40(fp)
  22f088:	100b883a 	mov	r5,r2
  22f08c:	e13ff517 	ldw	r4,-44(fp)
  22f090:	02273cc0 	call	2273cc <memcpy>
      ptr   += n;
  22f094:	e0fff517 	ldw	r3,-44(fp)
  22f098:	e0bff617 	ldw	r2,-40(fp)
  22f09c:	1885883a 	add	r2,r3,r2
  22f0a0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  22f0a4:	e0fffe17 	ldw	r3,-8(fp)
  22f0a8:	e0bff617 	ldw	r2,-40(fp)
  22f0ac:	1885c83a 	sub	r2,r3,r2
  22f0b0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  22f0b4:	e0fff817 	ldw	r3,-32(fp)
  22f0b8:	e0bff617 	ldw	r2,-40(fp)
  22f0bc:	1885883a 	add	r2,r3,r2
  22f0c0:	10c1ffcc 	andi	r3,r2,2047
  22f0c4:	e0bffc17 	ldw	r2,-16(fp)
  22f0c8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  22f0cc:	e0bffe17 	ldw	r2,-8(fp)
  22f0d0:	00bfcf16 	blt	zero,r2,22f010 <_gp+0xffff4488>
  22f0d4:	00000106 	br	22f0dc <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  22f0d8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  22f0dc:	e0fff517 	ldw	r3,-44(fp)
  22f0e0:	e0bffd17 	ldw	r2,-12(fp)
  22f0e4:	1880141e 	bne	r3,r2,22f138 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  22f0e8:	e0bfff17 	ldw	r2,-4(fp)
  22f0ec:	1090000c 	andi	r2,r2,16384
  22f0f0:	1000131e 	bne	r2,zero,22f140 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  22f0f4:	0001883a 	nop
  22f0f8:	e0bffc17 	ldw	r2,-16(fp)
  22f0fc:	10c00a17 	ldw	r3,40(r2)
  22f100:	e0bff717 	ldw	r2,-36(fp)
  22f104:	1880051e 	bne	r3,r2,22f11c <altera_avalon_jtag_uart_read+0x138>
  22f108:	e0bffc17 	ldw	r2,-16(fp)
  22f10c:	10c00917 	ldw	r3,36(r2)
  22f110:	e0bffc17 	ldw	r2,-16(fp)
  22f114:	10800117 	ldw	r2,4(r2)
  22f118:	18bff736 	bltu	r3,r2,22f0f8 <_gp+0xffff4570>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  22f11c:	e0bffc17 	ldw	r2,-16(fp)
  22f120:	10c00a17 	ldw	r3,40(r2)
  22f124:	e0bff717 	ldw	r2,-36(fp)
  22f128:	18800726 	beq	r3,r2,22f148 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  22f12c:	e0bffe17 	ldw	r2,-8(fp)
  22f130:	00bfb716 	blt	zero,r2,22f010 <_gp+0xffff4488>
  22f134:	00000506 	br	22f14c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  22f138:	0001883a 	nop
  22f13c:	00000306 	br	22f14c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  22f140:	0001883a 	nop
  22f144:	00000106 	br	22f14c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  22f148:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  22f14c:	e0fff517 	ldw	r3,-44(fp)
  22f150:	e0bffd17 	ldw	r2,-12(fp)
  22f154:	18801826 	beq	r3,r2,22f1b8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  22f158:	0005303a 	rdctl	r2,status
  22f15c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  22f160:	e0fffb17 	ldw	r3,-20(fp)
  22f164:	00bfff84 	movi	r2,-2
  22f168:	1884703a 	and	r2,r3,r2
  22f16c:	1001703a 	wrctl	status,r2
  
  return context;
  22f170:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  22f174:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  22f178:	e0bffc17 	ldw	r2,-16(fp)
  22f17c:	10800817 	ldw	r2,32(r2)
  22f180:	10c00054 	ori	r3,r2,1
  22f184:	e0bffc17 	ldw	r2,-16(fp)
  22f188:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  22f18c:	e0bffc17 	ldw	r2,-16(fp)
  22f190:	10800017 	ldw	r2,0(r2)
  22f194:	10800104 	addi	r2,r2,4
  22f198:	1007883a 	mov	r3,r2
  22f19c:	e0bffc17 	ldw	r2,-16(fp)
  22f1a0:	10800817 	ldw	r2,32(r2)
  22f1a4:	18800035 	stwio	r2,0(r3)
  22f1a8:	e0bffa17 	ldw	r2,-24(fp)
  22f1ac:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  22f1b0:	e0bff917 	ldw	r2,-28(fp)
  22f1b4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  22f1b8:	e0fff517 	ldw	r3,-44(fp)
  22f1bc:	e0bffd17 	ldw	r2,-12(fp)
  22f1c0:	18800426 	beq	r3,r2,22f1d4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  22f1c4:	e0fff517 	ldw	r3,-44(fp)
  22f1c8:	e0bffd17 	ldw	r2,-12(fp)
  22f1cc:	1885c83a 	sub	r2,r3,r2
  22f1d0:	00000606 	br	22f1ec <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  22f1d4:	e0bfff17 	ldw	r2,-4(fp)
  22f1d8:	1090000c 	andi	r2,r2,16384
  22f1dc:	10000226 	beq	r2,zero,22f1e8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  22f1e0:	00bffd44 	movi	r2,-11
  22f1e4:	00000106 	br	22f1ec <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  22f1e8:	00bffec4 	movi	r2,-5
}
  22f1ec:	e037883a 	mov	sp,fp
  22f1f0:	dfc00117 	ldw	ra,4(sp)
  22f1f4:	df000017 	ldw	fp,0(sp)
  22f1f8:	dec00204 	addi	sp,sp,8
  22f1fc:	f800283a 	ret

0022f200 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  22f200:	defff304 	addi	sp,sp,-52
  22f204:	dfc00c15 	stw	ra,48(sp)
  22f208:	df000b15 	stw	fp,44(sp)
  22f20c:	df000b04 	addi	fp,sp,44
  22f210:	e13ffc15 	stw	r4,-16(fp)
  22f214:	e17ffd15 	stw	r5,-12(fp)
  22f218:	e1bffe15 	stw	r6,-8(fp)
  22f21c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  22f220:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  22f224:	e0bffd17 	ldw	r2,-12(fp)
  22f228:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  22f22c:	00003706 	br	22f30c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  22f230:	e0bffc17 	ldw	r2,-16(fp)
  22f234:	10800c17 	ldw	r2,48(r2)
  22f238:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  22f23c:	e0bffc17 	ldw	r2,-16(fp)
  22f240:	10800d17 	ldw	r2,52(r2)
  22f244:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  22f248:	e0fff917 	ldw	r3,-28(fp)
  22f24c:	e0bff517 	ldw	r2,-44(fp)
  22f250:	1880062e 	bgeu	r3,r2,22f26c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  22f254:	e0fff517 	ldw	r3,-44(fp)
  22f258:	e0bff917 	ldw	r2,-28(fp)
  22f25c:	1885c83a 	sub	r2,r3,r2
  22f260:	10bfffc4 	addi	r2,r2,-1
  22f264:	e0bff615 	stw	r2,-40(fp)
  22f268:	00000b06 	br	22f298 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  22f26c:	e0bff517 	ldw	r2,-44(fp)
  22f270:	10000526 	beq	r2,zero,22f288 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  22f274:	00c20004 	movi	r3,2048
  22f278:	e0bff917 	ldw	r2,-28(fp)
  22f27c:	1885c83a 	sub	r2,r3,r2
  22f280:	e0bff615 	stw	r2,-40(fp)
  22f284:	00000406 	br	22f298 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  22f288:	00c1ffc4 	movi	r3,2047
  22f28c:	e0bff917 	ldw	r2,-28(fp)
  22f290:	1885c83a 	sub	r2,r3,r2
  22f294:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  22f298:	e0bff617 	ldw	r2,-40(fp)
  22f29c:	10001e26 	beq	r2,zero,22f318 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  22f2a0:	e0fffe17 	ldw	r3,-8(fp)
  22f2a4:	e0bff617 	ldw	r2,-40(fp)
  22f2a8:	1880022e 	bgeu	r3,r2,22f2b4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  22f2ac:	e0bffe17 	ldw	r2,-8(fp)
  22f2b0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  22f2b4:	e0bffc17 	ldw	r2,-16(fp)
  22f2b8:	10c20e04 	addi	r3,r2,2104
  22f2bc:	e0bff917 	ldw	r2,-28(fp)
  22f2c0:	1885883a 	add	r2,r3,r2
  22f2c4:	e1bff617 	ldw	r6,-40(fp)
  22f2c8:	e17ffd17 	ldw	r5,-12(fp)
  22f2cc:	1009883a 	mov	r4,r2
  22f2d0:	02273cc0 	call	2273cc <memcpy>
      ptr   += n;
  22f2d4:	e0fffd17 	ldw	r3,-12(fp)
  22f2d8:	e0bff617 	ldw	r2,-40(fp)
  22f2dc:	1885883a 	add	r2,r3,r2
  22f2e0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  22f2e4:	e0fffe17 	ldw	r3,-8(fp)
  22f2e8:	e0bff617 	ldw	r2,-40(fp)
  22f2ec:	1885c83a 	sub	r2,r3,r2
  22f2f0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  22f2f4:	e0fff917 	ldw	r3,-28(fp)
  22f2f8:	e0bff617 	ldw	r2,-40(fp)
  22f2fc:	1885883a 	add	r2,r3,r2
  22f300:	10c1ffcc 	andi	r3,r2,2047
  22f304:	e0bffc17 	ldw	r2,-16(fp)
  22f308:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  22f30c:	e0bffe17 	ldw	r2,-8(fp)
  22f310:	00bfc716 	blt	zero,r2,22f230 <_gp+0xffff46a8>
  22f314:	00000106 	br	22f31c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  22f318:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  22f31c:	0005303a 	rdctl	r2,status
  22f320:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  22f324:	e0fffb17 	ldw	r3,-20(fp)
  22f328:	00bfff84 	movi	r2,-2
  22f32c:	1884703a 	and	r2,r3,r2
  22f330:	1001703a 	wrctl	status,r2
  
  return context;
  22f334:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  22f338:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  22f33c:	e0bffc17 	ldw	r2,-16(fp)
  22f340:	10800817 	ldw	r2,32(r2)
  22f344:	10c00094 	ori	r3,r2,2
  22f348:	e0bffc17 	ldw	r2,-16(fp)
  22f34c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  22f350:	e0bffc17 	ldw	r2,-16(fp)
  22f354:	10800017 	ldw	r2,0(r2)
  22f358:	10800104 	addi	r2,r2,4
  22f35c:	1007883a 	mov	r3,r2
  22f360:	e0bffc17 	ldw	r2,-16(fp)
  22f364:	10800817 	ldw	r2,32(r2)
  22f368:	18800035 	stwio	r2,0(r3)
  22f36c:	e0bffa17 	ldw	r2,-24(fp)
  22f370:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  22f374:	e0bff817 	ldw	r2,-32(fp)
  22f378:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  22f37c:	e0bffe17 	ldw	r2,-8(fp)
  22f380:	0080100e 	bge	zero,r2,22f3c4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  22f384:	e0bfff17 	ldw	r2,-4(fp)
  22f388:	1090000c 	andi	r2,r2,16384
  22f38c:	1000101e 	bne	r2,zero,22f3d0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  22f390:	0001883a 	nop
  22f394:	e0bffc17 	ldw	r2,-16(fp)
  22f398:	10c00d17 	ldw	r3,52(r2)
  22f39c:	e0bff517 	ldw	r2,-44(fp)
  22f3a0:	1880051e 	bne	r3,r2,22f3b8 <altera_avalon_jtag_uart_write+0x1b8>
  22f3a4:	e0bffc17 	ldw	r2,-16(fp)
  22f3a8:	10c00917 	ldw	r3,36(r2)
  22f3ac:	e0bffc17 	ldw	r2,-16(fp)
  22f3b0:	10800117 	ldw	r2,4(r2)
  22f3b4:	18bff736 	bltu	r3,r2,22f394 <_gp+0xffff480c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  22f3b8:	e0bffc17 	ldw	r2,-16(fp)
  22f3bc:	10800917 	ldw	r2,36(r2)
  22f3c0:	1000051e 	bne	r2,zero,22f3d8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  22f3c4:	e0bffe17 	ldw	r2,-8(fp)
  22f3c8:	00bfd016 	blt	zero,r2,22f30c <_gp+0xffff4784>
  22f3cc:	00000306 	br	22f3dc <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  22f3d0:	0001883a 	nop
  22f3d4:	00000106 	br	22f3dc <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  22f3d8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  22f3dc:	e0fffd17 	ldw	r3,-12(fp)
  22f3e0:	e0bff717 	ldw	r2,-36(fp)
  22f3e4:	18800426 	beq	r3,r2,22f3f8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  22f3e8:	e0fffd17 	ldw	r3,-12(fp)
  22f3ec:	e0bff717 	ldw	r2,-36(fp)
  22f3f0:	1885c83a 	sub	r2,r3,r2
  22f3f4:	00000606 	br	22f410 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  22f3f8:	e0bfff17 	ldw	r2,-4(fp)
  22f3fc:	1090000c 	andi	r2,r2,16384
  22f400:	10000226 	beq	r2,zero,22f40c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  22f404:	00bffd44 	movi	r2,-11
  22f408:	00000106 	br	22f410 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  22f40c:	00bffec4 	movi	r2,-5
}
  22f410:	e037883a 	mov	sp,fp
  22f414:	dfc00117 	ldw	ra,4(sp)
  22f418:	df000017 	ldw	fp,0(sp)
  22f41c:	dec00204 	addi	sp,sp,8
  22f420:	f800283a 	ret

0022f424 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  22f424:	defffa04 	addi	sp,sp,-24
  22f428:	dfc00515 	stw	ra,20(sp)
  22f42c:	df000415 	stw	fp,16(sp)
  22f430:	df000404 	addi	fp,sp,16
  22f434:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  22f438:	0007883a 	mov	r3,zero
  22f43c:	e0bfff17 	ldw	r2,-4(fp)
  22f440:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  22f444:	e0bfff17 	ldw	r2,-4(fp)
  22f448:	10800104 	addi	r2,r2,4
  22f44c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  22f450:	0005303a 	rdctl	r2,status
  22f454:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  22f458:	e0fffd17 	ldw	r3,-12(fp)
  22f45c:	00bfff84 	movi	r2,-2
  22f460:	1884703a 	and	r2,r3,r2
  22f464:	1001703a 	wrctl	status,r2
  
  return context;
  22f468:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  22f46c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  22f470:	023059c0 	call	23059c <alt_tick>
  22f474:	e0bffc17 	ldw	r2,-16(fp)
  22f478:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  22f47c:	e0bffe17 	ldw	r2,-8(fp)
  22f480:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  22f484:	0001883a 	nop
  22f488:	e037883a 	mov	sp,fp
  22f48c:	dfc00117 	ldw	ra,4(sp)
  22f490:	df000017 	ldw	fp,0(sp)
  22f494:	dec00204 	addi	sp,sp,8
  22f498:	f800283a 	ret

0022f49c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  22f49c:	defff804 	addi	sp,sp,-32
  22f4a0:	dfc00715 	stw	ra,28(sp)
  22f4a4:	df000615 	stw	fp,24(sp)
  22f4a8:	df000604 	addi	fp,sp,24
  22f4ac:	e13ffc15 	stw	r4,-16(fp)
  22f4b0:	e17ffd15 	stw	r5,-12(fp)
  22f4b4:	e1bffe15 	stw	r6,-8(fp)
  22f4b8:	e1ffff15 	stw	r7,-4(fp)
  22f4bc:	e0bfff17 	ldw	r2,-4(fp)
  22f4c0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  22f4c4:	d0a72b17 	ldw	r2,-25428(gp)
  22f4c8:	1000021e 	bne	r2,zero,22f4d4 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  22f4cc:	e0bffb17 	ldw	r2,-20(fp)
  22f4d0:	d0a72b15 	stw	r2,-25428(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  22f4d4:	e0bffc17 	ldw	r2,-16(fp)
  22f4d8:	10800104 	addi	r2,r2,4
  22f4dc:	00c001c4 	movi	r3,7
  22f4e0:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  22f4e4:	d8000015 	stw	zero,0(sp)
  22f4e8:	e1fffc17 	ldw	r7,-16(fp)
  22f4ec:	018008f4 	movhi	r6,35
  22f4f0:	31bd0904 	addi	r6,r6,-3036
  22f4f4:	e17ffe17 	ldw	r5,-8(fp)
  22f4f8:	e13ffd17 	ldw	r4,-12(fp)
  22f4fc:	02301200 	call	230120 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  22f500:	0001883a 	nop
  22f504:	e037883a 	mov	sp,fp
  22f508:	dfc00117 	ldw	ra,4(sp)
  22f50c:	df000017 	ldw	fp,0(sp)
  22f510:	dec00204 	addi	sp,sp,8
  22f514:	f800283a 	ret

0022f518 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
  22f518:	defff404 	addi	sp,sp,-48
  22f51c:	df000b15 	stw	fp,44(sp)
  22f520:	df000b04 	addi	fp,sp,44
  22f524:	e13ffc15 	stw	r4,-16(fp)
  22f528:	e17ffd15 	stw	r5,-12(fp)
  22f52c:	e1bffe15 	stw	r6,-8(fp)
  22f530:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
  22f534:	e0bffc17 	ldw	r2,-16(fp)
  22f538:	10800017 	ldw	r2,0(r2)
  22f53c:	e0bff515 	stw	r2,-44(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
  22f540:	e0bff517 	ldw	r2,-44(fp)
  22f544:	10800217 	ldw	r2,8(r2)
  22f548:	e0bff615 	stw	r2,-40(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
  22f54c:	e0bff617 	ldw	r2,-40(fp)
  22f550:	10bfffc4 	addi	r2,r2,-1
  22f554:	e0bffb15 	stw	r2,-20(fp)

  while (*++ptr != 0)
  22f558:	e0bffb17 	ldw	r2,-20(fp)
  22f55c:	10800044 	addi	r2,r2,1
  22f560:	e0bffb15 	stw	r2,-20(fp)
  22f564:	e0bffb17 	ldw	r2,-20(fp)
  22f568:	10800003 	ldbu	r2,0(r2)
  22f56c:	10803fcc 	andi	r2,r2,255
  22f570:	1080201c 	xori	r2,r2,128
  22f574:	10bfe004 	addi	r2,r2,-128
  22f578:	103ff71e 	bne	r2,zero,22f558 <_gp+0xffff49d0>
    ;

  return ptr - string;
  22f57c:	e0fffb17 	ldw	r3,-20(fp)
  22f580:	e0bff617 	ldw	r2,-40(fp)
  22f584:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
  22f588:	10800044 	addi	r2,r2,1
  22f58c:	1007883a 	mov	r3,r2
  22f590:	e0bffd17 	ldw	r2,-12(fp)
  22f594:	10c5883a 	add	r2,r2,r3
  22f598:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
  22f59c:	d0a00d04 	addi	r2,gp,-32716
  22f5a0:	1007883a 	mov	r3,r2
  r4 = (int)name;
  22f5a4:	e0bffd17 	ldw	r2,-12(fp)
  22f5a8:	1009883a 	mov	r4,r2
  r5 = flags;
  22f5ac:	e17ffe17 	ldw	r5,-8(fp)
  r6 = mode;
  22f5b0:	e1bfff17 	ldw	r6,-4(fp)
  22f5b4:	e0bffd17 	ldw	r2,-12(fp)
  22f5b8:	e0bff915 	stw	r2,-28(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
  22f5bc:	e0bff917 	ldw	r2,-28(fp)
  22f5c0:	10bfffc4 	addi	r2,r2,-1
  22f5c4:	e0bffa15 	stw	r2,-24(fp)

  while (*++ptr != 0)
  22f5c8:	e0bffa17 	ldw	r2,-24(fp)
  22f5cc:	10800044 	addi	r2,r2,1
  22f5d0:	e0bffa15 	stw	r2,-24(fp)
  22f5d4:	e0bffa17 	ldw	r2,-24(fp)
  22f5d8:	10800003 	ldbu	r2,0(r2)
  22f5dc:	10803fcc 	andi	r2,r2,255
  22f5e0:	1080201c 	xori	r2,r2,128
  22f5e4:	10bfe004 	addi	r2,r2,-128
  22f5e8:	103ff71e 	bne	r2,zero,22f5c8 <_gp+0xffff4a40>
    ;

  return ptr - string;
  22f5ec:	e1fffa17 	ldw	r7,-24(fp)
  22f5f0:	e0bff917 	ldw	r2,-28(fp)
  22f5f4:	3885c83a 	sub	r2,r7,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
  22f5f8:	100f883a 	mov	r7,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6), "r" (r7) : "memory" );
  22f5fc:	003da07a 	break	1

  handle = (void *)r2;
  22f600:	e0bff715 	stw	r2,-36(fp)
  error = r3;
  22f604:	e0fff815 	stw	r3,-32(fp)

  if (error == 0)
  22f608:	e0bff817 	ldw	r2,-32(fp)
  22f60c:	1000031e 	bne	r2,zero,22f61c <alt_hostfs_open+0x104>
    fd->priv = handle;
  22f610:	e0bffc17 	ldw	r2,-16(fp)
  22f614:	e0fff717 	ldw	r3,-36(fp)
  22f618:	10c00115 	stw	r3,4(r2)

  return -error;
  22f61c:	e0bff817 	ldw	r2,-32(fp)
  22f620:	0085c83a 	sub	r2,zero,r2
}
  22f624:	e037883a 	mov	sp,fp
  22f628:	df000017 	ldw	fp,0(sp)
  22f62c:	dec00104 	addi	sp,sp,4
  22f630:	f800283a 	ret

0022f634 <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
  22f634:	defffd04 	addi	sp,sp,-12
  22f638:	df000215 	stw	fp,8(sp)
  22f63c:	df000204 	addi	fp,sp,8
  22f640:	e13fff15 	stw	r4,-4(fp)

  /* Input and output parameters for the hostcall */
  register int r3 asm ("r3");
  register int r4 asm ("r4");

  r3 = (int)&hcinfo;
  22f644:	d0a01004 	addi	r2,gp,-32704
  22f648:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  22f64c:	e0bfff17 	ldw	r2,-4(fp)
  22f650:	10800117 	ldw	r2,4(r2)
  22f654:	1009883a 	mov	r4,r2

  __asm__ volatile("break 1" : "+r" (r3) : "r" (r4) );
  22f658:	003da07a 	break	1

  error = r3;
  22f65c:	e0fffe15 	stw	r3,-8(fp)

  return -error;
  22f660:	e0bffe17 	ldw	r2,-8(fp)
  22f664:	0085c83a 	sub	r2,zero,r2
}
  22f668:	e037883a 	mov	sp,fp
  22f66c:	df000017 	ldw	fp,0(sp)
  22f670:	dec00104 	addi	sp,sp,4
  22f674:	f800283a 	ret

0022f678 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
  22f678:	defffa04 	addi	sp,sp,-24
  22f67c:	df000515 	stw	fp,20(sp)
  22f680:	df000504 	addi	fp,sp,20
  22f684:	e13ffd15 	stw	r4,-12(fp)
  22f688:	e17ffe15 	stw	r5,-8(fp)
  22f68c:	e1bfff15 	stw	r6,-4(fp)
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");


  r3 = (int)&hcinfo;
  22f690:	d0a01304 	addi	r2,gp,-32692
  22f694:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  22f698:	e0bffd17 	ldw	r2,-12(fp)
  22f69c:	10800117 	ldw	r2,4(r2)
  22f6a0:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
  22f6a4:	e0bffe17 	ldw	r2,-8(fp)
  22f6a8:	100b883a 	mov	r5,r2
  r6 = len;
  22f6ac:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  22f6b0:	003da07a 	break	1

  rc = r2;
  22f6b4:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  22f6b8:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  22f6bc:	e0bffc17 	ldw	r2,-16(fp)
  22f6c0:	10000326 	beq	r2,zero,22f6d0 <alt_hostfs_read+0x58>
  22f6c4:	e0bffc17 	ldw	r2,-16(fp)
  22f6c8:	0085c83a 	sub	r2,zero,r2
  22f6cc:	00000106 	br	22f6d4 <alt_hostfs_read+0x5c>
  22f6d0:	e0bffb17 	ldw	r2,-20(fp)
}
  22f6d4:	e037883a 	mov	sp,fp
  22f6d8:	df000017 	ldw	fp,0(sp)
  22f6dc:	dec00104 	addi	sp,sp,4
  22f6e0:	f800283a 	ret

0022f6e4 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
  22f6e4:	defffa04 	addi	sp,sp,-24
  22f6e8:	df000515 	stw	fp,20(sp)
  22f6ec:	df000504 	addi	fp,sp,20
  22f6f0:	e13ffd15 	stw	r4,-12(fp)
  22f6f4:	e17ffe15 	stw	r5,-8(fp)
  22f6f8:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
  22f6fc:	d0a01604 	addi	r2,gp,-32680
  22f700:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  22f704:	e0bffd17 	ldw	r2,-12(fp)
  22f708:	10800117 	ldw	r2,4(r2)
  22f70c:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
  22f710:	e0bffe17 	ldw	r2,-8(fp)
  22f714:	100b883a 	mov	r5,r2
  r6 = len;
  22f718:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  22f71c:	003da07a 	break	1

  rc = r2;
  22f720:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  22f724:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  22f728:	e0bffc17 	ldw	r2,-16(fp)
  22f72c:	10000326 	beq	r2,zero,22f73c <alt_hostfs_write+0x58>
  22f730:	e0bffc17 	ldw	r2,-16(fp)
  22f734:	0085c83a 	sub	r2,zero,r2
  22f738:	00000106 	br	22f740 <alt_hostfs_write+0x5c>
  22f73c:	e0bffb17 	ldw	r2,-20(fp)
}
  22f740:	e037883a 	mov	sp,fp
  22f744:	df000017 	ldw	fp,0(sp)
  22f748:	dec00104 	addi	sp,sp,4
  22f74c:	f800283a 	ret

0022f750 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
  22f750:	defffa04 	addi	sp,sp,-24
  22f754:	df000515 	stw	fp,20(sp)
  22f758:	df000504 	addi	fp,sp,20
  22f75c:	e13ffd15 	stw	r4,-12(fp)
  22f760:	e17ffe15 	stw	r5,-8(fp)
  22f764:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
  22f768:	d0a01904 	addi	r2,gp,-32668
  22f76c:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  22f770:	e0bffd17 	ldw	r2,-12(fp)
  22f774:	10800117 	ldw	r2,4(r2)
  22f778:	1009883a 	mov	r4,r2
  r5 = ptr;
  22f77c:	e17ffe17 	ldw	r5,-8(fp)
  r6 = dir;
  22f780:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  22f784:	003da07a 	break	1

  rc = r2;
  22f788:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  22f78c:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  22f790:	e0bffc17 	ldw	r2,-16(fp)
  22f794:	10000326 	beq	r2,zero,22f7a4 <alt_hostfs_seek+0x54>
  22f798:	e0bffc17 	ldw	r2,-16(fp)
  22f79c:	0085c83a 	sub	r2,zero,r2
  22f7a0:	00000106 	br	22f7a8 <alt_hostfs_seek+0x58>
  22f7a4:	e0bffb17 	ldw	r2,-20(fp)
}
  22f7a8:	e037883a 	mov	sp,fp
  22f7ac:	df000017 	ldw	fp,0(sp)
  22f7b0:	dec00104 	addi	sp,sp,4
  22f7b4:	f800283a 	ret

0022f7b8 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
  22f7b8:	deffe904 	addi	sp,sp,-92
  22f7bc:	df001615 	stw	fp,88(sp)
  22f7c0:	df001604 	addi	fp,sp,88
  22f7c4:	e13ffe15 	stw	r4,-8(fp)
  22f7c8:	e17fff15 	stw	r5,-4(fp)
  register int r2 asm ("r2");
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");

  r3 = (int)&hcinfo;
  22f7cc:	d0a01c04 	addi	r2,gp,-32656
  22f7d0:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  22f7d4:	e0bffe17 	ldw	r2,-8(fp)
  22f7d8:	10800117 	ldw	r2,4(r2)
  22f7dc:	1009883a 	mov	r4,r2
  r5 = (int)&hoststat;
  22f7e0:	e0bfee04 	addi	r2,fp,-72
  22f7e4:	100b883a 	mov	r5,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5) : "memory" );
  22f7e8:	003da07a 	break	1

  rc = r2;
  22f7ec:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
  22f7f0:	e0ffec15 	stw	r3,-80(fp)

  if (error == 0)
  22f7f4:	e0bfec17 	ldw	r2,-80(fp)
  22f7f8:	1000621e 	bne	r2,zero,22f984 <alt_hostfs_fstat+0x1cc>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
  22f7fc:	e0bfee04 	addi	r2,fp,-72
  22f800:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
  22f804:	e0bfea17 	ldw	r2,-88(fp)
  22f808:	10801004 	addi	r2,r2,64
  22f80c:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
  22f810:	00001606 	br	22f86c <alt_hostfs_fstat+0xb4>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  22f814:	e0bfea17 	ldw	r2,-88(fp)
  22f818:	10800017 	ldw	r2,0(r2)
  22f81c:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
  22f820:	e0bfea17 	ldw	r2,-88(fp)
  22f824:	10800017 	ldw	r2,0(r2)
  22f828:	10803fec 	andhi	r2,r2,255
  22f82c:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  22f830:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
  22f834:	e0bfea17 	ldw	r2,-88(fp)
  22f838:	10800017 	ldw	r2,0(r2)
  22f83c:	10bfc00c 	andi	r2,r2,65280
  22f840:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
  22f844:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
  22f848:	e0bfea17 	ldw	r2,-88(fp)
  22f84c:	10800017 	ldw	r2,0(r2)
  22f850:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
  22f854:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  22f858:	e0bfea17 	ldw	r2,-88(fp)
  22f85c:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
  22f860:	e0bfea17 	ldw	r2,-88(fp)
  22f864:	10800104 	addi	r2,r2,4
  22f868:	e0bfea15 	stw	r2,-88(fp)
  22f86c:	e0ffea17 	ldw	r3,-88(fp)
  22f870:	e0bfed17 	ldw	r2,-76(fp)
  22f874:	18bfe736 	bltu	r3,r2,22f814 <_gp+0xffff4c8c>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
  22f878:	e0bfff17 	ldw	r2,-4(fp)
  22f87c:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
  22f880:	e0bfea17 	ldw	r2,-88(fp)
  22f884:	10800f04 	addi	r2,r2,60
  22f888:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
  22f88c:	00000506 	br	22f8a4 <alt_hostfs_fstat+0xec>
      *ptr = 0;
  22f890:	e0bfea17 	ldw	r2,-88(fp)
  22f894:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
  22f898:	e0bfea17 	ldw	r2,-88(fp)
  22f89c:	10800104 	addi	r2,r2,4
  22f8a0:	e0bfea15 	stw	r2,-88(fp)
  22f8a4:	e0ffea17 	ldw	r3,-88(fp)
  22f8a8:	e0bfed17 	ldw	r2,-76(fp)
  22f8ac:	18bff836 	bltu	r3,r2,22f890 <_gp+0xffff4d08>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
  22f8b0:	e0bfee17 	ldw	r2,-72(fp)
  22f8b4:	1007883a 	mov	r3,r2
  22f8b8:	e0bfff17 	ldw	r2,-4(fp)
  22f8bc:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
  22f8c0:	e0bfef17 	ldw	r2,-68(fp)
  22f8c4:	1007883a 	mov	r3,r2
  22f8c8:	e0bfff17 	ldw	r2,-4(fp)
  22f8cc:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
  22f8d0:	e0fff017 	ldw	r3,-64(fp)
  22f8d4:	e0bfff17 	ldw	r2,-4(fp)
  22f8d8:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
  22f8dc:	e0bff117 	ldw	r2,-60(fp)
  22f8e0:	1007883a 	mov	r3,r2
  22f8e4:	e0bfff17 	ldw	r2,-4(fp)
  22f8e8:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
  22f8ec:	e0bff217 	ldw	r2,-56(fp)
  22f8f0:	1007883a 	mov	r3,r2
  22f8f4:	e0bfff17 	ldw	r2,-4(fp)
  22f8f8:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
  22f8fc:	e0bff317 	ldw	r2,-52(fp)
  22f900:	1007883a 	mov	r3,r2
  22f904:	e0bfff17 	ldw	r2,-4(fp)
  22f908:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
  22f90c:	e0bff417 	ldw	r2,-48(fp)
  22f910:	1007883a 	mov	r3,r2
  22f914:	e0bfff17 	ldw	r2,-4(fp)
  22f918:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
  22f91c:	e0bff617 	ldw	r2,-40(fp)
  22f920:	1007883a 	mov	r3,r2
  22f924:	e0bfff17 	ldw	r2,-4(fp)
  22f928:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
  22f92c:	e0bffb17 	ldw	r2,-20(fp)
  22f930:	1007883a 	mov	r3,r2
  22f934:	e0bfff17 	ldw	r2,-4(fp)
  22f938:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
  22f93c:	e0bffc17 	ldw	r2,-16(fp)
  22f940:	1007883a 	mov	r3,r2
  22f944:	e0bfff17 	ldw	r2,-4(fp)
  22f948:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
  22f94c:	e0bffd17 	ldw	r2,-12(fp)
  22f950:	1007883a 	mov	r3,r2
  22f954:	e0bfff17 	ldw	r2,-4(fp)
  22f958:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
  22f95c:	e0bff817 	ldw	r2,-32(fp)
  22f960:	1007883a 	mov	r3,r2
  22f964:	e0bfff17 	ldw	r2,-4(fp)
  22f968:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
  22f96c:	e0bffa17 	ldw	r2,-24(fp)
  22f970:	1007883a 	mov	r3,r2
  22f974:	e0bfff17 	ldw	r2,-4(fp)
  22f978:	10c00c15 	stw	r3,48(r2)

    return rc;
  22f97c:	e0bfeb17 	ldw	r2,-84(fp)
  22f980:	00000206 	br	22f98c <alt_hostfs_fstat+0x1d4>
  }
  else
    return -error;
  22f984:	e0bfec17 	ldw	r2,-80(fp)
  22f988:	0085c83a 	sub	r2,zero,r2
}
  22f98c:	e037883a 	mov	sp,fp
  22f990:	df000017 	ldw	fp,0(sp)
  22f994:	dec00104 	addi	sp,sp,4
  22f998:	f800283a 	ret

0022f99c <alt_up_char_buffer_init>:
#include <priv/alt_file.h>

#include "altera_up_avalon_video_character_buffer_with_dma.h"
#include "altera_up_avalon_video_character_buffer_with_dma_regs.h"

void alt_up_char_buffer_init(alt_up_char_buffer_dev *char_buffer) {
  22f99c:	defffc04 	addi	sp,sp,-16
  22f9a0:	dfc00315 	stw	ra,12(sp)
  22f9a4:	df000215 	stw	fp,8(sp)
  22f9a8:	df000204 	addi	fp,sp,8
  22f9ac:	e13fff15 	stw	r4,-4(fp)
	char * name;
	name = (char *) char_buffer->dev.name;
  22f9b0:	e0bfff17 	ldw	r2,-4(fp)
  22f9b4:	10800217 	ldw	r2,8(r2)
  22f9b8:	e0bffe15 	stw	r2,-8(fp)

	for ( ; (*name) != '\0'; name++) {
  22f9bc:	00000b06 	br	22f9ec <alt_up_char_buffer_init+0x50>
		if (strcmp(name, "_avalon_char_buffer_slave") == 0) {
  22f9c0:	014008f4 	movhi	r5,35
  22f9c4:	2943ff04 	addi	r5,r5,4092
  22f9c8:	e13ffe17 	ldw	r4,-8(fp)
  22f9cc:	0228ca40 	call	228ca4 <strcmp>
  22f9d0:	1000031e 	bne	r2,zero,22f9e0 <alt_up_char_buffer_init+0x44>
			(*name) = '\0';
  22f9d4:	e0bffe17 	ldw	r2,-8(fp)
  22f9d8:	10000005 	stb	zero,0(r2)
			break;
  22f9dc:	00000906 	br	22fa04 <alt_up_char_buffer_init+0x68>

void alt_up_char_buffer_init(alt_up_char_buffer_dev *char_buffer) {
	char * name;
	name = (char *) char_buffer->dev.name;

	for ( ; (*name) != '\0'; name++) {
  22f9e0:	e0bffe17 	ldw	r2,-8(fp)
  22f9e4:	10800044 	addi	r2,r2,1
  22f9e8:	e0bffe15 	stw	r2,-8(fp)
  22f9ec:	e0bffe17 	ldw	r2,-8(fp)
  22f9f0:	10800003 	ldbu	r2,0(r2)
  22f9f4:	10803fcc 	andi	r2,r2,255
  22f9f8:	1080201c 	xori	r2,r2,128
  22f9fc:	10bfe004 	addi	r2,r2,-128
  22fa00:	103fef1e 	bne	r2,zero,22f9c0 <_gp+0xffff4e38>
			(*name) = '\0';
			break;
		}
	}
	
	return;
  22fa04:	0001883a 	nop
}
  22fa08:	e037883a 	mov	sp,fp
  22fa0c:	dfc00117 	ldw	ra,4(sp)
  22fa10:	df000017 	ldw	fp,0(sp)
  22fa14:	dec00204 	addi	sp,sp,8
  22fa18:	f800283a 	ret

0022fa1c <alt_up_char_buffer_open_dev>:

alt_up_char_buffer_dev* alt_up_char_buffer_open_dev(const char* name) {
  22fa1c:	defffc04 	addi	sp,sp,-16
  22fa20:	dfc00315 	stw	ra,12(sp)
  22fa24:	df000215 	stw	fp,8(sp)
  22fa28:	df000204 	addi	fp,sp,8
  22fa2c:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_char_buffer_dev *dev = (alt_up_char_buffer_dev *)alt_find_dev(name, &alt_dev_list);
  22fa30:	d1600804 	addi	r5,gp,-32736
  22fa34:	e13fff17 	ldw	r4,-4(fp)
  22fa38:	022feb00 	call	22feb0 <alt_find_dev>
  22fa3c:	e0bffe15 	stw	r2,-8(fp)

  return dev;
  22fa40:	e0bffe17 	ldw	r2,-8(fp)
}
  22fa44:	e037883a 	mov	sp,fp
  22fa48:	dfc00117 	ldw	ra,4(sp)
  22fa4c:	df000017 	ldw	fp,0(sp)
  22fa50:	dec00204 	addi	sp,sp,8
  22fa54:	f800283a 	ret

0022fa58 <alt_up_char_buffer_draw>:

int alt_up_char_buffer_draw(alt_up_char_buffer_dev *char_buffer, unsigned char ch, 
	unsigned int x, unsigned int y) {
  22fa58:	defffa04 	addi	sp,sp,-24
  22fa5c:	df000515 	stw	fp,20(sp)
  22fa60:	df000504 	addi	fp,sp,20
  22fa64:	e13ffc15 	stw	r4,-16(fp)
  22fa68:	2805883a 	mov	r2,r5
  22fa6c:	e1bffe15 	stw	r6,-8(fp)
  22fa70:	e1ffff15 	stw	r7,-4(fp)
  22fa74:	e0bffd05 	stb	r2,-12(fp)
	// boundary check
	if (x >= char_buffer->x_resolution || y >= char_buffer->y_resolution )
  22fa78:	e0bffc17 	ldw	r2,-16(fp)
  22fa7c:	10800c17 	ldw	r2,48(r2)
  22fa80:	e0fffe17 	ldw	r3,-8(fp)
  22fa84:	1880042e 	bgeu	r3,r2,22fa98 <alt_up_char_buffer_draw+0x40>
  22fa88:	e0bffc17 	ldw	r2,-16(fp)
  22fa8c:	10800d17 	ldw	r2,52(r2)
  22fa90:	e0ffff17 	ldw	r3,-4(fp)
  22fa94:	18800236 	bltu	r3,r2,22faa0 <alt_up_char_buffer_draw+0x48>
		return -1;
  22fa98:	00bfffc4 	movi	r2,-1
  22fa9c:	00001d06 	br	22fb14 <alt_up_char_buffer_draw+0xbc>
	
	unsigned int addr = 0;
  22faa0:	e03ffb15 	stw	zero,-20(fp)
	addr |= ((x & char_buffer->x_coord_mask) << char_buffer->x_coord_offset);
  22faa4:	e0bffc17 	ldw	r2,-16(fp)
  22faa8:	10c00f17 	ldw	r3,60(r2)
  22faac:	e0bffe17 	ldw	r2,-8(fp)
  22fab0:	1886703a 	and	r3,r3,r2
  22fab4:	e0bffc17 	ldw	r2,-16(fp)
  22fab8:	10800e17 	ldw	r2,56(r2)
  22fabc:	1884983a 	sll	r2,r3,r2
  22fac0:	e0fffb17 	ldw	r3,-20(fp)
  22fac4:	1884b03a 	or	r2,r3,r2
  22fac8:	e0bffb15 	stw	r2,-20(fp)
	addr |= ((y & char_buffer->y_coord_mask) << char_buffer->y_coord_offset);
  22facc:	e0bffc17 	ldw	r2,-16(fp)
  22fad0:	10c01117 	ldw	r3,68(r2)
  22fad4:	e0bfff17 	ldw	r2,-4(fp)
  22fad8:	1886703a 	and	r3,r3,r2
  22fadc:	e0bffc17 	ldw	r2,-16(fp)
  22fae0:	10801017 	ldw	r2,64(r2)
  22fae4:	1884983a 	sll	r2,r3,r2
  22fae8:	e0fffb17 	ldw	r3,-20(fp)
  22faec:	1884b03a 	or	r2,r3,r2
  22faf0:	e0bffb15 	stw	r2,-20(fp)
	IOWR_8DIRECT(char_buffer->buffer_base, addr, ch);
  22faf4:	e0bffc17 	ldw	r2,-16(fp)
  22faf8:	10c00b17 	ldw	r3,44(r2)
  22fafc:	e0bffb17 	ldw	r2,-20(fp)
  22fb00:	1885883a 	add	r2,r3,r2
  22fb04:	1007883a 	mov	r3,r2
  22fb08:	e0bffd03 	ldbu	r2,-12(fp)
  22fb0c:	18800025 	stbio	r2,0(r3)

	return 0;
  22fb10:	0005883a 	mov	r2,zero
}
  22fb14:	e037883a 	mov	sp,fp
  22fb18:	df000017 	ldw	fp,0(sp)
  22fb1c:	dec00104 	addi	sp,sp,4
  22fb20:	f800283a 	ret

0022fb24 <alt_up_char_buffer_string>:

int alt_up_char_buffer_string(alt_up_char_buffer_dev *char_buffer, const char *ptr, 
	unsigned int x, unsigned int y) {
  22fb24:	defffa04 	addi	sp,sp,-24
  22fb28:	df000515 	stw	fp,20(sp)
  22fb2c:	df000504 	addi	fp,sp,20
  22fb30:	e13ffc15 	stw	r4,-16(fp)
  22fb34:	e17ffd15 	stw	r5,-12(fp)
  22fb38:	e1bffe15 	stw	r6,-8(fp)
  22fb3c:	e1ffff15 	stw	r7,-4(fp)
	// boundary check
	if (x >= char_buffer->x_resolution || y >= char_buffer->y_resolution )
  22fb40:	e0bffc17 	ldw	r2,-16(fp)
  22fb44:	10800c17 	ldw	r2,48(r2)
  22fb48:	e0fffe17 	ldw	r3,-8(fp)
  22fb4c:	1880042e 	bgeu	r3,r2,22fb60 <alt_up_char_buffer_string+0x3c>
  22fb50:	e0bffc17 	ldw	r2,-16(fp)
  22fb54:	10800d17 	ldw	r2,52(r2)
  22fb58:	e0ffff17 	ldw	r3,-4(fp)
  22fb5c:	18800236 	bltu	r3,r2,22fb68 <alt_up_char_buffer_string+0x44>
		return -1;
  22fb60:	00bfffc4 	movi	r2,-1
  22fb64:	00002a06 	br	22fc10 <alt_up_char_buffer_string+0xec>
	
	unsigned int offset = 0;
  22fb68:	e03ffb15 	stw	zero,-20(fp)
	offset = (y << char_buffer->y_coord_offset) + x;
  22fb6c:	e0bffc17 	ldw	r2,-16(fp)
  22fb70:	10801017 	ldw	r2,64(r2)
  22fb74:	e0ffff17 	ldw	r3,-4(fp)
  22fb78:	1886983a 	sll	r3,r3,r2
  22fb7c:	e0bffe17 	ldw	r2,-8(fp)
  22fb80:	1885883a 	add	r2,r3,r2
  22fb84:	e0bffb15 	stw	r2,-20(fp)

	while ( *ptr )
  22fb88:	00001a06 	br	22fbf4 <alt_up_char_buffer_string+0xd0>
	{
		IOWR_8DIRECT(char_buffer->buffer_base, offset, *ptr);
  22fb8c:	e0bffc17 	ldw	r2,-16(fp)
  22fb90:	10c00b17 	ldw	r3,44(r2)
  22fb94:	e0bffb17 	ldw	r2,-20(fp)
  22fb98:	1885883a 	add	r2,r3,r2
  22fb9c:	1007883a 	mov	r3,r2
  22fba0:	e0bffd17 	ldw	r2,-12(fp)
  22fba4:	10800003 	ldbu	r2,0(r2)
  22fba8:	10803fcc 	andi	r2,r2,255
  22fbac:	1080201c 	xori	r2,r2,128
  22fbb0:	10bfe004 	addi	r2,r2,-128
  22fbb4:	18800025 	stbio	r2,0(r3)
		++ptr;
  22fbb8:	e0bffd17 	ldw	r2,-12(fp)
  22fbbc:	10800044 	addi	r2,r2,1
  22fbc0:	e0bffd15 	stw	r2,-12(fp)
		if (++x >= char_buffer->x_resolution)
  22fbc4:	e0bffe17 	ldw	r2,-8(fp)
  22fbc8:	10800044 	addi	r2,r2,1
  22fbcc:	e0bffe15 	stw	r2,-8(fp)
  22fbd0:	e0bffc17 	ldw	r2,-16(fp)
  22fbd4:	10800c17 	ldw	r2,48(r2)
  22fbd8:	e0fffe17 	ldw	r3,-8(fp)
  22fbdc:	18800236 	bltu	r3,r2,22fbe8 <alt_up_char_buffer_string+0xc4>
			return -1;
  22fbe0:	00bfffc4 	movi	r2,-1
  22fbe4:	00000a06 	br	22fc10 <alt_up_char_buffer_string+0xec>
		++offset;
  22fbe8:	e0bffb17 	ldw	r2,-20(fp)
  22fbec:	10800044 	addi	r2,r2,1
  22fbf0:	e0bffb15 	stw	r2,-20(fp)
		return -1;
	
	unsigned int offset = 0;
	offset = (y << char_buffer->y_coord_offset) + x;

	while ( *ptr )
  22fbf4:	e0bffd17 	ldw	r2,-12(fp)
  22fbf8:	10800003 	ldbu	r2,0(r2)
  22fbfc:	10803fcc 	andi	r2,r2,255
  22fc00:	1080201c 	xori	r2,r2,128
  22fc04:	10bfe004 	addi	r2,r2,-128
  22fc08:	103fe01e 	bne	r2,zero,22fb8c <_gp+0xffff5004>
		++ptr;
		if (++x >= char_buffer->x_resolution)
			return -1;
		++offset;
	}
	return 0;
  22fc0c:	0005883a 	mov	r2,zero
}
  22fc10:	e037883a 	mov	sp,fp
  22fc14:	df000017 	ldw	fp,0(sp)
  22fc18:	dec00104 	addi	sp,sp,4
  22fc1c:	f800283a 	ret

0022fc20 <alt_up_char_buffer_clear>:

int alt_up_char_buffer_clear(alt_up_char_buffer_dev *char_buffer) {
  22fc20:	defffe04 	addi	sp,sp,-8
  22fc24:	df000115 	stw	fp,4(sp)
  22fc28:	df000104 	addi	fp,sp,4
  22fc2c:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHAR_BUFFER_CLR_SCRN(char_buffer->ctrl_reg_base, 1);
  22fc30:	e0bfff17 	ldw	r2,-4(fp)
  22fc34:	10800a17 	ldw	r2,40(r2)
  22fc38:	10800084 	addi	r2,r2,2
  22fc3c:	1007883a 	mov	r3,r2
  22fc40:	00800044 	movi	r2,1
  22fc44:	18800025 	stbio	r2,0(r3)
	while ((IORD_ALT_UP_CHAR_BUFFER_CLR_SCRN(char_buffer->ctrl_reg_base) & ALT_UP_CHAR_BUFFER_CLR_SCRN_MSK) >> ALT_UP_CHAR_BUFFER_CLR_SCRN_OFST);
  22fc48:	0001883a 	nop
  22fc4c:	e0bfff17 	ldw	r2,-4(fp)
  22fc50:	10800a17 	ldw	r2,40(r2)
  22fc54:	10800084 	addi	r2,r2,2
  22fc58:	10800023 	ldbuio	r2,0(r2)
  22fc5c:	10803fcc 	andi	r2,r2,255
  22fc60:	1080004c 	andi	r2,r2,1
  22fc64:	103ff91e 	bne	r2,zero,22fc4c <_gp+0xffff50c4>
	return 0;
  22fc68:	0005883a 	mov	r2,zero
}
  22fc6c:	e037883a 	mov	sp,fp
  22fc70:	df000017 	ldw	fp,0(sp)
  22fc74:	dec00104 	addi	sp,sp,4
  22fc78:	f800283a 	ret

0022fc7c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  22fc7c:	defff504 	addi	sp,sp,-44
  22fc80:	df000a15 	stw	fp,40(sp)
  22fc84:	df000a04 	addi	fp,sp,40
  22fc88:	e13ffc15 	stw	r4,-16(fp)
  22fc8c:	e17ffd15 	stw	r5,-12(fp)
  22fc90:	e1bffe15 	stw	r6,-8(fp)
  22fc94:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  22fc98:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  22fc9c:	d0a72b17 	ldw	r2,-25428(gp)
  
  if (alt_ticks_per_second ())
  22fca0:	10003c26 	beq	r2,zero,22fd94 <alt_alarm_start+0x118>
  {
    if (alarm)
  22fca4:	e0bffc17 	ldw	r2,-16(fp)
  22fca8:	10003826 	beq	r2,zero,22fd8c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  22fcac:	e0bffc17 	ldw	r2,-16(fp)
  22fcb0:	e0fffe17 	ldw	r3,-8(fp)
  22fcb4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  22fcb8:	e0bffc17 	ldw	r2,-16(fp)
  22fcbc:	e0ffff17 	ldw	r3,-4(fp)
  22fcc0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  22fcc4:	0005303a 	rdctl	r2,status
  22fcc8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  22fccc:	e0fff917 	ldw	r3,-28(fp)
  22fcd0:	00bfff84 	movi	r2,-2
  22fcd4:	1884703a 	and	r2,r3,r2
  22fcd8:	1001703a 	wrctl	status,r2
  
  return context;
  22fcdc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  22fce0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  22fce4:	d0a72c17 	ldw	r2,-25424(gp)
      
      current_nticks = alt_nticks();
  22fce8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  22fcec:	e0fffd17 	ldw	r3,-12(fp)
  22fcf0:	e0bff617 	ldw	r2,-40(fp)
  22fcf4:	1885883a 	add	r2,r3,r2
  22fcf8:	10c00044 	addi	r3,r2,1
  22fcfc:	e0bffc17 	ldw	r2,-16(fp)
  22fd00:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  22fd04:	e0bffc17 	ldw	r2,-16(fp)
  22fd08:	10c00217 	ldw	r3,8(r2)
  22fd0c:	e0bff617 	ldw	r2,-40(fp)
  22fd10:	1880042e 	bgeu	r3,r2,22fd24 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  22fd14:	e0bffc17 	ldw	r2,-16(fp)
  22fd18:	00c00044 	movi	r3,1
  22fd1c:	10c00405 	stb	r3,16(r2)
  22fd20:	00000206 	br	22fd2c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  22fd24:	e0bffc17 	ldw	r2,-16(fp)
  22fd28:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  22fd2c:	e0bffc17 	ldw	r2,-16(fp)
  22fd30:	d0e02004 	addi	r3,gp,-32640
  22fd34:	e0fffa15 	stw	r3,-24(fp)
  22fd38:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  22fd3c:	e0bffb17 	ldw	r2,-20(fp)
  22fd40:	e0fffa17 	ldw	r3,-24(fp)
  22fd44:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  22fd48:	e0bffa17 	ldw	r2,-24(fp)
  22fd4c:	10c00017 	ldw	r3,0(r2)
  22fd50:	e0bffb17 	ldw	r2,-20(fp)
  22fd54:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  22fd58:	e0bffa17 	ldw	r2,-24(fp)
  22fd5c:	10800017 	ldw	r2,0(r2)
  22fd60:	e0fffb17 	ldw	r3,-20(fp)
  22fd64:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  22fd68:	e0bffa17 	ldw	r2,-24(fp)
  22fd6c:	e0fffb17 	ldw	r3,-20(fp)
  22fd70:	10c00015 	stw	r3,0(r2)
  22fd74:	e0bff817 	ldw	r2,-32(fp)
  22fd78:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  22fd7c:	e0bff717 	ldw	r2,-36(fp)
  22fd80:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  22fd84:	0005883a 	mov	r2,zero
  22fd88:	00000306 	br	22fd98 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  22fd8c:	00bffa84 	movi	r2,-22
  22fd90:	00000106 	br	22fd98 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  22fd94:	00bfde84 	movi	r2,-134
  }
}
  22fd98:	e037883a 	mov	sp,fp
  22fd9c:	df000017 	ldw	fp,0(sp)
  22fda0:	dec00104 	addi	sp,sp,4
  22fda4:	f800283a 	ret

0022fda8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  22fda8:	defffe04 	addi	sp,sp,-8
  22fdac:	df000115 	stw	fp,4(sp)
  22fdb0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  22fdb4:	e03fff15 	stw	zero,-4(fp)
  22fdb8:	00000506 	br	22fdd0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  22fdbc:	e0bfff17 	ldw	r2,-4(fp)
  22fdc0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  22fdc4:	e0bfff17 	ldw	r2,-4(fp)
  22fdc8:	10800804 	addi	r2,r2,32
  22fdcc:	e0bfff15 	stw	r2,-4(fp)
  22fdd0:	e0bfff17 	ldw	r2,-4(fp)
  22fdd4:	10820030 	cmpltui	r2,r2,2048
  22fdd8:	103ff81e 	bne	r2,zero,22fdbc <_gp+0xffff5234>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  22fddc:	0001883a 	nop
  22fde0:	e037883a 	mov	sp,fp
  22fde4:	df000017 	ldw	fp,0(sp)
  22fde8:	dec00104 	addi	sp,sp,4
  22fdec:	f800283a 	ret

0022fdf0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  22fdf0:	defffd04 	addi	sp,sp,-12
  22fdf4:	dfc00215 	stw	ra,8(sp)
  22fdf8:	df000115 	stw	fp,4(sp)
  22fdfc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  22fe00:	008008f4 	movhi	r2,35
  22fe04:	1082d804 	addi	r2,r2,2912
  22fe08:	e0bfff15 	stw	r2,-4(fp)
  22fe0c:	00000606 	br	22fe28 <_do_ctors+0x38>
        (*ctor) (); 
  22fe10:	e0bfff17 	ldw	r2,-4(fp)
  22fe14:	10800017 	ldw	r2,0(r2)
  22fe18:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  22fe1c:	e0bfff17 	ldw	r2,-4(fp)
  22fe20:	10bfff04 	addi	r2,r2,-4
  22fe24:	e0bfff15 	stw	r2,-4(fp)
  22fe28:	e0ffff17 	ldw	r3,-4(fp)
  22fe2c:	008008f4 	movhi	r2,35
  22fe30:	1082d904 	addi	r2,r2,2916
  22fe34:	18bff62e 	bgeu	r3,r2,22fe10 <_gp+0xffff5288>
        (*ctor) (); 
}
  22fe38:	0001883a 	nop
  22fe3c:	e037883a 	mov	sp,fp
  22fe40:	dfc00117 	ldw	ra,4(sp)
  22fe44:	df000017 	ldw	fp,0(sp)
  22fe48:	dec00204 	addi	sp,sp,8
  22fe4c:	f800283a 	ret

0022fe50 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  22fe50:	defffd04 	addi	sp,sp,-12
  22fe54:	dfc00215 	stw	ra,8(sp)
  22fe58:	df000115 	stw	fp,4(sp)
  22fe5c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  22fe60:	008008f4 	movhi	r2,35
  22fe64:	1082d804 	addi	r2,r2,2912
  22fe68:	e0bfff15 	stw	r2,-4(fp)
  22fe6c:	00000606 	br	22fe88 <_do_dtors+0x38>
        (*dtor) (); 
  22fe70:	e0bfff17 	ldw	r2,-4(fp)
  22fe74:	10800017 	ldw	r2,0(r2)
  22fe78:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  22fe7c:	e0bfff17 	ldw	r2,-4(fp)
  22fe80:	10bfff04 	addi	r2,r2,-4
  22fe84:	e0bfff15 	stw	r2,-4(fp)
  22fe88:	e0ffff17 	ldw	r3,-4(fp)
  22fe8c:	008008f4 	movhi	r2,35
  22fe90:	1082d904 	addi	r2,r2,2916
  22fe94:	18bff62e 	bgeu	r3,r2,22fe70 <_gp+0xffff52e8>
        (*dtor) (); 
}
  22fe98:	0001883a 	nop
  22fe9c:	e037883a 	mov	sp,fp
  22fea0:	dfc00117 	ldw	ra,4(sp)
  22fea4:	df000017 	ldw	fp,0(sp)
  22fea8:	dec00204 	addi	sp,sp,8
  22feac:	f800283a 	ret

0022feb0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  22feb0:	defffa04 	addi	sp,sp,-24
  22feb4:	dfc00515 	stw	ra,20(sp)
  22feb8:	df000415 	stw	fp,16(sp)
  22febc:	df000404 	addi	fp,sp,16
  22fec0:	e13ffe15 	stw	r4,-8(fp)
  22fec4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  22fec8:	e0bfff17 	ldw	r2,-4(fp)
  22fecc:	10800017 	ldw	r2,0(r2)
  22fed0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  22fed4:	e13ffe17 	ldw	r4,-8(fp)
  22fed8:	0222c9c0 	call	222c9c <strlen>
  22fedc:	10800044 	addi	r2,r2,1
  22fee0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  22fee4:	00000d06 	br	22ff1c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  22fee8:	e0bffc17 	ldw	r2,-16(fp)
  22feec:	10800217 	ldw	r2,8(r2)
  22fef0:	e0fffd17 	ldw	r3,-12(fp)
  22fef4:	180d883a 	mov	r6,r3
  22fef8:	e17ffe17 	ldw	r5,-8(fp)
  22fefc:	1009883a 	mov	r4,r2
  22ff00:	023081c0 	call	23081c <memcmp>
  22ff04:	1000021e 	bne	r2,zero,22ff10 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  22ff08:	e0bffc17 	ldw	r2,-16(fp)
  22ff0c:	00000706 	br	22ff2c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  22ff10:	e0bffc17 	ldw	r2,-16(fp)
  22ff14:	10800017 	ldw	r2,0(r2)
  22ff18:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  22ff1c:	e0fffc17 	ldw	r3,-16(fp)
  22ff20:	e0bfff17 	ldw	r2,-4(fp)
  22ff24:	18bff01e 	bne	r3,r2,22fee8 <_gp+0xffff5360>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  22ff28:	0005883a 	mov	r2,zero
}
  22ff2c:	e037883a 	mov	sp,fp
  22ff30:	dfc00117 	ldw	ra,4(sp)
  22ff34:	df000017 	ldw	fp,0(sp)
  22ff38:	dec00204 	addi	sp,sp,8
  22ff3c:	f800283a 	ret

0022ff40 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  22ff40:	defffb04 	addi	sp,sp,-20
  22ff44:	dfc00415 	stw	ra,16(sp)
  22ff48:	df000315 	stw	fp,12(sp)
  22ff4c:	df000304 	addi	fp,sp,12
  22ff50:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  22ff54:	d0a00617 	ldw	r2,-32744(gp)
  22ff58:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  22ff5c:	00003106 	br	230024 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  22ff60:	e0bffd17 	ldw	r2,-12(fp)
  22ff64:	10800217 	ldw	r2,8(r2)
  22ff68:	1009883a 	mov	r4,r2
  22ff6c:	0222c9c0 	call	222c9c <strlen>
  22ff70:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  22ff74:	e0bffd17 	ldw	r2,-12(fp)
  22ff78:	10c00217 	ldw	r3,8(r2)
  22ff7c:	e0bffe17 	ldw	r2,-8(fp)
  22ff80:	10bfffc4 	addi	r2,r2,-1
  22ff84:	1885883a 	add	r2,r3,r2
  22ff88:	10800003 	ldbu	r2,0(r2)
  22ff8c:	10803fcc 	andi	r2,r2,255
  22ff90:	1080201c 	xori	r2,r2,128
  22ff94:	10bfe004 	addi	r2,r2,-128
  22ff98:	10800bd8 	cmpnei	r2,r2,47
  22ff9c:	1000031e 	bne	r2,zero,22ffac <alt_find_file+0x6c>
    {
      len -= 1;
  22ffa0:	e0bffe17 	ldw	r2,-8(fp)
  22ffa4:	10bfffc4 	addi	r2,r2,-1
  22ffa8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  22ffac:	e0bffe17 	ldw	r2,-8(fp)
  22ffb0:	e0ffff17 	ldw	r3,-4(fp)
  22ffb4:	1885883a 	add	r2,r3,r2
  22ffb8:	10800003 	ldbu	r2,0(r2)
  22ffbc:	10803fcc 	andi	r2,r2,255
  22ffc0:	1080201c 	xori	r2,r2,128
  22ffc4:	10bfe004 	addi	r2,r2,-128
  22ffc8:	10800be0 	cmpeqi	r2,r2,47
  22ffcc:	1000081e 	bne	r2,zero,22fff0 <alt_find_file+0xb0>
  22ffd0:	e0bffe17 	ldw	r2,-8(fp)
  22ffd4:	e0ffff17 	ldw	r3,-4(fp)
  22ffd8:	1885883a 	add	r2,r3,r2
  22ffdc:	10800003 	ldbu	r2,0(r2)
  22ffe0:	10803fcc 	andi	r2,r2,255
  22ffe4:	1080201c 	xori	r2,r2,128
  22ffe8:	10bfe004 	addi	r2,r2,-128
  22ffec:	10000a1e 	bne	r2,zero,230018 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  22fff0:	e0bffd17 	ldw	r2,-12(fp)
  22fff4:	10800217 	ldw	r2,8(r2)
  22fff8:	e0fffe17 	ldw	r3,-8(fp)
  22fffc:	180d883a 	mov	r6,r3
  230000:	e17fff17 	ldw	r5,-4(fp)
  230004:	1009883a 	mov	r4,r2
  230008:	023081c0 	call	23081c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  23000c:	1000021e 	bne	r2,zero,230018 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  230010:	e0bffd17 	ldw	r2,-12(fp)
  230014:	00000706 	br	230034 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  230018:	e0bffd17 	ldw	r2,-12(fp)
  23001c:	10800017 	ldw	r2,0(r2)
  230020:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  230024:	e0fffd17 	ldw	r3,-12(fp)
  230028:	d0a00604 	addi	r2,gp,-32744
  23002c:	18bfcc1e 	bne	r3,r2,22ff60 <_gp+0xffff53d8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  230030:	0005883a 	mov	r2,zero
}
  230034:	e037883a 	mov	sp,fp
  230038:	dfc00117 	ldw	ra,4(sp)
  23003c:	df000017 	ldw	fp,0(sp)
  230040:	dec00204 	addi	sp,sp,8
  230044:	f800283a 	ret

00230048 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  230048:	defffc04 	addi	sp,sp,-16
  23004c:	df000315 	stw	fp,12(sp)
  230050:	df000304 	addi	fp,sp,12
  230054:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  230058:	00bffa04 	movi	r2,-24
  23005c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  230060:	e03ffd15 	stw	zero,-12(fp)
  230064:	00001906 	br	2300cc <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  230068:	008008f4 	movhi	r2,35
  23006c:	108a8204 	addi	r2,r2,10760
  230070:	e0fffd17 	ldw	r3,-12(fp)
  230074:	18c00324 	muli	r3,r3,12
  230078:	10c5883a 	add	r2,r2,r3
  23007c:	10800017 	ldw	r2,0(r2)
  230080:	10000f1e 	bne	r2,zero,2300c0 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  230084:	008008f4 	movhi	r2,35
  230088:	108a8204 	addi	r2,r2,10760
  23008c:	e0fffd17 	ldw	r3,-12(fp)
  230090:	18c00324 	muli	r3,r3,12
  230094:	10c5883a 	add	r2,r2,r3
  230098:	e0ffff17 	ldw	r3,-4(fp)
  23009c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  2300a0:	d0e00a17 	ldw	r3,-32728(gp)
  2300a4:	e0bffd17 	ldw	r2,-12(fp)
  2300a8:	1880020e 	bge	r3,r2,2300b4 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  2300ac:	e0bffd17 	ldw	r2,-12(fp)
  2300b0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  2300b4:	e0bffd17 	ldw	r2,-12(fp)
  2300b8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  2300bc:	00000606 	br	2300d8 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  2300c0:	e0bffd17 	ldw	r2,-12(fp)
  2300c4:	10800044 	addi	r2,r2,1
  2300c8:	e0bffd15 	stw	r2,-12(fp)
  2300cc:	e0bffd17 	ldw	r2,-12(fp)
  2300d0:	10800810 	cmplti	r2,r2,32
  2300d4:	103fe41e 	bne	r2,zero,230068 <_gp+0xffff54e0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  2300d8:	e0bffe17 	ldw	r2,-8(fp)
}
  2300dc:	e037883a 	mov	sp,fp
  2300e0:	df000017 	ldw	fp,0(sp)
  2300e4:	dec00104 	addi	sp,sp,4
  2300e8:	f800283a 	ret

002300ec <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  2300ec:	defffe04 	addi	sp,sp,-8
  2300f0:	dfc00115 	stw	ra,4(sp)
  2300f4:	df000015 	stw	fp,0(sp)
  2300f8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  2300fc:	01420004 	movi	r5,2048
  230100:	0009883a 	mov	r4,zero
  230104:	02306a40 	call	2306a4 <alt_icache_flush>
#endif
}
  230108:	0001883a 	nop
  23010c:	e037883a 	mov	sp,fp
  230110:	dfc00117 	ldw	ra,4(sp)
  230114:	df000017 	ldw	fp,0(sp)
  230118:	dec00204 	addi	sp,sp,8
  23011c:	f800283a 	ret

00230120 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  230120:	defff904 	addi	sp,sp,-28
  230124:	dfc00615 	stw	ra,24(sp)
  230128:	df000515 	stw	fp,20(sp)
  23012c:	df000504 	addi	fp,sp,20
  230130:	e13ffc15 	stw	r4,-16(fp)
  230134:	e17ffd15 	stw	r5,-12(fp)
  230138:	e1bffe15 	stw	r6,-8(fp)
  23013c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  230140:	e0800217 	ldw	r2,8(fp)
  230144:	d8800015 	stw	r2,0(sp)
  230148:	e1ffff17 	ldw	r7,-4(fp)
  23014c:	e1bffe17 	ldw	r6,-8(fp)
  230150:	e17ffd17 	ldw	r5,-12(fp)
  230154:	e13ffc17 	ldw	r4,-16(fp)
  230158:	02302d00 	call	2302d0 <alt_iic_isr_register>
}  
  23015c:	e037883a 	mov	sp,fp
  230160:	dfc00117 	ldw	ra,4(sp)
  230164:	df000017 	ldw	fp,0(sp)
  230168:	dec00204 	addi	sp,sp,8
  23016c:	f800283a 	ret

00230170 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  230170:	defff904 	addi	sp,sp,-28
  230174:	df000615 	stw	fp,24(sp)
  230178:	df000604 	addi	fp,sp,24
  23017c:	e13ffe15 	stw	r4,-8(fp)
  230180:	e17fff15 	stw	r5,-4(fp)
  230184:	e0bfff17 	ldw	r2,-4(fp)
  230188:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  23018c:	0005303a 	rdctl	r2,status
  230190:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  230194:	e0fffb17 	ldw	r3,-20(fp)
  230198:	00bfff84 	movi	r2,-2
  23019c:	1884703a 	and	r2,r3,r2
  2301a0:	1001703a 	wrctl	status,r2
  
  return context;
  2301a4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  2301a8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  2301ac:	00c00044 	movi	r3,1
  2301b0:	e0bffa17 	ldw	r2,-24(fp)
  2301b4:	1884983a 	sll	r2,r3,r2
  2301b8:	1007883a 	mov	r3,r2
  2301bc:	d0a72a17 	ldw	r2,-25432(gp)
  2301c0:	1884b03a 	or	r2,r3,r2
  2301c4:	d0a72a15 	stw	r2,-25432(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  2301c8:	d0a72a17 	ldw	r2,-25432(gp)
  2301cc:	100170fa 	wrctl	ienable,r2
  2301d0:	e0bffc17 	ldw	r2,-16(fp)
  2301d4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  2301d8:	e0bffd17 	ldw	r2,-12(fp)
  2301dc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  2301e0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  2301e4:	0001883a 	nop
}
  2301e8:	e037883a 	mov	sp,fp
  2301ec:	df000017 	ldw	fp,0(sp)
  2301f0:	dec00104 	addi	sp,sp,4
  2301f4:	f800283a 	ret

002301f8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  2301f8:	defff904 	addi	sp,sp,-28
  2301fc:	df000615 	stw	fp,24(sp)
  230200:	df000604 	addi	fp,sp,24
  230204:	e13ffe15 	stw	r4,-8(fp)
  230208:	e17fff15 	stw	r5,-4(fp)
  23020c:	e0bfff17 	ldw	r2,-4(fp)
  230210:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  230214:	0005303a 	rdctl	r2,status
  230218:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  23021c:	e0fffb17 	ldw	r3,-20(fp)
  230220:	00bfff84 	movi	r2,-2
  230224:	1884703a 	and	r2,r3,r2
  230228:	1001703a 	wrctl	status,r2
  
  return context;
  23022c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  230230:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  230234:	00c00044 	movi	r3,1
  230238:	e0bffa17 	ldw	r2,-24(fp)
  23023c:	1884983a 	sll	r2,r3,r2
  230240:	0084303a 	nor	r2,zero,r2
  230244:	1007883a 	mov	r3,r2
  230248:	d0a72a17 	ldw	r2,-25432(gp)
  23024c:	1884703a 	and	r2,r3,r2
  230250:	d0a72a15 	stw	r2,-25432(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  230254:	d0a72a17 	ldw	r2,-25432(gp)
  230258:	100170fa 	wrctl	ienable,r2
  23025c:	e0bffc17 	ldw	r2,-16(fp)
  230260:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  230264:	e0bffd17 	ldw	r2,-12(fp)
  230268:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  23026c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  230270:	0001883a 	nop
}
  230274:	e037883a 	mov	sp,fp
  230278:	df000017 	ldw	fp,0(sp)
  23027c:	dec00104 	addi	sp,sp,4
  230280:	f800283a 	ret

00230284 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  230284:	defffc04 	addi	sp,sp,-16
  230288:	df000315 	stw	fp,12(sp)
  23028c:	df000304 	addi	fp,sp,12
  230290:	e13ffe15 	stw	r4,-8(fp)
  230294:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  230298:	000530fa 	rdctl	r2,ienable
  23029c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  2302a0:	00c00044 	movi	r3,1
  2302a4:	e0bfff17 	ldw	r2,-4(fp)
  2302a8:	1884983a 	sll	r2,r3,r2
  2302ac:	1007883a 	mov	r3,r2
  2302b0:	e0bffd17 	ldw	r2,-12(fp)
  2302b4:	1884703a 	and	r2,r3,r2
  2302b8:	1004c03a 	cmpne	r2,r2,zero
  2302bc:	10803fcc 	andi	r2,r2,255
}
  2302c0:	e037883a 	mov	sp,fp
  2302c4:	df000017 	ldw	fp,0(sp)
  2302c8:	dec00104 	addi	sp,sp,4
  2302cc:	f800283a 	ret

002302d0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  2302d0:	defff504 	addi	sp,sp,-44
  2302d4:	dfc00a15 	stw	ra,40(sp)
  2302d8:	df000915 	stw	fp,36(sp)
  2302dc:	df000904 	addi	fp,sp,36
  2302e0:	e13ffc15 	stw	r4,-16(fp)
  2302e4:	e17ffd15 	stw	r5,-12(fp)
  2302e8:	e1bffe15 	stw	r6,-8(fp)
  2302ec:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  2302f0:	00bffa84 	movi	r2,-22
  2302f4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  2302f8:	e0bffd17 	ldw	r2,-12(fp)
  2302fc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  230300:	e0bff817 	ldw	r2,-32(fp)
  230304:	10800808 	cmpgei	r2,r2,32
  230308:	1000271e 	bne	r2,zero,2303a8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  23030c:	0005303a 	rdctl	r2,status
  230310:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  230314:	e0fffb17 	ldw	r3,-20(fp)
  230318:	00bfff84 	movi	r2,-2
  23031c:	1884703a 	and	r2,r3,r2
  230320:	1001703a 	wrctl	status,r2
  
  return context;
  230324:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  230328:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  23032c:	008008f4 	movhi	r2,35
  230330:	10921a04 	addi	r2,r2,18536
  230334:	e0fff817 	ldw	r3,-32(fp)
  230338:	180690fa 	slli	r3,r3,3
  23033c:	10c5883a 	add	r2,r2,r3
  230340:	e0fffe17 	ldw	r3,-8(fp)
  230344:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  230348:	008008f4 	movhi	r2,35
  23034c:	10921a04 	addi	r2,r2,18536
  230350:	e0fff817 	ldw	r3,-32(fp)
  230354:	180690fa 	slli	r3,r3,3
  230358:	10c5883a 	add	r2,r2,r3
  23035c:	10800104 	addi	r2,r2,4
  230360:	e0ffff17 	ldw	r3,-4(fp)
  230364:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  230368:	e0bffe17 	ldw	r2,-8(fp)
  23036c:	10000526 	beq	r2,zero,230384 <alt_iic_isr_register+0xb4>
  230370:	e0bff817 	ldw	r2,-32(fp)
  230374:	100b883a 	mov	r5,r2
  230378:	e13ffc17 	ldw	r4,-16(fp)
  23037c:	02301700 	call	230170 <alt_ic_irq_enable>
  230380:	00000406 	br	230394 <alt_iic_isr_register+0xc4>
  230384:	e0bff817 	ldw	r2,-32(fp)
  230388:	100b883a 	mov	r5,r2
  23038c:	e13ffc17 	ldw	r4,-16(fp)
  230390:	02301f80 	call	2301f8 <alt_ic_irq_disable>
  230394:	e0bff715 	stw	r2,-36(fp)
  230398:	e0bffa17 	ldw	r2,-24(fp)
  23039c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  2303a0:	e0bff917 	ldw	r2,-28(fp)
  2303a4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  2303a8:	e0bff717 	ldw	r2,-36(fp)
}
  2303ac:	e037883a 	mov	sp,fp
  2303b0:	dfc00117 	ldw	ra,4(sp)
  2303b4:	df000017 	ldw	fp,0(sp)
  2303b8:	dec00204 	addi	sp,sp,8
  2303bc:	f800283a 	ret

002303c0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  2303c0:	defff904 	addi	sp,sp,-28
  2303c4:	dfc00615 	stw	ra,24(sp)
  2303c8:	df000515 	stw	fp,20(sp)
  2303cc:	df000504 	addi	fp,sp,20
  2303d0:	e13ffc15 	stw	r4,-16(fp)
  2303d4:	e17ffd15 	stw	r5,-12(fp)
  2303d8:	e1bffe15 	stw	r6,-8(fp)
  2303dc:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  2303e0:	e1bfff17 	ldw	r6,-4(fp)
  2303e4:	e17ffe17 	ldw	r5,-8(fp)
  2303e8:	e13ffd17 	ldw	r4,-12(fp)
  2303ec:	022e4c40 	call	22e4c4 <open>
  2303f0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  2303f4:	e0bffb17 	ldw	r2,-20(fp)
  2303f8:	10001c16 	blt	r2,zero,23046c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  2303fc:	008008f4 	movhi	r2,35
  230400:	108a8204 	addi	r2,r2,10760
  230404:	e0fffb17 	ldw	r3,-20(fp)
  230408:	18c00324 	muli	r3,r3,12
  23040c:	10c5883a 	add	r2,r2,r3
  230410:	10c00017 	ldw	r3,0(r2)
  230414:	e0bffc17 	ldw	r2,-16(fp)
  230418:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  23041c:	008008f4 	movhi	r2,35
  230420:	108a8204 	addi	r2,r2,10760
  230424:	e0fffb17 	ldw	r3,-20(fp)
  230428:	18c00324 	muli	r3,r3,12
  23042c:	10c5883a 	add	r2,r2,r3
  230430:	10800104 	addi	r2,r2,4
  230434:	10c00017 	ldw	r3,0(r2)
  230438:	e0bffc17 	ldw	r2,-16(fp)
  23043c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  230440:	008008f4 	movhi	r2,35
  230444:	108a8204 	addi	r2,r2,10760
  230448:	e0fffb17 	ldw	r3,-20(fp)
  23044c:	18c00324 	muli	r3,r3,12
  230450:	10c5883a 	add	r2,r2,r3
  230454:	10800204 	addi	r2,r2,8
  230458:	10c00017 	ldw	r3,0(r2)
  23045c:	e0bffc17 	ldw	r2,-16(fp)
  230460:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  230464:	e13ffb17 	ldw	r4,-20(fp)
  230468:	022e7500 	call	22e750 <alt_release_fd>
  }
} 
  23046c:	0001883a 	nop
  230470:	e037883a 	mov	sp,fp
  230474:	dfc00117 	ldw	ra,4(sp)
  230478:	df000017 	ldw	fp,0(sp)
  23047c:	dec00204 	addi	sp,sp,8
  230480:	f800283a 	ret

00230484 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  230484:	defffb04 	addi	sp,sp,-20
  230488:	dfc00415 	stw	ra,16(sp)
  23048c:	df000315 	stw	fp,12(sp)
  230490:	df000304 	addi	fp,sp,12
  230494:	e13ffd15 	stw	r4,-12(fp)
  230498:	e17ffe15 	stw	r5,-8(fp)
  23049c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  2304a0:	01c07fc4 	movi	r7,511
  2304a4:	01800044 	movi	r6,1
  2304a8:	e17ffd17 	ldw	r5,-12(fp)
  2304ac:	010008f4 	movhi	r4,35
  2304b0:	210a8504 	addi	r4,r4,10772
  2304b4:	02303c00 	call	2303c0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  2304b8:	01c07fc4 	movi	r7,511
  2304bc:	000d883a 	mov	r6,zero
  2304c0:	e17ffe17 	ldw	r5,-8(fp)
  2304c4:	010008f4 	movhi	r4,35
  2304c8:	210a8204 	addi	r4,r4,10760
  2304cc:	02303c00 	call	2303c0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  2304d0:	01c07fc4 	movi	r7,511
  2304d4:	01800044 	movi	r6,1
  2304d8:	e17fff17 	ldw	r5,-4(fp)
  2304dc:	010008f4 	movhi	r4,35
  2304e0:	210a8804 	addi	r4,r4,10784
  2304e4:	02303c00 	call	2303c0 <alt_open_fd>
}  
  2304e8:	0001883a 	nop
  2304ec:	e037883a 	mov	sp,fp
  2304f0:	dfc00117 	ldw	ra,4(sp)
  2304f4:	df000017 	ldw	fp,0(sp)
  2304f8:	dec00204 	addi	sp,sp,8
  2304fc:	f800283a 	ret

00230500 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  230500:	defffa04 	addi	sp,sp,-24
  230504:	df000515 	stw	fp,20(sp)
  230508:	df000504 	addi	fp,sp,20
  23050c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  230510:	0005303a 	rdctl	r2,status
  230514:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  230518:	e0fffc17 	ldw	r3,-16(fp)
  23051c:	00bfff84 	movi	r2,-2
  230520:	1884703a 	and	r2,r3,r2
  230524:	1001703a 	wrctl	status,r2
  
  return context;
  230528:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  23052c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  230530:	e0bfff17 	ldw	r2,-4(fp)
  230534:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  230538:	e0bffd17 	ldw	r2,-12(fp)
  23053c:	10800017 	ldw	r2,0(r2)
  230540:	e0fffd17 	ldw	r3,-12(fp)
  230544:	18c00117 	ldw	r3,4(r3)
  230548:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  23054c:	e0bffd17 	ldw	r2,-12(fp)
  230550:	10800117 	ldw	r2,4(r2)
  230554:	e0fffd17 	ldw	r3,-12(fp)
  230558:	18c00017 	ldw	r3,0(r3)
  23055c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  230560:	e0bffd17 	ldw	r2,-12(fp)
  230564:	e0fffd17 	ldw	r3,-12(fp)
  230568:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  23056c:	e0bffd17 	ldw	r2,-12(fp)
  230570:	e0fffd17 	ldw	r3,-12(fp)
  230574:	10c00015 	stw	r3,0(r2)
  230578:	e0bffb17 	ldw	r2,-20(fp)
  23057c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  230580:	e0bffe17 	ldw	r2,-8(fp)
  230584:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  230588:	0001883a 	nop
  23058c:	e037883a 	mov	sp,fp
  230590:	df000017 	ldw	fp,0(sp)
  230594:	dec00104 	addi	sp,sp,4
  230598:	f800283a 	ret

0023059c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  23059c:	defffb04 	addi	sp,sp,-20
  2305a0:	dfc00415 	stw	ra,16(sp)
  2305a4:	df000315 	stw	fp,12(sp)
  2305a8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  2305ac:	d0a02017 	ldw	r2,-32640(gp)
  2305b0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  2305b4:	d0a72c17 	ldw	r2,-25424(gp)
  2305b8:	10800044 	addi	r2,r2,1
  2305bc:	d0a72c15 	stw	r2,-25424(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  2305c0:	00002e06 	br	23067c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  2305c4:	e0bffd17 	ldw	r2,-12(fp)
  2305c8:	10800017 	ldw	r2,0(r2)
  2305cc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  2305d0:	e0bffd17 	ldw	r2,-12(fp)
  2305d4:	10800403 	ldbu	r2,16(r2)
  2305d8:	10803fcc 	andi	r2,r2,255
  2305dc:	10000426 	beq	r2,zero,2305f0 <alt_tick+0x54>
  2305e0:	d0a72c17 	ldw	r2,-25424(gp)
  2305e4:	1000021e 	bne	r2,zero,2305f0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  2305e8:	e0bffd17 	ldw	r2,-12(fp)
  2305ec:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  2305f0:	e0bffd17 	ldw	r2,-12(fp)
  2305f4:	10800217 	ldw	r2,8(r2)
  2305f8:	d0e72c17 	ldw	r3,-25424(gp)
  2305fc:	18801d36 	bltu	r3,r2,230674 <alt_tick+0xd8>
  230600:	e0bffd17 	ldw	r2,-12(fp)
  230604:	10800403 	ldbu	r2,16(r2)
  230608:	10803fcc 	andi	r2,r2,255
  23060c:	1000191e 	bne	r2,zero,230674 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  230610:	e0bffd17 	ldw	r2,-12(fp)
  230614:	10800317 	ldw	r2,12(r2)
  230618:	e0fffd17 	ldw	r3,-12(fp)
  23061c:	18c00517 	ldw	r3,20(r3)
  230620:	1809883a 	mov	r4,r3
  230624:	103ee83a 	callr	r2
  230628:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  23062c:	e0bfff17 	ldw	r2,-4(fp)
  230630:	1000031e 	bne	r2,zero,230640 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  230634:	e13ffd17 	ldw	r4,-12(fp)
  230638:	02305000 	call	230500 <alt_alarm_stop>
  23063c:	00000d06 	br	230674 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  230640:	e0bffd17 	ldw	r2,-12(fp)
  230644:	10c00217 	ldw	r3,8(r2)
  230648:	e0bfff17 	ldw	r2,-4(fp)
  23064c:	1887883a 	add	r3,r3,r2
  230650:	e0bffd17 	ldw	r2,-12(fp)
  230654:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  230658:	e0bffd17 	ldw	r2,-12(fp)
  23065c:	10c00217 	ldw	r3,8(r2)
  230660:	d0a72c17 	ldw	r2,-25424(gp)
  230664:	1880032e 	bgeu	r3,r2,230674 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  230668:	e0bffd17 	ldw	r2,-12(fp)
  23066c:	00c00044 	movi	r3,1
  230670:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  230674:	e0bffe17 	ldw	r2,-8(fp)
  230678:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  23067c:	e0fffd17 	ldw	r3,-12(fp)
  230680:	d0a02004 	addi	r2,gp,-32640
  230684:	18bfcf1e 	bne	r3,r2,2305c4 <_gp+0xffff5a3c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  230688:	0001883a 	nop
}
  23068c:	0001883a 	nop
  230690:	e037883a 	mov	sp,fp
  230694:	dfc00117 	ldw	ra,4(sp)
  230698:	df000017 	ldw	fp,0(sp)
  23069c:	dec00204 	addi	sp,sp,8
  2306a0:	f800283a 	ret

002306a4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  2306a4:	defffb04 	addi	sp,sp,-20
  2306a8:	df000415 	stw	fp,16(sp)
  2306ac:	df000404 	addi	fp,sp,16
  2306b0:	e13ffe15 	stw	r4,-8(fp)
  2306b4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  2306b8:	e0bfff17 	ldw	r2,-4(fp)
  2306bc:	10820070 	cmpltui	r2,r2,2049
  2306c0:	1000021e 	bne	r2,zero,2306cc <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  2306c4:	00820004 	movi	r2,2048
  2306c8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  2306cc:	e0fffe17 	ldw	r3,-8(fp)
  2306d0:	e0bfff17 	ldw	r2,-4(fp)
  2306d4:	1885883a 	add	r2,r3,r2
  2306d8:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  2306dc:	e0bffe17 	ldw	r2,-8(fp)
  2306e0:	e0bffc15 	stw	r2,-16(fp)
  2306e4:	00000506 	br	2306fc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  2306e8:	e0bffc17 	ldw	r2,-16(fp)
  2306ec:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  2306f0:	e0bffc17 	ldw	r2,-16(fp)
  2306f4:	10800804 	addi	r2,r2,32
  2306f8:	e0bffc15 	stw	r2,-16(fp)
  2306fc:	e0fffc17 	ldw	r3,-16(fp)
  230700:	e0bffd17 	ldw	r2,-12(fp)
  230704:	18bff836 	bltu	r3,r2,2306e8 <_gp+0xffff5b60>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  230708:	e0bffe17 	ldw	r2,-8(fp)
  23070c:	108007cc 	andi	r2,r2,31
  230710:	10000226 	beq	r2,zero,23071c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  230714:	e0bffc17 	ldw	r2,-16(fp)
  230718:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  23071c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  230720:	0001883a 	nop
  230724:	e037883a 	mov	sp,fp
  230728:	df000017 	ldw	fp,0(sp)
  23072c:	dec00104 	addi	sp,sp,4
  230730:	f800283a 	ret

00230734 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  230734:	defffe04 	addi	sp,sp,-8
  230738:	df000115 	stw	fp,4(sp)
  23073c:	df000104 	addi	fp,sp,4
  230740:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  230744:	e0bfff17 	ldw	r2,-4(fp)
  230748:	10bffe84 	addi	r2,r2,-6
  23074c:	10c00428 	cmpgeui	r3,r2,16
  230750:	18001a1e 	bne	r3,zero,2307bc <alt_exception_cause_generated_bad_addr+0x88>
  230754:	100690ba 	slli	r3,r2,2
  230758:	008008f4 	movhi	r2,35
  23075c:	1081db04 	addi	r2,r2,1900
  230760:	1885883a 	add	r2,r3,r2
  230764:	10800017 	ldw	r2,0(r2)
  230768:	1000683a 	jmp	r2
  23076c:	002307ac 	andhi	zero,zero,35870
  230770:	002307ac 	andhi	zero,zero,35870
  230774:	002307bc 	xorhi	zero,zero,35870
  230778:	002307bc 	xorhi	zero,zero,35870
  23077c:	002307bc 	xorhi	zero,zero,35870
  230780:	002307ac 	andhi	zero,zero,35870
  230784:	002307b4 	movhi	zero,35870
  230788:	002307bc 	xorhi	zero,zero,35870
  23078c:	002307ac 	andhi	zero,zero,35870
  230790:	002307ac 	andhi	zero,zero,35870
  230794:	002307bc 	xorhi	zero,zero,35870
  230798:	002307ac 	andhi	zero,zero,35870
  23079c:	002307b4 	movhi	zero,35870
  2307a0:	002307bc 	xorhi	zero,zero,35870
  2307a4:	002307bc 	xorhi	zero,zero,35870
  2307a8:	002307ac 	andhi	zero,zero,35870
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  2307ac:	00800044 	movi	r2,1
  2307b0:	00000306 	br	2307c0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  2307b4:	0005883a 	mov	r2,zero
  2307b8:	00000106 	br	2307c0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  2307bc:	0005883a 	mov	r2,zero
  }
}
  2307c0:	e037883a 	mov	sp,fp
  2307c4:	df000017 	ldw	fp,0(sp)
  2307c8:	dec00104 	addi	sp,sp,4
  2307cc:	f800283a 	ret

002307d0 <atexit>:
  2307d0:	200b883a 	mov	r5,r4
  2307d4:	000f883a 	mov	r7,zero
  2307d8:	000d883a 	mov	r6,zero
  2307dc:	0009883a 	mov	r4,zero
  2307e0:	02308981 	jmpi	230898 <__register_exitproc>

002307e4 <exit>:
  2307e4:	defffe04 	addi	sp,sp,-8
  2307e8:	000b883a 	mov	r5,zero
  2307ec:	dc000015 	stw	r16,0(sp)
  2307f0:	dfc00115 	stw	ra,4(sp)
  2307f4:	2021883a 	mov	r16,r4
  2307f8:	02309b00 	call	2309b0 <__call_exitprocs>
  2307fc:	008008f4 	movhi	r2,35
  230800:	108ae204 	addi	r2,r2,11144
  230804:	11000017 	ldw	r4,0(r2)
  230808:	20800f17 	ldw	r2,60(r4)
  23080c:	10000126 	beq	r2,zero,230814 <exit+0x30>
  230810:	103ee83a 	callr	r2
  230814:	8009883a 	mov	r4,r16
  230818:	0230b300 	call	230b30 <_exit>

0023081c <memcmp>:
  23081c:	01c000c4 	movi	r7,3
  230820:	3980192e 	bgeu	r7,r6,230888 <memcmp+0x6c>
  230824:	2144b03a 	or	r2,r4,r5
  230828:	11c4703a 	and	r2,r2,r7
  23082c:	10000f26 	beq	r2,zero,23086c <memcmp+0x50>
  230830:	20800003 	ldbu	r2,0(r4)
  230834:	28c00003 	ldbu	r3,0(r5)
  230838:	10c0151e 	bne	r2,r3,230890 <memcmp+0x74>
  23083c:	31bfff84 	addi	r6,r6,-2
  230840:	01ffffc4 	movi	r7,-1
  230844:	00000406 	br	230858 <memcmp+0x3c>
  230848:	20800003 	ldbu	r2,0(r4)
  23084c:	28c00003 	ldbu	r3,0(r5)
  230850:	31bfffc4 	addi	r6,r6,-1
  230854:	10c00e1e 	bne	r2,r3,230890 <memcmp+0x74>
  230858:	21000044 	addi	r4,r4,1
  23085c:	29400044 	addi	r5,r5,1
  230860:	31fff91e 	bne	r6,r7,230848 <_gp+0xffff5cc0>
  230864:	0005883a 	mov	r2,zero
  230868:	f800283a 	ret
  23086c:	20c00017 	ldw	r3,0(r4)
  230870:	28800017 	ldw	r2,0(r5)
  230874:	18bfee1e 	bne	r3,r2,230830 <_gp+0xffff5ca8>
  230878:	31bfff04 	addi	r6,r6,-4
  23087c:	21000104 	addi	r4,r4,4
  230880:	29400104 	addi	r5,r5,4
  230884:	39bff936 	bltu	r7,r6,23086c <_gp+0xffff5ce4>
  230888:	303fe91e 	bne	r6,zero,230830 <_gp+0xffff5ca8>
  23088c:	003ff506 	br	230864 <_gp+0xffff5cdc>
  230890:	10c5c83a 	sub	r2,r2,r3
  230894:	f800283a 	ret

00230898 <__register_exitproc>:
  230898:	defffa04 	addi	sp,sp,-24
  23089c:	dc000315 	stw	r16,12(sp)
  2308a0:	040008f4 	movhi	r16,35
  2308a4:	840ae204 	addi	r16,r16,11144
  2308a8:	80c00017 	ldw	r3,0(r16)
  2308ac:	dc400415 	stw	r17,16(sp)
  2308b0:	dfc00515 	stw	ra,20(sp)
  2308b4:	18805217 	ldw	r2,328(r3)
  2308b8:	2023883a 	mov	r17,r4
  2308bc:	10003726 	beq	r2,zero,23099c <__register_exitproc+0x104>
  2308c0:	10c00117 	ldw	r3,4(r2)
  2308c4:	010007c4 	movi	r4,31
  2308c8:	20c00e16 	blt	r4,r3,230904 <__register_exitproc+0x6c>
  2308cc:	1a000044 	addi	r8,r3,1
  2308d0:	8800221e 	bne	r17,zero,23095c <__register_exitproc+0xc4>
  2308d4:	18c00084 	addi	r3,r3,2
  2308d8:	18c7883a 	add	r3,r3,r3
  2308dc:	18c7883a 	add	r3,r3,r3
  2308e0:	12000115 	stw	r8,4(r2)
  2308e4:	10c7883a 	add	r3,r2,r3
  2308e8:	19400015 	stw	r5,0(r3)
  2308ec:	0005883a 	mov	r2,zero
  2308f0:	dfc00517 	ldw	ra,20(sp)
  2308f4:	dc400417 	ldw	r17,16(sp)
  2308f8:	dc000317 	ldw	r16,12(sp)
  2308fc:	dec00604 	addi	sp,sp,24
  230900:	f800283a 	ret
  230904:	00800034 	movhi	r2,0
  230908:	10800004 	addi	r2,r2,0
  23090c:	10002626 	beq	r2,zero,2309a8 <__register_exitproc+0x110>
  230910:	01006404 	movi	r4,400
  230914:	d9400015 	stw	r5,0(sp)
  230918:	d9800115 	stw	r6,4(sp)
  23091c:	d9c00215 	stw	r7,8(sp)
  230920:	00000000 	call	0 <__alt_mem_OnChip_Memory-0x220000>
  230924:	d9400017 	ldw	r5,0(sp)
  230928:	d9800117 	ldw	r6,4(sp)
  23092c:	d9c00217 	ldw	r7,8(sp)
  230930:	10001d26 	beq	r2,zero,2309a8 <__register_exitproc+0x110>
  230934:	81000017 	ldw	r4,0(r16)
  230938:	10000115 	stw	zero,4(r2)
  23093c:	02000044 	movi	r8,1
  230940:	22405217 	ldw	r9,328(r4)
  230944:	0007883a 	mov	r3,zero
  230948:	12400015 	stw	r9,0(r2)
  23094c:	20805215 	stw	r2,328(r4)
  230950:	10006215 	stw	zero,392(r2)
  230954:	10006315 	stw	zero,396(r2)
  230958:	883fde26 	beq	r17,zero,2308d4 <_gp+0xffff5d4c>
  23095c:	18c9883a 	add	r4,r3,r3
  230960:	2109883a 	add	r4,r4,r4
  230964:	1109883a 	add	r4,r2,r4
  230968:	21802215 	stw	r6,136(r4)
  23096c:	01800044 	movi	r6,1
  230970:	12406217 	ldw	r9,392(r2)
  230974:	30cc983a 	sll	r6,r6,r3
  230978:	4992b03a 	or	r9,r9,r6
  23097c:	12406215 	stw	r9,392(r2)
  230980:	21c04215 	stw	r7,264(r4)
  230984:	01000084 	movi	r4,2
  230988:	893fd21e 	bne	r17,r4,2308d4 <_gp+0xffff5d4c>
  23098c:	11006317 	ldw	r4,396(r2)
  230990:	218cb03a 	or	r6,r4,r6
  230994:	11806315 	stw	r6,396(r2)
  230998:	003fce06 	br	2308d4 <_gp+0xffff5d4c>
  23099c:	18805304 	addi	r2,r3,332
  2309a0:	18805215 	stw	r2,328(r3)
  2309a4:	003fc606 	br	2308c0 <_gp+0xffff5d38>
  2309a8:	00bfffc4 	movi	r2,-1
  2309ac:	003fd006 	br	2308f0 <_gp+0xffff5d68>

002309b0 <__call_exitprocs>:
  2309b0:	defff504 	addi	sp,sp,-44
  2309b4:	df000915 	stw	fp,36(sp)
  2309b8:	dd400615 	stw	r21,24(sp)
  2309bc:	dc800315 	stw	r18,12(sp)
  2309c0:	dfc00a15 	stw	ra,40(sp)
  2309c4:	ddc00815 	stw	r23,32(sp)
  2309c8:	dd800715 	stw	r22,28(sp)
  2309cc:	dd000515 	stw	r20,20(sp)
  2309d0:	dcc00415 	stw	r19,16(sp)
  2309d4:	dc400215 	stw	r17,8(sp)
  2309d8:	dc000115 	stw	r16,4(sp)
  2309dc:	d9000015 	stw	r4,0(sp)
  2309e0:	2839883a 	mov	fp,r5
  2309e4:	04800044 	movi	r18,1
  2309e8:	057fffc4 	movi	r21,-1
  2309ec:	008008f4 	movhi	r2,35
  2309f0:	108ae204 	addi	r2,r2,11144
  2309f4:	12000017 	ldw	r8,0(r2)
  2309f8:	45005217 	ldw	r20,328(r8)
  2309fc:	44c05204 	addi	r19,r8,328
  230a00:	a0001c26 	beq	r20,zero,230a74 <__call_exitprocs+0xc4>
  230a04:	a0800117 	ldw	r2,4(r20)
  230a08:	15ffffc4 	addi	r23,r2,-1
  230a0c:	b8000d16 	blt	r23,zero,230a44 <__call_exitprocs+0x94>
  230a10:	14000044 	addi	r16,r2,1
  230a14:	8421883a 	add	r16,r16,r16
  230a18:	8421883a 	add	r16,r16,r16
  230a1c:	84402004 	addi	r17,r16,128
  230a20:	a463883a 	add	r17,r20,r17
  230a24:	a421883a 	add	r16,r20,r16
  230a28:	e0001e26 	beq	fp,zero,230aa4 <__call_exitprocs+0xf4>
  230a2c:	80804017 	ldw	r2,256(r16)
  230a30:	e0801c26 	beq	fp,r2,230aa4 <__call_exitprocs+0xf4>
  230a34:	bdffffc4 	addi	r23,r23,-1
  230a38:	843fff04 	addi	r16,r16,-4
  230a3c:	8c7fff04 	addi	r17,r17,-4
  230a40:	bd7ff91e 	bne	r23,r21,230a28 <_gp+0xffff5ea0>
  230a44:	00800034 	movhi	r2,0
  230a48:	10800004 	addi	r2,r2,0
  230a4c:	10000926 	beq	r2,zero,230a74 <__call_exitprocs+0xc4>
  230a50:	a0800117 	ldw	r2,4(r20)
  230a54:	1000301e 	bne	r2,zero,230b18 <__call_exitprocs+0x168>
  230a58:	a0800017 	ldw	r2,0(r20)
  230a5c:	10003226 	beq	r2,zero,230b28 <__call_exitprocs+0x178>
  230a60:	a009883a 	mov	r4,r20
  230a64:	98800015 	stw	r2,0(r19)
  230a68:	00000000 	call	0 <__alt_mem_OnChip_Memory-0x220000>
  230a6c:	9d000017 	ldw	r20,0(r19)
  230a70:	a03fe41e 	bne	r20,zero,230a04 <_gp+0xffff5e7c>
  230a74:	dfc00a17 	ldw	ra,40(sp)
  230a78:	df000917 	ldw	fp,36(sp)
  230a7c:	ddc00817 	ldw	r23,32(sp)
  230a80:	dd800717 	ldw	r22,28(sp)
  230a84:	dd400617 	ldw	r21,24(sp)
  230a88:	dd000517 	ldw	r20,20(sp)
  230a8c:	dcc00417 	ldw	r19,16(sp)
  230a90:	dc800317 	ldw	r18,12(sp)
  230a94:	dc400217 	ldw	r17,8(sp)
  230a98:	dc000117 	ldw	r16,4(sp)
  230a9c:	dec00b04 	addi	sp,sp,44
  230aa0:	f800283a 	ret
  230aa4:	a0800117 	ldw	r2,4(r20)
  230aa8:	80c00017 	ldw	r3,0(r16)
  230aac:	10bfffc4 	addi	r2,r2,-1
  230ab0:	15c01426 	beq	r2,r23,230b04 <__call_exitprocs+0x154>
  230ab4:	80000015 	stw	zero,0(r16)
  230ab8:	183fde26 	beq	r3,zero,230a34 <_gp+0xffff5eac>
  230abc:	95c8983a 	sll	r4,r18,r23
  230ac0:	a0806217 	ldw	r2,392(r20)
  230ac4:	a5800117 	ldw	r22,4(r20)
  230ac8:	2084703a 	and	r2,r4,r2
  230acc:	10000b26 	beq	r2,zero,230afc <__call_exitprocs+0x14c>
  230ad0:	a0806317 	ldw	r2,396(r20)
  230ad4:	2088703a 	and	r4,r4,r2
  230ad8:	20000c1e 	bne	r4,zero,230b0c <__call_exitprocs+0x15c>
  230adc:	89400017 	ldw	r5,0(r17)
  230ae0:	d9000017 	ldw	r4,0(sp)
  230ae4:	183ee83a 	callr	r3
  230ae8:	a0800117 	ldw	r2,4(r20)
  230aec:	15bfbf1e 	bne	r2,r22,2309ec <_gp+0xffff5e64>
  230af0:	98800017 	ldw	r2,0(r19)
  230af4:	153fcf26 	beq	r2,r20,230a34 <_gp+0xffff5eac>
  230af8:	003fbc06 	br	2309ec <_gp+0xffff5e64>
  230afc:	183ee83a 	callr	r3
  230b00:	003ff906 	br	230ae8 <_gp+0xffff5f60>
  230b04:	a5c00115 	stw	r23,4(r20)
  230b08:	003feb06 	br	230ab8 <_gp+0xffff5f30>
  230b0c:	89000017 	ldw	r4,0(r17)
  230b10:	183ee83a 	callr	r3
  230b14:	003ff406 	br	230ae8 <_gp+0xffff5f60>
  230b18:	a0800017 	ldw	r2,0(r20)
  230b1c:	a027883a 	mov	r19,r20
  230b20:	1029883a 	mov	r20,r2
  230b24:	003fb606 	br	230a00 <_gp+0xffff5e78>
  230b28:	0005883a 	mov	r2,zero
  230b2c:	003ffb06 	br	230b1c <_gp+0xffff5f94>

00230b30 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  230b30:	defffd04 	addi	sp,sp,-12
  230b34:	df000215 	stw	fp,8(sp)
  230b38:	df000204 	addi	fp,sp,8
  230b3c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  230b40:	0001883a 	nop
  230b44:	e0bfff17 	ldw	r2,-4(fp)
  230b48:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  230b4c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  230b50:	10000226 	beq	r2,zero,230b5c <_exit+0x2c>
    ALT_SIM_FAIL();
  230b54:	002af070 	cmpltui	zero,zero,43969
  230b58:	00000106 	br	230b60 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  230b5c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  230b60:	003fff06 	br	230b60 <_gp+0xffff5fd8>
