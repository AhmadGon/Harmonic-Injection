-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ThreeSines_DrSaher\Sines_topde2.vhd
-- Created: 2020-02-04 20:32:39
-- 
-- Generated by MATLAB 9.4 and HDL Coder 3.12
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Sines_topde2
-- Source Path: Sines_topde2
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Sines_topde2 IS
  PORT( CLKIN                             :   IN    std_logic;  -- ufix1
        Push_3                            :   IN    std_logic;  -- ufix1
        Push_2                            :   IN    std_logic;  -- ufix1
        Push_0                            :   IN    std_logic;  -- ufix1
        SW1                               :   IN    std_logic;  -- ufix1
        SW0                               :   IN    std_logic;  -- ufix1
        Push_1                            :   IN    std_logic;  -- ufix1
        SW2                               :   IN    std_logic;  -- ufix1
        Reload                            :   IN    std_logic;  -- ufix1
        SW7                               :   IN    std_logic;  -- ufix1
        SW8                               :   IN    std_logic;  -- ufix1
        SW9                               :   IN    std_logic;  -- ufix1
        SW10                              :   IN    std_logic;  -- ufix1
        SW15                              :   IN    std_logic;  -- ufix1
        reset_1                           :   IN    std_logic;  -- ufix1
        CLK_1                             :   OUT   std_logic;  -- ufix1
        Sync_n                            :   OUT   std_logic;  -- ufix1
        Blank_n                           :   OUT   std_logic;  -- ufix1
        HEX0_O                            :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
        HEX1_O                            :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
        HEX2_O                            :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
        HEX3_O                            :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
        Phase_A                           :   OUT   std_logic;  -- ufix1
        Phase_A_1                         :   OUT   std_logic;  -- ufix1
        Phase_B                           :   OUT   std_logic;  -- ufix1
        Phase_B_1                         :   OUT   std_logic;  -- ufix1
        Phase_C                           :   OUT   std_logic;  -- ufix1
        Phase_C_1                         :   OUT   std_logic;  -- ufix1
        PhaseB_Analog                     :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
        PhaseC_Tri_Analog                 :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
        HEX5                              :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
        HEX4                              :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
        PhaseA_Analog                     :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
        Sample_Pulse                      :   OUT   std_logic;  -- ufix1
        PhaseA_PWM                        :   OUT   std_logic;  -- ufix1
        PhaseB_PWM                        :   OUT   std_logic;  -- ufix1
        PhaseC_PWM                        :   OUT   std_logic  -- ufix1
        );
END Sines_topde2;


ARCHITECTURE rtl OF Sines_topde2 IS

  -- Component Declarations
  COMPONENT Sines_topde2_clock_module
    PORT( inclk                           :   IN    std_logic;  -- ufix1
          areset                          :   IN    std_logic;  -- ufix1
          clk_1                           :   OUT   std_logic;
          sysreset                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Sines
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          Push_3                          :   IN    std_logic;  -- ufix1
          Push_2                          :   IN    std_logic;  -- ufix1
          Push_0                          :   IN    std_logic;  -- ufix1
          SW1                             :   IN    std_logic;  -- ufix1
          SW0                             :   IN    std_logic;  -- ufix1
          Push_1                          :   IN    std_logic;  -- ufix1
          SW2                             :   IN    std_logic;  -- ufix1
          Reload                          :   IN    std_logic;  -- ufix1
          SW7                             :   IN    std_logic;  -- ufix1
          SW8                             :   IN    std_logic;  -- ufix1
          SW9                             :   IN    std_logic;  -- ufix1
          SW10                            :   IN    std_logic;  -- ufix1
          SW15                            :   IN    std_logic;  -- ufix1
          reset_1                         :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          CLK_1                           :   OUT   std_logic;  -- ufix1
          Sync_n                          :   OUT   std_logic;  -- ufix1
          Blank_n                         :   OUT   std_logic;  -- ufix1
          HEX0_O                          :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
          HEX1_O                          :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
          HEX2_O                          :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
          HEX3_O                          :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
          Phase_A                         :   OUT   std_logic;  -- ufix1
          Phase_A_1                       :   OUT   std_logic;  -- ufix1
          Phase_B                         :   OUT   std_logic;  -- ufix1
          Phase_B_1                       :   OUT   std_logic;  -- ufix1
          Phase_C                         :   OUT   std_logic;  -- ufix1
          Phase_C_1                       :   OUT   std_logic;  -- ufix1
          PhaseB_Analog                   :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
          PhaseC_Tri_Analog               :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
          LEDG0                           :   OUT   std_logic;  -- ufix1
          LEDG1                           :   OUT   std_logic;  -- ufix1
          LEDG2                           :   OUT   std_logic;  -- ufix1
          HEX5                            :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
          HEX4                            :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
          PhaseA_Analog                   :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
          Sample_Pulse                    :   OUT   std_logic;  -- ufix1
          PhaseA_PWM                      :   OUT   std_logic;  -- ufix1
          PhaseB_PWM                      :   OUT   std_logic;  -- ufix1
          PhaseC_PWM                      :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Sines_topde2_clock_module
    USE ENTITY work.Sines_topde2_clock_module(rtl);

  FOR ALL : Sines
    USE ENTITY work.Sines(rtl);

  -- Signals
  SIGNAL clk                              : std_logic;
  SIGNAL reset                            : std_logic;
  SIGNAL enb                              : std_logic;
  SIGNAL const_1                          : std_logic;  -- ufix1
  SIGNAL const_0                          : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL CLK_1_sig                        : std_logic;  -- ufix1
  SIGNAL Sync_n_sig                       : std_logic;  -- ufix1
  SIGNAL Blank_n_sig                      : std_logic;  -- ufix1
  SIGNAL HEX0_O_sig                       : std_logic_vector(6 DOWNTO 0);  -- ufix7
  SIGNAL HEX1_O_sig                       : std_logic_vector(6 DOWNTO 0);  -- ufix7
  SIGNAL HEX2_O_sig                       : std_logic_vector(6 DOWNTO 0);  -- ufix7
  SIGNAL HEX3_O_sig                       : std_logic_vector(6 DOWNTO 0);  -- ufix7
  SIGNAL Phase_A_sig                      : std_logic;  -- ufix1
  SIGNAL Phase_A_1_sig                    : std_logic;  -- ufix1
  SIGNAL Phase_B_sig                      : std_logic;  -- ufix1
  SIGNAL Phase_B_1_sig                    : std_logic;  -- ufix1
  SIGNAL Phase_C_sig                      : std_logic;  -- ufix1
  SIGNAL Phase_C_1_sig                    : std_logic;  -- ufix1
  SIGNAL PhaseB_Analog_sig                : std_logic_vector(9 DOWNTO 0);  -- ufix10
  SIGNAL PhaseC_Tri_Analog_sig            : std_logic_vector(9 DOWNTO 0);  -- ufix10
  SIGNAL LEDG0_sig                        : std_logic;  -- ufix1
  SIGNAL LEDG1_sig                        : std_logic;  -- ufix1
  SIGNAL LEDG2_sig                        : std_logic;  -- ufix1
  SIGNAL HEX5_sig                         : std_logic_vector(6 DOWNTO 0);  -- ufix7
  SIGNAL HEX4_sig                         : std_logic_vector(6 DOWNTO 0);  -- ufix7
  SIGNAL PhaseA_Analog_sig                : std_logic_vector(9 DOWNTO 0);  -- ufix10
  SIGNAL Sample_Pulse_sig                 : std_logic;  -- ufix1
  SIGNAL PhaseA_PWM_sig                   : std_logic;  -- ufix1
  SIGNAL PhaseB_PWM_sig                   : std_logic;  -- ufix1
  SIGNAL PhaseC_PWM_sig                   : std_logic;  -- ufix1

BEGIN
  u_Sines_topde2_clock_module_inst : Sines_topde2_clock_module
    PORT MAP( inclk => CLKIN,  -- ufix1
              areset => const_0,  -- ufix1
              clk_1 => clk,
              sysreset => reset
              );

  u_Sines : Sines
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              Push_3 => Push_3,  -- ufix1
              Push_2 => Push_2,  -- ufix1
              Push_0 => Push_0,  -- ufix1
              SW1 => SW1,  -- ufix1
              SW0 => SW0,  -- ufix1
              Push_1 => Push_1,  -- ufix1
              SW2 => SW2,  -- ufix1
              Reload => Reload,  -- ufix1
              SW7 => SW7,  -- ufix1
              SW8 => SW8,  -- ufix1
              SW9 => SW9,  -- ufix1
              SW10 => SW10,  -- ufix1
              SW15 => SW15,  -- ufix1
              reset_1 => reset_1,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              CLK_1 => CLK_1_sig,  -- ufix1
              Sync_n => Sync_n_sig,  -- ufix1
              Blank_n => Blank_n_sig,  -- ufix1
              HEX0_O => HEX0_O_sig,  -- ufix7
              HEX1_O => HEX1_O_sig,  -- ufix7
              HEX2_O => HEX2_O_sig,  -- ufix7
              HEX3_O => HEX3_O_sig,  -- ufix7
              Phase_A => Phase_A_sig,  -- ufix1
              Phase_A_1 => Phase_A_1_sig,  -- ufix1
              Phase_B => Phase_B_sig,  -- ufix1
              Phase_B_1 => Phase_B_1_sig,  -- ufix1
              Phase_C => Phase_C_sig,  -- ufix1
              Phase_C_1 => Phase_C_1_sig,  -- ufix1
              PhaseB_Analog => PhaseB_Analog_sig,  -- ufix10
              PhaseC_Tri_Analog => PhaseC_Tri_Analog_sig,  -- ufix10
              LEDG0 => LEDG0_sig,  -- ufix1
              LEDG1 => LEDG1_sig,  -- ufix1
              LEDG2 => LEDG2_sig,  -- ufix1
              HEX5 => HEX5_sig,  -- ufix7
              HEX4 => HEX4_sig,  -- ufix7
              PhaseA_Analog => PhaseA_Analog_sig,  -- ufix10
              Sample_Pulse => Sample_Pulse_sig,  -- ufix1
              PhaseA_PWM => PhaseA_PWM_sig,  -- ufix1
              PhaseB_PWM => PhaseB_PWM_sig,  -- ufix1
              PhaseC_PWM => PhaseC_PWM_sig  -- ufix1
              );

  const_1 <= '1';

  enb <= const_1;

  const_0 <= '0';

  CLK_1 <= CLK_1_sig;

  Sync_n <= Sync_n_sig;

  Blank_n <= Blank_n_sig;

  HEX0_O <= HEX0_O_sig;

  HEX1_O <= HEX1_O_sig;

  HEX2_O <= HEX2_O_sig;

  HEX3_O <= HEX3_O_sig;

  Phase_A <= Phase_A_sig;

  Phase_A_1 <= Phase_A_1_sig;

  Phase_B <= Phase_B_sig;

  Phase_B_1 <= Phase_B_1_sig;

  Phase_C <= Phase_C_sig;

  Phase_C_1 <= Phase_C_1_sig;

  PhaseB_Analog <= PhaseB_Analog_sig;

  PhaseC_Tri_Analog <= PhaseC_Tri_Analog_sig;

  HEX5 <= HEX5_sig;

  HEX4 <= HEX4_sig;

  PhaseA_Analog <= PhaseA_Analog_sig;

  Sample_Pulse <= Sample_Pulse_sig;

  PhaseA_PWM <= PhaseA_PWM_sig;

  PhaseB_PWM <= PhaseB_PWM_sig;

  PhaseC_PWM <= PhaseC_PWM_sig;

END rtl;

